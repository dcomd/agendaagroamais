{"ast":null,"code":"var _jsxFileName = \"/Users/alexandre.nepomuceno/Documents/agenda/src/pages/Home.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-enterprise';\nimport '@inovua/reactdatagrid-enterprise/index.css';\nimport NumberFilter from '@inovua/reactdatagrid-community/NumberFilter';\nimport SelectFilter from '@inovua/reactdatagrid-community/SelectFilter';\nimport DateFilter from '@inovua/reactdatagrid-community/DateFilter';\nimport CheckBox from '@inovua/reactdatagrid-community/packages/CheckBox';\nimport people from './people';\nimport flags from './flags';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst gridStyle = {\n  minHeight: 600\n};\nconst COUNTRIES = {\n  ca: 'Canada',\n  uk: 'United Kingdom',\n  usa: 'United States of America'\n};\nconst countries = people.reduce((countries, p) => {\n  if (countries.filter(c => c.id == p.country).length) {\n    return countries;\n  }\n  countries.push({\n    id: p.country,\n    label: COUNTRIES[p.country] || p.country\n  });\n  return countries;\n}, []);\nconst filterValue = [{\n  name: 'name',\n  operator: 'startsWith',\n  type: 'string',\n  value: ''\n}, {\n  name: 'age',\n  operator: 'gte',\n  type: 'number',\n  value: 21\n}, {\n  name: 'city',\n  operator: 'startsWith',\n  type: 'string',\n  value: ''\n}, {\n  name: 'birthDate',\n  operator: 'before',\n  type: 'date',\n  value: ''\n}, {\n  name: 'country',\n  operator: 'eq',\n  type: 'select',\n  value: 'ca'\n}];\nconst columns = [{\n  name: 'id',\n  header: 'Id',\n  defaultVisible: false,\n  defaultWidth: 80,\n  type: 'number'\n}, {\n  name: 'name',\n  header: 'Name',\n  defaultFlex: 1,\n  enableColumnFilterContextMenu: true\n}, {\n  name: 'age',\n  header: 'Age',\n  defaultFlex: 1,\n  type: 'number',\n  filterEditor: NumberFilter\n}, {\n  name: 'country',\n  header: 'Country',\n  defaultFlex: 1,\n  filterEditor: SelectFilter,\n  filterEditorProps: {\n    placeholder: 'All',\n    dataSource: countries\n  },\n  render: _ref => {\n    let {\n      value\n    } = _ref;\n    return flags[value] ? flags[value] : value;\n  }\n}, {\n  name: 'birthDate',\n  header: 'Birth date',\n  defaultFlex: 1,\n  minWidth: 200,\n  enableColumnFilterContextMenu: false,\n  filterEditor: DateFilter,\n  filterEditorProps: (props, _ref2) => {\n    let {\n      index\n    } = _ref2;\n    // for range and notinrange operators, the index is 1 for the after field\n    return {\n      dateFormat: 'MM-DD-YYYY',\n      cancelButton: false,\n      highlightWeekends: false,\n      placeholder: index == 1 ? 'Created date is before...' : 'Created date is after...'\n    };\n  },\n  render: _ref3 => {\n    let {\n      value,\n      cellProps\n    } = _ref3;\n    return moment(value).format('MM-DD-YYYY');\n  }\n}, {\n  name: 'city',\n  header: 'City',\n  defaultFlex: 1\n}];\nconst App = () => {\n  _s();\n  const [enableColumnFilterContextMenu, setEnableColumnFilterContextMenu] = useState(true);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Grid with filter context menu control\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"The 'name' column has \\\"enableColumnFilterContextMenu\\\" setted to 'true' and 'birthDate' has \\\"enableColumnFilterContextMenu\\\" setted to 'false' at the column level.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: 20\n      },\n      children: /*#__PURE__*/_jsxDEV(CheckBox, {\n        checked: enableColumnFilterContextMenu,\n        onChange: setEnableColumnFilterContextMenu,\n        children: \"Enable column filter context menu\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ReactDataGrid, {\n      idProperty: \"id\",\n      style: gridStyle,\n      defaultFilterValue: filterValue,\n      columns: columns,\n      dataSource: people,\n      enableColumnFilterContextMenu: enableColumnFilterContextMenu\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"sTZXQ1hRwSI5i8WdfRaX6xzLrHw=\");\n_c = App;\nexport default (() => /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 118,\n  columnNumber: 22\n}, this));\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","ReactDataGrid","NumberFilter","SelectFilter","DateFilter","CheckBox","people","flags","jsxDEV","_jsxDEV","gridStyle","minHeight","COUNTRIES","ca","uk","usa","countries","reduce","p","filter","c","id","country","length","push","label","filterValue","name","operator","type","value","columns","header","defaultVisible","defaultWidth","defaultFlex","enableColumnFilterContextMenu","filterEditor","filterEditorProps","placeholder","dataSource","render","_ref","minWidth","props","_ref2","index","dateFormat","cancelButton","highlightWeekends","_ref3","cellProps","moment","format","App","_s","setEnableColumnFilterContextMenu","children","fileName","_jsxFileName","lineNumber","columnNumber","style","marginBottom","checked","onChange","idProperty","defaultFilterValue","_c","$RefreshReg$"],"sources":["/Users/alexandre.nepomuceno/Documents/agenda/src/pages/Home.js"],"sourcesContent":["import React, { useState }from 'react'\n\nimport ReactDataGrid from '@inovua/reactdatagrid-enterprise'\nimport '@inovua/reactdatagrid-enterprise/index.css'\n\nimport NumberFilter from '@inovua/reactdatagrid-community/NumberFilter'\nimport SelectFilter from '@inovua/reactdatagrid-community/SelectFilter'\nimport DateFilter from '@inovua/reactdatagrid-community/DateFilter'\n\nimport CheckBox from '@inovua/reactdatagrid-community/packages/CheckBox';\n\nimport people from './people'\nimport flags from './flags'\n\nconst gridStyle = { minHeight: 600 }\n\nconst COUNTRIES = {\n  ca: 'Canada',\n  uk: 'United Kingdom',\n  usa: 'United States of America'\n}\n\nconst countries = people.reduce((countries, p) => {\n  if (countries.filter(c => c.id == p.country).length) {\n    return countries\n  }\n  countries.push({\n    id: p.country,\n    label: COUNTRIES[p.country] || p.country\n  })\n\n  return countries\n}, []);\n\nconst filterValue = [\n  { name: 'name', operator: 'startsWith', type: 'string', value: '' },\n  { name: 'age', operator: 'gte', type: 'number', value: 21 },\n  { name: 'city', operator: 'startsWith', type: 'string', value: '' },\n  {\n    name: 'birthDate',\n    operator: 'before',\n    type: 'date',\n    value: ''\n  },\n  { name: 'country', operator: 'eq', type: 'select', value: 'ca' }\n];\n\nconst columns = [\n  { name: 'id', header: 'Id', defaultVisible: false, defaultWidth: 80, type: 'number' },\n  { name: 'name', header: 'Name', defaultFlex: 1, enableColumnFilterContextMenu: true },\n  { name: 'age', header: 'Age', defaultFlex: 1, type: 'number', filterEditor: NumberFilter },\n  {\n    name: 'country',\n    header: 'Country',\n    defaultFlex: 1,\n    filterEditor: SelectFilter,\n    filterEditorProps: {\n      placeholder: 'All',\n      dataSource: countries\n    },\n    render: ({ value })=> flags[value]? flags[value]: value\n  },\n  {\n    name: 'birthDate',\n    header: 'Birth date',\n    defaultFlex: 1,\n    minWidth: 200,\n    enableColumnFilterContextMenu: false,\n    filterEditor: DateFilter,\n    filterEditorProps: (props, { index }) => {\n      // for range and notinrange operators, the index is 1 for the after field\n      return {\n        dateFormat: 'MM-DD-YYYY',\n        cancelButton: false,\n        highlightWeekends: false,\n        placeholder: index == 1 ? 'Created date is before...': 'Created date is after...'\n      }\n    },\n    render: ({ value, cellProps }) => {\n      return moment(value).format('MM-DD-YYYY')\n    }\n  },\n  { name: 'city', header: 'City', defaultFlex: 1 },\n];\n\nconst App = () => {\n  const [enableColumnFilterContextMenu, setEnableColumnFilterContextMenu] = useState(true);\n\n  return (\n    <div>\n      <h3>Grid with filter context menu control</h3>\n\n      <p>\n        The 'name' column has \"enableColumnFilterContextMenu\" setted to 'true' \n        and 'birthDate' has \"enableColumnFilterContextMenu\" setted to 'false' \n        at the column level.\n      </p>\n\n      <div style={{ marginBottom: 20 }}>\n        <CheckBox\n          checked={enableColumnFilterContextMenu}\n          onChange={setEnableColumnFilterContextMenu}\n        >Enable column filter context menu</CheckBox>\n      </div>\n\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        defaultFilterValue={filterValue}\n        columns={columns}\n        dataSource={people}\n        enableColumnFilterContextMenu={enableColumnFilterContextMenu}\n      />\n    </div>\n  )\n}\n\nexport default () => <App />"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}