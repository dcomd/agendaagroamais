{"ast":null,"code":"/** \n * Copyright Â© INOVUA TRADING.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\nvar _react = require(\"react\");\nvar _batchUpdate = _interopRequireDefault(require(\"../../utils/batchUpdate\"));\nvar _handleSelection = require(\"./handleSelection\");\nvar _handleRowNavigation = _interopRequireDefault(require(\"./handleRowNavigation\"));\nvar _handleCellNavigation = _interopRequireDefault(require(\"./handleCellNavigation\"));\nvar _containsNode = _interopRequireDefault(require(\"../../common/containsNode\"));\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      (0, _defineProperty2.default)(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n  return target;\n}\nvar _default = function _default(props, computedProps, computedPropsRef) {\n  var computedOnKeyDown = function computedOnKeyDown(event) {\n    if (props.onKeyDown) {\n      props.onKeyDown(event);\n    }\n    var computedProps = computedPropsRef.current;\n    if (!computedProps) {\n      return;\n    }\n    if (event.nativeEvent && event.nativeEvent.__handled_in_details) {\n      return;\n    }\n    var sameElement = event.target === computedProps.getScrollingElement();\n    var handled = false;\n    if (event.key === 'Escape' && !sameElement && computedProps.autoFocusOnEditEscape) {\n      handled = true;\n      computedProps.focus();\n    }\n    if (!sameElement) {\n      return;\n    }\n    if (computedProps.computedHasRowNavigation) {\n      handled = (0, _handleRowNavigation.default)(event, computedProps);\n    } else if (computedProps.computedCellNavigationEnabled) {\n      handled = (0, _handleCellNavigation.default)(event, computedProps);\n    }\n    var activeItem = computedProps.computedActiveItem;\n    var activeIndex = computedProps.computedActiveIndex;\n    var isGroup = computedProps.isGroup(activeItem);\n    var rowExpandEnabled = computedProps.computedRowExpandEnabled;\n    var rowExpandable = activeItem && computedProps.isRowExpandableAt ? computedProps.isRowExpandableAt(activeIndex) : false;\n    var rowExpanded = rowExpandable && activeItem ? computedProps.isRowExpanded(activeItem) : false;\n    var treeEnabled = computedProps.computedTreeEnabled;\n    var nodeExpandable = treeEnabled && activeItem && computedProps.isNodeExpandableAt ? computedProps.isNodeExpandableAt(activeIndex) : false;\n    var nodeExpanded = treeEnabled && activeItem && computedProps.isNodeExpanded ? computedProps.isNodeExpanded(activeItem) : false;\n    var rowSelectionEnabled = computedProps.computedRowSelectionEnabled;\n    var keyShortcutArg = {\n      event: event,\n      data: activeItem,\n      index: activeIndex,\n      activeItem: activeItem,\n      activeIndex: activeIndex,\n      handle: computedPropsRef,\n      isGroup: isGroup,\n      treeEnabled: treeEnabled,\n      rowSelectionEnabled: rowSelectionEnabled,\n      nodeExpandable: nodeExpandable,\n      nodeExpanded: nodeExpanded,\n      rowExpandEnabled: rowExpandEnabled,\n      rowExpandable: rowExpandable,\n      rowExpanded: rowExpanded\n    };\n    var editKeyPressed = !!computedProps.isStartEditKeyPressed(keyShortcutArg);\n    var expandKeyPressed = !!computedProps.isExpandKeyPressed(keyShortcutArg);\n    var collapseKeyPressed = !expandKeyPressed ? computedProps.isCollapseKeyPressed(keyShortcutArg) : false;\n    if (expandKeyPressed) {\n      handled = true;\n    }\n    if (expandKeyPressed && activeItem) {\n      if (rowExpandEnabled && rowExpandable && !rowExpanded) {\n        computedProps.setRowExpandedAt(activeIndex, true);\n      } else {\n        if (isGroup) {\n          computedProps.expandGroup(activeItem);\n        } else if (treeEnabled && nodeExpandable && !nodeExpanded) {\n          computedProps.setNodeExpandedAt(activeIndex, true);\n        }\n      }\n    }\n    if (collapseKeyPressed) {\n      handled = true;\n    }\n    if (collapseKeyPressed && activeItem) {\n      if (rowExpandEnabled && rowExpandable && rowExpanded) {\n        computedProps.setRowExpandedAt(activeIndex, false);\n      } else {\n        if (isGroup) {\n          computedProps.collapseGroup(activeItem);\n        } else if (treeEnabled && nodeExpandable && nodeExpanded) {\n          computedProps.setNodeExpandedAt(activeIndex, false);\n        }\n      }\n    }\n    if (editKeyPressed) {\n      handled = true;\n      if (computedProps.visibleColumns && computedProps.visibleColumns.length) {\n        if (computedProps.tryStartEdit) {\n          computedProps.tryStartEdit({\n            rowIndex: activeItem ? activeIndex : 0,\n            columnId: computedProps.visibleColumns[0].id,\n            dir: 1\n          });\n        }\n      }\n    }\n    if (activeItem && event.key === 'Enter') {\n      if (rowExpandEnabled && rowExpandable) {\n        if (!rowSelectionEnabled) {\n          computedProps.toggleRowExpand(activeIndex);\n          handled = true;\n        }\n      } else {\n        if (isGroup) {\n          computedProps.toggleGroup(activeItem);\n          handled = true;\n        } else if (nodeExpandable && !rowSelectionEnabled && computedProps.computedTreeEnabled) {\n          computedProps.toggleNodeExpand(activeItem);\n          handled = true;\n        }\n      }\n    }\n    if (handled) {\n      event.preventDefault();\n      if (event.nativeEvent) {\n        event.nativeEvent.__handled_in_details = true;\n      }\n    }\n    if (computedProps.enableClipboard) {\n      var cellSelection = !!computedProps.computedCellSelection;\n      var checkboxColumn = !!computedProps.checkboxColumn;\n      var selected = !!computedProps.computedSelected;\n      if ((event.ctrlKey || event.metaKey) && event.key == 'c') {\n        if (checkboxColumn || selected) {\n          computedProps.copySelectedRowsToClipboard && computedProps.copySelectedRowsToClipboard();\n        } else if (cellSelection) {\n          computedProps.copySelectedCellsToClipboard && computedProps.copySelectedCellsToClipboard();\n        } else {\n          computedProps.copyActiveRowToClipboard && computedProps.copyActiveRowToClipboard();\n        }\n      }\n      if ((event.ctrlKey || event.metaKey) && event.key == 'v') {\n        if (checkboxColumn || selected) {\n          computedProps.pasteSelectedRowsFromClipboard && computedProps.pasteSelectedRowsFromClipboard();\n        } else if (cellSelection) {\n          computedProps.pasteSelectedCellsFromClipboard && computedProps.pasteSelectedCellsFromClipboard();\n        } else {\n          computedProps.pasteActiveRowFromClipboard && computedProps.pasteActiveRowFromClipboard();\n        }\n      }\n    }\n  };\n  var onFullBlur = (0, _react.useCallback)(function (_event) {}, []);\n  var isGroup = (0, _react.useCallback)(function (item) {\n    return !!item && !!item.__group;\n  }, []);\n  var computedOnFocus = (0, _react.useCallback)(function (event) {\n    var computedProps = computedPropsRef.current;\n    if (!computedProps) {\n      return;\n    }\n    event.preventDefault();\n    if (props.onFocus) {\n      props.onFocus(event);\n    }\n    if (event.nativeEvent.preventParentFocus) {\n      onFullBlur(event);\n      return;\n    }\n    event.nativeEvent.preventParentFocus = true;\n    if (computedProps.computedWillReceiveFocusRef.current) {\n      computedProps.computedWillReceiveFocusRef.current = false;\n      return;\n    }\n    if (!computedProps.computedFocused) {\n      computedProps.computedSetFocused(true);\n    }\n  }, []);\n  var computedOnBlur = (0, _react.useCallback)(function (event) {\n    var computedProps = computedPropsRef.current;\n    if (!computedProps) {\n      return;\n    }\n    if (computedProps.isInEdit.current) {\n      return;\n    }\n    event.preventDefault();\n    if (computedProps.preventBlurOnContextMenuOpen && computedProps.preventBlurOnContextMenuOpen.current) {\n      return;\n    }\n    var domNode = computedProps.getDOMNode();\n    if (event.relatedTarget && (0, _containsNode.default)(domNode, event.relatedTarget)) {\n      return;\n    }\n    if (props.onBlur) {\n      props.onBlur(event);\n    }\n    var computedActiveIndex = computedProps.computedActiveIndex;\n    if (computedActiveIndex >= 0) {\n      computedProps.doSetLastActiveIndex(computedActiveIndex);\n    }\n    computedProps.setActiveIndex(-1);\n    computedProps.computedSetFocused(false);\n  }, []);\n  var onGroupRowClick = (0, _react.useCallback)(function (rowProps, _ref, queue) {\n    var enableKeyboardNavigation = _ref.enableKeyboardNavigation,\n      setActiveIndex = _ref.setActiveIndex;\n    if (rowProps.groupProps || rowProps.data && rowProps.data.__group) {\n      if (enableKeyboardNavigation) {\n        queue(function () {\n          setActiveIndex(rowProps.rowIndex);\n        });\n      }\n      queue.commit();\n      return true;\n    }\n    return false;\n  }, []);\n  var handleRowSelectionOnClick = function handleRowSelectionOnClick(event, rowProps, computedProps, queue) {\n    if (event.nativeEvent.skipSelect) {\n      if (computedProps.enableKeyboardNavigation) {\n        queue(function () {\n          computedProps.setActiveIndex(rowProps.rowIndex);\n        });\n      }\n      queue.commit();\n      return;\n    }\n    var shiftKey = event.shiftKey,\n      metaKey = event.metaKey,\n      ctrlKey = event.ctrlKey;\n    var multiSelectKey = shiftKey || metaKey || ctrlKey;\n    var autoCheckboxColumn = props.autoCheckboxColumn;\n    if (autoCheckboxColumn && multiSelectKey) {\n      return;\n    }\n    if ((0, _handleSelection.handleSelection)(rowProps, computedProps, event, queue) !== false) {\n      queue(function () {\n        computedProps.setActiveIndex(rowProps.rowIndex);\n      });\n    }\n  };\n  var computedOnRowMouseDown = (0, _react.useCallback)(function () {}, []);\n  var computedOnRowClick = (0, _react.useCallback)(function (event, rowProps) {\n    var computedProps = computedPropsRef.current;\n    if (!computedProps) {\n      return;\n    }\n    var preventRowSelectionOnClickWithMouseMove = computedProps.preventRowSelectionOnClickWithMouseMove,\n      initialProps = computedProps.initialProps;\n    if (initialProps.onRowClick) {\n      initialProps.onRowClick({\n        rowIndex: rowProps.rowIndex,\n        remoteRowIndex: rowProps.remoteRowIndex,\n        groupProps: rowProps.groupProps,\n        empty: rowProps.empty,\n        columns: rowProps.columns,\n        dataSourceArray: rowProps.dataSourceArray,\n        data: rowProps.data\n      }, event);\n    }\n    var queue = (0, _batchUpdate.default)();\n    var lastMouseDownEventProps = computedProps.lastMouseDownEventPropsRef.current;\n    var mouseDidNotMove = event.type !== 'click';\n    if (lastMouseDownEventProps && event.type === 'click') {\n      var pageX = lastMouseDownEventProps.pageX,\n        pageY = lastMouseDownEventProps.pageY,\n        rowIndex = lastMouseDownEventProps.rowIndex;\n      mouseDidNotMove = pageX === Math.floor(event.pageX) && pageY === Math.floor(event.pageY) && rowIndex === rowProps.rowIndex;\n    }\n    if (!computedProps.computedFocused) {\n      queue(function () {\n        computedProps.computedSetFocused(true);\n      });\n    }\n    if (computedProps.computedCellSelectionEnabled) {\n      queue.commit();\n      return;\n    }\n    if (onGroupRowClick(rowProps, computedProps, queue)) {\n      queue.commit();\n      return;\n    }\n    var threshold = 20;\n    var preventRowSelection = preventRowSelectionOnClickWithMouseMove ? mouseDidNotMove : true;\n    if (preventRowSelection === false && Math.abs(lastMouseDownEventProps.pageX - event.pageX) < threshold || Math.abs(lastMouseDownEventProps.pageY - event.pageY) < threshold) {\n      preventRowSelection = true;\n    }\n    if ((!props.checkboxOnlyRowSelect || event.type !== 'click') && preventRowSelection) {\n      handleRowSelectionOnClick(event, rowProps, computedProps, queue);\n    } else {\n      if (computedProps.enableKeyboardNavigation && computedProps.computedHasRowNavigation) {\n        queue(function () {\n          computedProps.setActiveIndex(rowProps.rowIndex);\n        });\n      }\n    }\n    queue.commit();\n  }, []);\n  var computedRowDoubleClick = (0, _react.useCallback)(function (event, rowProps) {\n    var computedProps = computedPropsRef.current;\n    if (!computedProps) {\n      return;\n    }\n    if (computedProps.onRowDoubleClick) {\n      computedProps.onRowDoubleClick(event, rowProps);\n    }\n  }, []);\n  var computedCellDoubleClick = (0, _react.useCallback)(function (event, cellProps) {\n    var computedProps = computedPropsRef.current;\n    if (!computedProps) {\n      return;\n    }\n    if (computedProps.onCellDoubleClick) {\n      computedProps.onCellDoubleClick(event, cellProps);\n    }\n  }, []);\n  var onCellClickAction = (0, _react.useCallback)(function (event, cellProps) {\n    if (cellProps.groupProps || cellProps.cellSelectable === false) {\n      return;\n    }\n    var computedProps = computedPropsRef.current;\n    if (!computedProps) {\n      return;\n    }\n    var hasCellSelection = computedProps.computedCellSelectionEnabled;\n    var cellMultiSelect = computedProps.computedCellMultiSelectionEnabled;\n    var queue = (0, _batchUpdate.default)();\n    if (hasCellSelection) {\n      var ctrlKey = event.ctrlKey || event.metaKey;\n      var append = cellMultiSelect && ctrlKey;\n      var cellCoords = [cellProps.rowIndex, cellProps.columnIndex];\n      var key = computedProps.getCellSelectionKey(cellProps);\n      var shiftKey = event.shiftKey && (computedProps.computedActiveCell || computedProps.lastSelectedCell);\n      if (shiftKey && cellMultiSelect) {\n        var cellSelection = computedProps.getCellSelectionBetween(computedProps.computedActiveCell || computedProps.lastSelectedCell || undefined, cellCoords);\n        queue(function () {\n          computedProps.setLastCellInRange(Object.keys(cellSelection).pop() || '');\n          computedProps.setCellSelection(cellSelection);\n        });\n      } else {\n        var cellSelectionMap = computedProps.computedCellSelection;\n        var isSelected = !!cellSelectionMap[key];\n        var newCellSelectionMap = append ? Object.assign({}, cellSelectionMap) : {};\n        if (isSelected && (cellMultiSelect || computedProps.initialProps.toggleCellSelectOnClick || ctrlKey)) {\n          delete newCellSelectionMap[key];\n        } else {\n          if (!shiftKey) {\n            queue(function () {\n              computedProps.setLastSelectedCell(cellCoords);\n            });\n          }\n          newCellSelectionMap[key] = true;\n        }\n        queue(function () {\n          computedProps.setCellSelection(newCellSelectionMap);\n        });\n      }\n    }\n    var shouldSetActiveCell = computedProps.computedCellNavigationEnabled && (!event.shiftKey || !cellMultiSelect);\n    queue(function () {\n      if (shouldSetActiveCell) {\n        computedProps.setActiveCell([cellProps.rowIndex, cellProps.columnIndex]);\n      }\n    });\n    queue.commit();\n  }, []);\n  var setItemAtAsSelected = (0, _react.useCallback)(function (index, event) {\n    var computedProps = computedPropsRef.current;\n    if (!computedProps) {\n      return;\n    }\n    var computedRowSelectionEnabled = computedProps.computedRowSelectionEnabled,\n      getItemAt = computedProps.getItemAt,\n      getItemId = computedProps.getItemId;\n    var item = getItemAt(index);\n    var itemId = item ? getItemId(item) : undefined;\n    if (itemId === undefined) {\n      return;\n    }\n    if (computedRowSelectionEnabled) {\n      (0, _handleSelection.handleSelection)({\n        rowIndex: index,\n        data: item\n      }, computedProps, event || {\n        nativeEvent: null\n      });\n    }\n  }, []);\n  var selectionIndexRef = (0, _react.useRef)(null);\n  var shiftKeyIndexRef = (0, _react.useRef)(null);\n  var lastMouseDownEventPropsRef = (0, _react.useRef)({\n    rowIndex: -1,\n    pageX: -1,\n    pageY: -1\n  });\n  var computedOnCellMouseDown = (0, _react.useCallback)(function (event, cellProps) {\n    lastMouseDownEventPropsRef.current = {\n      rowIndex: cellProps.rowIndex,\n      pageX: Math.floor(event.pageX),\n      pageY: Math.floor(event.pageY)\n    };\n    var computedProps = computedPropsRef.current;\n    if (!computedProps) {\n      return;\n    }\n    if (computedProps.columnUserSelect && event.shiftKey && computedProps.preventDefaultTextSelectionOnShiftMouseDown) {\n      event.preventDefault();\n    }\n    computedProps.onCellClickAction(event, cellProps);\n    if (computedProps.onCellSelectionDraggerMouseDown) {\n      computedProps.onCellSelectionDraggerMouseDown(event, cellProps);\n    }\n  }, []);\n  var computedActiveIndex = computedProps.computedActiveIndex;\n  return {\n    selectionIndexRef: selectionIndexRef,\n    shiftKeyIndexRef: shiftKeyIndexRef,\n    onCellClickAction: onCellClickAction,\n    computedCellDoubleClick: computedCellDoubleClick,\n    computedOnKeyDown: computedOnKeyDown,\n    computedOnFocus: computedOnFocus,\n    computedOnBlur: computedOnBlur,\n    computedOnRowClick: computedOnRowClick,\n    computedRowDoubleClick: computedRowDoubleClick,\n    computedOnRowMouseDown: computedOnRowMouseDown,\n    computedOnCellMouseDown: computedOnCellMouseDown,\n    isGroup: isGroup,\n    computedActiveItem: computedActiveIndex !== -1 && computedProps.data ? computedProps.data[computedActiveIndex] : null,\n    lastMouseDownEventPropsRef: lastMouseDownEventPropsRef,\n    toggleActiveRowSelection: function toggleActiveRowSelection(event) {\n      var computedProps = computedPropsRef.current;\n      if (!computedProps) {\n        return;\n      }\n      var computedActiveIndex = computedProps.computedActiveIndex;\n      if (computedActiveIndex == -1) {\n        return;\n      }\n      setItemAtAsSelected(computedActiveIndex, event);\n    },\n    rowProps: _objectSpread(_objectSpread({}, computedProps.initialProps.rowProps), {}, {\n      onMouseDown: function onMouseDown(event) {\n        if (computedProps.initialProps.rowProps && computedProps.initialProps.rowProps.onMouseDown) {\n          computedProps.initialProps.rowProps.onMouseDown(event);\n        }\n        if (!computedProps.computedFocused && computedProps.enableKeyboardNavigation) {\n          computedProps.computedWillReceiveFocusRef.current = true;\n        }\n      }\n    })\n  };\n};\nexports.default = _default;","map":{"version":3,"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","default","_defineProperty2","_react","_batchUpdate","_handleSelection","_handleRowNavigation","_handleCellNavigation","_containsNode","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","getOwnPropertyDescriptors","defineProperties","_default","props","computedProps","computedPropsRef","computedOnKeyDown","event","onKeyDown","current","nativeEvent","__handled_in_details","sameElement","getScrollingElement","handled","autoFocusOnEditEscape","focus","computedHasRowNavigation","computedCellNavigationEnabled","activeItem","computedActiveItem","activeIndex","computedActiveIndex","isGroup","rowExpandEnabled","computedRowExpandEnabled","rowExpandable","isRowExpandableAt","rowExpanded","isRowExpanded","treeEnabled","computedTreeEnabled","nodeExpandable","isNodeExpandableAt","nodeExpanded","isNodeExpanded","rowSelectionEnabled","computedRowSelectionEnabled","keyShortcutArg","data","index","handle","editKeyPressed","isStartEditKeyPressed","expandKeyPressed","isExpandKeyPressed","collapseKeyPressed","isCollapseKeyPressed","setRowExpandedAt","expandGroup","setNodeExpandedAt","collapseGroup","visibleColumns","tryStartEdit","rowIndex","columnId","id","dir","toggleRowExpand","toggleGroup","toggleNodeExpand","preventDefault","enableClipboard","cellSelection","computedCellSelection","checkboxColumn","selected","computedSelected","ctrlKey","metaKey","copySelectedRowsToClipboard","copySelectedCellsToClipboard","copyActiveRowToClipboard","pasteSelectedRowsFromClipboard","pasteSelectedCellsFromClipboard","pasteActiveRowFromClipboard","onFullBlur","useCallback","_event","item","__group","computedOnFocus","onFocus","preventParentFocus","computedWillReceiveFocusRef","computedFocused","computedSetFocused","computedOnBlur","isInEdit","preventBlurOnContextMenuOpen","domNode","getDOMNode","relatedTarget","onBlur","doSetLastActiveIndex","setActiveIndex","onGroupRowClick","rowProps","_ref","queue","enableKeyboardNavigation","groupProps","commit","handleRowSelectionOnClick","skipSelect","shiftKey","multiSelectKey","autoCheckboxColumn","handleSelection","computedOnRowMouseDown","computedOnRowClick","preventRowSelectionOnClickWithMouseMove","initialProps","onRowClick","remoteRowIndex","empty","columns","dataSourceArray","lastMouseDownEventProps","lastMouseDownEventPropsRef","mouseDidNotMove","type","pageX","pageY","Math","floor","computedCellSelectionEnabled","threshold","preventRowSelection","abs","checkboxOnlyRowSelect","computedRowDoubleClick","onRowDoubleClick","computedCellDoubleClick","cellProps","onCellDoubleClick","onCellClickAction","cellSelectable","hasCellSelection","cellMultiSelect","computedCellMultiSelectionEnabled","append","cellCoords","columnIndex","getCellSelectionKey","computedActiveCell","lastSelectedCell","getCellSelectionBetween","undefined","setLastCellInRange","pop","setCellSelection","cellSelectionMap","isSelected","newCellSelectionMap","assign","toggleCellSelectOnClick","setLastSelectedCell","shouldSetActiveCell","setActiveCell","setItemAtAsSelected","getItemAt","getItemId","itemId","selectionIndexRef","useRef","shiftKeyIndexRef","computedOnCellMouseDown","columnUserSelect","preventDefaultTextSelectionOnShiftMouseDown","onCellSelectionDraggerMouseDown","toggleActiveRowSelection","onMouseDown"],"sources":["/Users/alexandre.nepomuceno/Documents/agenda/node_modules/@inovua/reactdatagrid-community/hooks/useRow/index.js"],"sourcesContent":["/** \n * Copyright Â© INOVUA TRADING.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\nvar _react = require(\"react\");\nvar _batchUpdate = _interopRequireDefault(require(\"../../utils/batchUpdate\"));\nvar _handleSelection = require(\"./handleSelection\");\nvar _handleRowNavigation = _interopRequireDefault(require(\"./handleRowNavigation\"));\nvar _handleCellNavigation = _interopRequireDefault(require(\"./handleCellNavigation\"));\nvar _containsNode = _interopRequireDefault(require(\"../../common/containsNode\"));\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nvar _default = function _default(props, computedProps, computedPropsRef) {\n  var computedOnKeyDown = function computedOnKeyDown(event) {\n    if (props.onKeyDown) {\n      props.onKeyDown(event);\n    }\n    var computedProps = computedPropsRef.current;\n    if (!computedProps) {\n      return;\n    }\n    if (event.nativeEvent && event.nativeEvent.__handled_in_details) {\n      return;\n    }\n    var sameElement = event.target === computedProps.getScrollingElement();\n    var handled = false;\n    if (event.key === 'Escape' && !sameElement && computedProps.autoFocusOnEditEscape) {\n      handled = true;\n      computedProps.focus();\n    }\n    if (!sameElement) {\n      return;\n    }\n    if (computedProps.computedHasRowNavigation) {\n      handled = (0, _handleRowNavigation.default)(event, computedProps);\n    } else if (computedProps.computedCellNavigationEnabled) {\n      handled = (0, _handleCellNavigation.default)(event, computedProps);\n    }\n    var activeItem = computedProps.computedActiveItem;\n    var activeIndex = computedProps.computedActiveIndex;\n    var isGroup = computedProps.isGroup(activeItem);\n    var rowExpandEnabled = computedProps.computedRowExpandEnabled;\n    var rowExpandable = activeItem && computedProps.isRowExpandableAt ? computedProps.isRowExpandableAt(activeIndex) : false;\n    var rowExpanded = rowExpandable && activeItem ? computedProps.isRowExpanded(activeItem) : false;\n    var treeEnabled = computedProps.computedTreeEnabled;\n    var nodeExpandable = treeEnabled && activeItem && computedProps.isNodeExpandableAt ? computedProps.isNodeExpandableAt(activeIndex) : false;\n    var nodeExpanded = treeEnabled && activeItem && computedProps.isNodeExpanded ? computedProps.isNodeExpanded(activeItem) : false;\n    var rowSelectionEnabled = computedProps.computedRowSelectionEnabled;\n    var keyShortcutArg = {\n      event: event,\n      data: activeItem,\n      index: activeIndex,\n      activeItem: activeItem,\n      activeIndex: activeIndex,\n      handle: computedPropsRef,\n      isGroup: isGroup,\n      treeEnabled: treeEnabled,\n      rowSelectionEnabled: rowSelectionEnabled,\n      nodeExpandable: nodeExpandable,\n      nodeExpanded: nodeExpanded,\n      rowExpandEnabled: rowExpandEnabled,\n      rowExpandable: rowExpandable,\n      rowExpanded: rowExpanded\n    };\n    var editKeyPressed = !!computedProps.isStartEditKeyPressed(keyShortcutArg);\n    var expandKeyPressed = !!computedProps.isExpandKeyPressed(keyShortcutArg);\n    var collapseKeyPressed = !expandKeyPressed ? computedProps.isCollapseKeyPressed(keyShortcutArg) : false;\n    if (expandKeyPressed) {\n      handled = true;\n    }\n    if (expandKeyPressed && activeItem) {\n      if (rowExpandEnabled && rowExpandable && !rowExpanded) {\n        computedProps.setRowExpandedAt(activeIndex, true);\n      } else {\n        if (isGroup) {\n          computedProps.expandGroup(activeItem);\n        } else if (treeEnabled && nodeExpandable && !nodeExpanded) {\n          computedProps.setNodeExpandedAt(activeIndex, true);\n        }\n      }\n    }\n    if (collapseKeyPressed) {\n      handled = true;\n    }\n    if (collapseKeyPressed && activeItem) {\n      if (rowExpandEnabled && rowExpandable && rowExpanded) {\n        computedProps.setRowExpandedAt(activeIndex, false);\n      } else {\n        if (isGroup) {\n          computedProps.collapseGroup(activeItem);\n        } else if (treeEnabled && nodeExpandable && nodeExpanded) {\n          computedProps.setNodeExpandedAt(activeIndex, false);\n        }\n      }\n    }\n    if (editKeyPressed) {\n      handled = true;\n      if (computedProps.visibleColumns && computedProps.visibleColumns.length) {\n        if (computedProps.tryStartEdit) {\n          computedProps.tryStartEdit({\n            rowIndex: activeItem ? activeIndex : 0,\n            columnId: computedProps.visibleColumns[0].id,\n            dir: 1\n          });\n        }\n      }\n    }\n    if (activeItem && event.key === 'Enter') {\n      if (rowExpandEnabled && rowExpandable) {\n        if (!rowSelectionEnabled) {\n          computedProps.toggleRowExpand(activeIndex);\n          handled = true;\n        }\n      } else {\n        if (isGroup) {\n          computedProps.toggleGroup(activeItem);\n          handled = true;\n        } else if (nodeExpandable && !rowSelectionEnabled && computedProps.computedTreeEnabled) {\n          computedProps.toggleNodeExpand(activeItem);\n          handled = true;\n        }\n      }\n    }\n    if (handled) {\n      event.preventDefault();\n      if (event.nativeEvent) {\n        event.nativeEvent.__handled_in_details = true;\n      }\n    }\n    if (computedProps.enableClipboard) {\n      var cellSelection = !!computedProps.computedCellSelection;\n      var checkboxColumn = !!computedProps.checkboxColumn;\n      var selected = !!computedProps.computedSelected;\n      if ((event.ctrlKey || event.metaKey) && event.key == 'c') {\n        if (checkboxColumn || selected) {\n          computedProps.copySelectedRowsToClipboard && computedProps.copySelectedRowsToClipboard();\n        } else if (cellSelection) {\n          computedProps.copySelectedCellsToClipboard && computedProps.copySelectedCellsToClipboard();\n        } else {\n          computedProps.copyActiveRowToClipboard && computedProps.copyActiveRowToClipboard();\n        }\n      }\n      if ((event.ctrlKey || event.metaKey) && event.key == 'v') {\n        if (checkboxColumn || selected) {\n          computedProps.pasteSelectedRowsFromClipboard && computedProps.pasteSelectedRowsFromClipboard();\n        } else if (cellSelection) {\n          computedProps.pasteSelectedCellsFromClipboard && computedProps.pasteSelectedCellsFromClipboard();\n        } else {\n          computedProps.pasteActiveRowFromClipboard && computedProps.pasteActiveRowFromClipboard();\n        }\n      }\n    }\n  };\n  var onFullBlur = (0, _react.useCallback)(function (_event) {}, []);\n  var isGroup = (0, _react.useCallback)(function (item) {\n    return !!item && !!item.__group;\n  }, []);\n  var computedOnFocus = (0, _react.useCallback)(function (event) {\n    var computedProps = computedPropsRef.current;\n    if (!computedProps) {\n      return;\n    }\n    event.preventDefault();\n    if (props.onFocus) {\n      props.onFocus(event);\n    }\n    if (event.nativeEvent.preventParentFocus) {\n      onFullBlur(event);\n      return;\n    }\n    event.nativeEvent.preventParentFocus = true;\n    if (computedProps.computedWillReceiveFocusRef.current) {\n      computedProps.computedWillReceiveFocusRef.current = false;\n      return;\n    }\n    if (!computedProps.computedFocused) {\n      computedProps.computedSetFocused(true);\n    }\n  }, []);\n  var computedOnBlur = (0, _react.useCallback)(function (event) {\n    var computedProps = computedPropsRef.current;\n    if (!computedProps) {\n      return;\n    }\n    if (computedProps.isInEdit.current) {\n      return;\n    }\n    event.preventDefault();\n    if (computedProps.preventBlurOnContextMenuOpen && computedProps.preventBlurOnContextMenuOpen.current) {\n      return;\n    }\n    var domNode = computedProps.getDOMNode();\n    if (event.relatedTarget && (0, _containsNode.default)(domNode, event.relatedTarget)) {\n      return;\n    }\n    if (props.onBlur) {\n      props.onBlur(event);\n    }\n    var computedActiveIndex = computedProps.computedActiveIndex;\n    if (computedActiveIndex >= 0) {\n      computedProps.doSetLastActiveIndex(computedActiveIndex);\n    }\n    computedProps.setActiveIndex(-1);\n    computedProps.computedSetFocused(false);\n  }, []);\n  var onGroupRowClick = (0, _react.useCallback)(function (rowProps, _ref, queue) {\n    var enableKeyboardNavigation = _ref.enableKeyboardNavigation,\n      setActiveIndex = _ref.setActiveIndex;\n    if (rowProps.groupProps || rowProps.data && rowProps.data.__group) {\n      if (enableKeyboardNavigation) {\n        queue(function () {\n          setActiveIndex(rowProps.rowIndex);\n        });\n      }\n      queue.commit();\n      return true;\n    }\n    return false;\n  }, []);\n  var handleRowSelectionOnClick = function handleRowSelectionOnClick(event, rowProps, computedProps, queue) {\n    if (event.nativeEvent.skipSelect) {\n      if (computedProps.enableKeyboardNavigation) {\n        queue(function () {\n          computedProps.setActiveIndex(rowProps.rowIndex);\n        });\n      }\n      queue.commit();\n      return;\n    }\n    var shiftKey = event.shiftKey,\n      metaKey = event.metaKey,\n      ctrlKey = event.ctrlKey;\n    var multiSelectKey = shiftKey || metaKey || ctrlKey;\n    var autoCheckboxColumn = props.autoCheckboxColumn;\n    if (autoCheckboxColumn && multiSelectKey) {\n      return;\n    }\n    if ((0, _handleSelection.handleSelection)(rowProps, computedProps, event, queue) !== false) {\n      queue(function () {\n        computedProps.setActiveIndex(rowProps.rowIndex);\n      });\n    }\n  };\n  var computedOnRowMouseDown = (0, _react.useCallback)(function () {}, []);\n  var computedOnRowClick = (0, _react.useCallback)(function (event, rowProps) {\n    var computedProps = computedPropsRef.current;\n    if (!computedProps) {\n      return;\n    }\n    var preventRowSelectionOnClickWithMouseMove = computedProps.preventRowSelectionOnClickWithMouseMove,\n      initialProps = computedProps.initialProps;\n    if (initialProps.onRowClick) {\n      initialProps.onRowClick({\n        rowIndex: rowProps.rowIndex,\n        remoteRowIndex: rowProps.remoteRowIndex,\n        groupProps: rowProps.groupProps,\n        empty: rowProps.empty,\n        columns: rowProps.columns,\n        dataSourceArray: rowProps.dataSourceArray,\n        data: rowProps.data\n      }, event);\n    }\n    var queue = (0, _batchUpdate.default)();\n    var lastMouseDownEventProps = computedProps.lastMouseDownEventPropsRef.current;\n    var mouseDidNotMove = event.type !== 'click';\n    if (lastMouseDownEventProps && event.type === 'click') {\n      var pageX = lastMouseDownEventProps.pageX,\n        pageY = lastMouseDownEventProps.pageY,\n        rowIndex = lastMouseDownEventProps.rowIndex;\n      mouseDidNotMove = pageX === Math.floor(event.pageX) && pageY === Math.floor(event.pageY) && rowIndex === rowProps.rowIndex;\n    }\n    if (!computedProps.computedFocused) {\n      queue(function () {\n        computedProps.computedSetFocused(true);\n      });\n    }\n    if (computedProps.computedCellSelectionEnabled) {\n      queue.commit();\n      return;\n    }\n    if (onGroupRowClick(rowProps, computedProps, queue)) {\n      queue.commit();\n      return;\n    }\n    var threshold = 20;\n    var preventRowSelection = preventRowSelectionOnClickWithMouseMove ? mouseDidNotMove : true;\n    if (preventRowSelection === false && Math.abs(lastMouseDownEventProps.pageX - event.pageX) < threshold || Math.abs(lastMouseDownEventProps.pageY - event.pageY) < threshold) {\n      preventRowSelection = true;\n    }\n    if ((!props.checkboxOnlyRowSelect || event.type !== 'click') && preventRowSelection) {\n      handleRowSelectionOnClick(event, rowProps, computedProps, queue);\n    } else {\n      if (computedProps.enableKeyboardNavigation && computedProps.computedHasRowNavigation) {\n        queue(function () {\n          computedProps.setActiveIndex(rowProps.rowIndex);\n        });\n      }\n    }\n    queue.commit();\n  }, []);\n  var computedRowDoubleClick = (0, _react.useCallback)(function (event, rowProps) {\n    var computedProps = computedPropsRef.current;\n    if (!computedProps) {\n      return;\n    }\n    if (computedProps.onRowDoubleClick) {\n      computedProps.onRowDoubleClick(event, rowProps);\n    }\n  }, []);\n  var computedCellDoubleClick = (0, _react.useCallback)(function (event, cellProps) {\n    var computedProps = computedPropsRef.current;\n    if (!computedProps) {\n      return;\n    }\n    if (computedProps.onCellDoubleClick) {\n      computedProps.onCellDoubleClick(event, cellProps);\n    }\n  }, []);\n  var onCellClickAction = (0, _react.useCallback)(function (event, cellProps) {\n    if (cellProps.groupProps || cellProps.cellSelectable === false) {\n      return;\n    }\n    var computedProps = computedPropsRef.current;\n    if (!computedProps) {\n      return;\n    }\n    var hasCellSelection = computedProps.computedCellSelectionEnabled;\n    var cellMultiSelect = computedProps.computedCellMultiSelectionEnabled;\n    var queue = (0, _batchUpdate.default)();\n    if (hasCellSelection) {\n      var ctrlKey = event.ctrlKey || event.metaKey;\n      var append = cellMultiSelect && ctrlKey;\n      var cellCoords = [cellProps.rowIndex, cellProps.columnIndex];\n      var key = computedProps.getCellSelectionKey(cellProps);\n      var shiftKey = event.shiftKey && (computedProps.computedActiveCell || computedProps.lastSelectedCell);\n      if (shiftKey && cellMultiSelect) {\n        var cellSelection = computedProps.getCellSelectionBetween(computedProps.computedActiveCell || computedProps.lastSelectedCell || undefined, cellCoords);\n        queue(function () {\n          computedProps.setLastCellInRange(Object.keys(cellSelection).pop() || '');\n          computedProps.setCellSelection(cellSelection);\n        });\n      } else {\n        var cellSelectionMap = computedProps.computedCellSelection;\n        var isSelected = !!cellSelectionMap[key];\n        var newCellSelectionMap = append ? Object.assign({}, cellSelectionMap) : {};\n        if (isSelected && (cellMultiSelect || computedProps.initialProps.toggleCellSelectOnClick || ctrlKey)) {\n          delete newCellSelectionMap[key];\n        } else {\n          if (!shiftKey) {\n            queue(function () {\n              computedProps.setLastSelectedCell(cellCoords);\n            });\n          }\n          newCellSelectionMap[key] = true;\n        }\n        queue(function () {\n          computedProps.setCellSelection(newCellSelectionMap);\n        });\n      }\n    }\n    var shouldSetActiveCell = computedProps.computedCellNavigationEnabled && (!event.shiftKey || !cellMultiSelect);\n    queue(function () {\n      if (shouldSetActiveCell) {\n        computedProps.setActiveCell([cellProps.rowIndex, cellProps.columnIndex]);\n      }\n    });\n    queue.commit();\n  }, []);\n  var setItemAtAsSelected = (0, _react.useCallback)(function (index, event) {\n    var computedProps = computedPropsRef.current;\n    if (!computedProps) {\n      return;\n    }\n    var computedRowSelectionEnabled = computedProps.computedRowSelectionEnabled,\n      getItemAt = computedProps.getItemAt,\n      getItemId = computedProps.getItemId;\n    var item = getItemAt(index);\n    var itemId = item ? getItemId(item) : undefined;\n    if (itemId === undefined) {\n      return;\n    }\n    if (computedRowSelectionEnabled) {\n      (0, _handleSelection.handleSelection)({\n        rowIndex: index,\n        data: item\n      }, computedProps, event || {\n        nativeEvent: null\n      });\n    }\n  }, []);\n  var selectionIndexRef = (0, _react.useRef)(null);\n  var shiftKeyIndexRef = (0, _react.useRef)(null);\n  var lastMouseDownEventPropsRef = (0, _react.useRef)({\n    rowIndex: -1,\n    pageX: -1,\n    pageY: -1\n  });\n  var computedOnCellMouseDown = (0, _react.useCallback)(function (event, cellProps) {\n    lastMouseDownEventPropsRef.current = {\n      rowIndex: cellProps.rowIndex,\n      pageX: Math.floor(event.pageX),\n      pageY: Math.floor(event.pageY)\n    };\n    var computedProps = computedPropsRef.current;\n    if (!computedProps) {\n      return;\n    }\n    if (computedProps.columnUserSelect && event.shiftKey && computedProps.preventDefaultTextSelectionOnShiftMouseDown) {\n      event.preventDefault();\n    }\n    computedProps.onCellClickAction(event, cellProps);\n    if (computedProps.onCellSelectionDraggerMouseDown) {\n      computedProps.onCellSelectionDraggerMouseDown(event, cellProps);\n    }\n  }, []);\n  var computedActiveIndex = computedProps.computedActiveIndex;\n  return {\n    selectionIndexRef: selectionIndexRef,\n    shiftKeyIndexRef: shiftKeyIndexRef,\n    onCellClickAction: onCellClickAction,\n    computedCellDoubleClick: computedCellDoubleClick,\n    computedOnKeyDown: computedOnKeyDown,\n    computedOnFocus: computedOnFocus,\n    computedOnBlur: computedOnBlur,\n    computedOnRowClick: computedOnRowClick,\n    computedRowDoubleClick: computedRowDoubleClick,\n    computedOnRowMouseDown: computedOnRowMouseDown,\n    computedOnCellMouseDown: computedOnCellMouseDown,\n    isGroup: isGroup,\n    computedActiveItem: computedActiveIndex !== -1 && computedProps.data ? computedProps.data[computedActiveIndex] : null,\n    lastMouseDownEventPropsRef: lastMouseDownEventPropsRef,\n    toggleActiveRowSelection: function toggleActiveRowSelection(event) {\n      var computedProps = computedPropsRef.current;\n      if (!computedProps) {\n        return;\n      }\n      var computedActiveIndex = computedProps.computedActiveIndex;\n      if (computedActiveIndex == -1) {\n        return;\n      }\n      setItemAtAsSelected(computedActiveIndex, event);\n    },\n    rowProps: _objectSpread(_objectSpread({}, computedProps.initialProps.rowProps), {}, {\n      onMouseDown: function onMouseDown(event) {\n        if (computedProps.initialProps.rowProps && computedProps.initialProps.rowProps.onMouseDown) {\n          computedProps.initialProps.rowProps.onMouseDown(event);\n        }\n        if (!computedProps.computedFocused && computedProps.enableKeyboardNavigation) {\n          computedProps.computedWillReceiveFocusRef.current = true;\n        }\n      }\n    })\n  };\n};\nexports.default = _default;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script"}