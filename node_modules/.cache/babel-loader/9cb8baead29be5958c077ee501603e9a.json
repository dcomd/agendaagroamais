{"ast":null,"code":"/** \n * Copyright Â© INOVUA TRADING.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\nvar _react = require(\"react\");\nvar _isControlledProperty = _interopRequireDefault(require(\"../../utils/isControlledProperty\"));\nvar _useProperty3 = _interopRequireDefault(require(\"../../hooks/useProperty\"));\nvar _batchUpdate = _interopRequireDefault(require(\"../../utils/batchUpdate\"));\nvar getNextSortInfoForColumn = function getNextSortInfoForColumn(currentDir, column, _ref) {\n  var allowUnsort = _ref.allowUnsort,\n    multiSort = _ref.multiSort,\n    forceDir = _ref.forceDir,\n    defaultDir = _ref.defaultDir,\n    sortFunctions = _ref.sortFunctions;\n  var newSortInfo = {\n    dir: 1,\n    id: column.id,\n    name: column.sortName || column.name || '',\n    columnName: column.name || '',\n    type: column.type\n  };\n  var sortName = newSortInfo.name;\n  if (!sortName && !column.sort) {\n    return null;\n  }\n  var sortFn = column.sort;\n  if (!sortFn && sortFunctions && sortFunctions[column.type]) {\n    sortFn = sortFunctions[column.type];\n  }\n  if (sortFn) {\n    newSortInfo.fn = function (one, two) {\n      return sortFn(one, two, column);\n    };\n  }\n  if (forceDir !== undefined) {\n    newSortInfo.dir = forceDir;\n    return newSortInfo;\n  }\n  if (defaultDir === undefined) {\n    defaultDir = 1;\n  }\n  if (defaultDir === 1) {\n    if (!currentDir) {\n      newSortInfo.dir = 1;\n    } else if (currentDir === 1) {\n      newSortInfo.dir = -1;\n    } else if (currentDir === -1) {\n      if (allowUnsort || multiSort) {\n        return null;\n      }\n      newSortInfo.dir = 1;\n    }\n  } else if (defaultDir === -1) {\n    if (!currentDir) {\n      newSortInfo.dir = -1;\n    } else if (currentDir === -1) {\n      newSortInfo.dir = 1;\n    } else if (currentDir === 1) {\n      if (allowUnsort || multiSort) {\n        return null;\n      }\n      newSortInfo.dir = 1;\n    }\n  }\n  return newSortInfo;\n};\nvar getNextSingleSortInfo = function getNextSingleSortInfo(column, currentSortInfo, _ref2) {\n  var _ref2$allowUnsort = _ref2.allowUnsort,\n    allowUnsort = _ref2$allowUnsort === void 0 ? false : _ref2$allowUnsort,\n    multiSort = _ref2.multiSort,\n    forceDir = _ref2.forceDir,\n    defaultDir = _ref2.defaultDir,\n    sortFunctions = _ref2.sortFunctions;\n  if (Array.isArray(currentSortInfo)) {\n    return null;\n  }\n  return getNextSortInfoForColumn(currentSortInfo && (currentSortInfo.name === column.id || currentSortInfo.id === column.id || currentSortInfo.name === column.sortName) ? currentSortInfo.dir : 0, column, {\n    allowUnsort: allowUnsort,\n    multiSort: multiSort,\n    forceDir: forceDir,\n    defaultDir: defaultDir,\n    sortFunctions: sortFunctions\n  });\n};\nvar getNextMultipleSortInfo = function getNextMultipleSortInfo(column, currentSortInfo, _ref3) {\n  var _ref3$allowUnsort = _ref3.allowUnsort,\n    allowUnsort = _ref3$allowUnsort === void 0 ? false : _ref3$allowUnsort,\n    forceDir = _ref3.forceDir,\n    sortFunctions = _ref3.sortFunctions;\n  var result;\n  if (!Array.isArray(currentSortInfo)) {\n    var info = getNextSingleSortInfo(column, currentSortInfo, {\n      allowUnsort: allowUnsort,\n      multiSort: true,\n      forceDir: forceDir,\n      sortFunctions: sortFunctions\n    });\n    result = [info].filter(function (x) {\n      return x;\n    });\n  } else {\n    var sortInfoIndex = currentSortInfo.findIndex(function (value) {\n      return value.id ? value.id === column.id : value.name === column.name || value.name === column.sortName;\n    });\n    var currentSortInfoForColumn = currentSortInfo[sortInfoIndex];\n    var nextSortInfoForColumn = getNextSingleSortInfo(column, currentSortInfo[sortInfoIndex], {\n      allowUnsort: allowUnsort,\n      multiSort: true,\n      forceDir: forceDir,\n      sortFunctions: sortFunctions\n    });\n    if (nextSortInfoForColumn && forceDir !== undefined) {\n      nextSortInfoForColumn.dir = forceDir;\n    }\n    result = (currentSortInfoForColumn ? [].concat((0, _toConsumableArray2.default)(currentSortInfo.slice(0, sortInfoIndex)), [nextSortInfoForColumn], (0, _toConsumableArray2.default)(currentSortInfo.slice(sortInfoIndex + 1))) : [].concat((0, _toConsumableArray2.default)(currentSortInfo), [nextSortInfoForColumn])).filter(function (x) {\n      return x;\n    });\n  }\n  return result;\n};\nvar useSortInfo = function useSortInfo(props, _, computedPropsRef) {\n  var controlled = (0, _isControlledProperty.default)(props, 'sortInfo');\n  var _useProperty = (0, _useProperty3.default)(props, 'sortInfo'),\n    _useProperty2 = (0, _slicedToArray2.default)(_useProperty, 2),\n    sortInfo = _useProperty2[0],\n    silentSetSortInfo = _useProperty2[1];\n  if (controlled) {}\n  var setSortInfo = (0, _react.useCallback)(function (sortInfo) {\n    var computedProps = computedPropsRef.current;\n    if (!computedProps) {\n      return;\n    }\n    var queue = (0, _batchUpdate.default)();\n    var computedRemoteData = computedProps.computedRemoteData;\n    queue.commit(function () {\n      if (computedProps.computedPagination && computedProps.setSkip && computedProps.computedSkip) {\n        computedProps.setSkip(0);\n      }\n      silentSetSortInfo(sortInfo);\n      if (computedRemoteData) {\n        computedProps.setLoadDataTrigger(function (loadDataTrigger) {\n          return [].concat((0, _toConsumableArray2.default)(loadDataTrigger), ['sortInfo']);\n        });\n      }\n    });\n  }, [silentSetSortInfo]);\n  var toggleColumnSort = (0, _react.useCallback)(function (colId, defaultSortingDirection) {\n    var computedProps = computedPropsRef.current;\n    if (!computedProps) {\n      return;\n    }\n    var allowUnsort = computedProps.allowUnsort;\n    var computedColumn = computedProps.getColumnBy(colId);\n    if (!computedColumn) {\n      return;\n    }\n    var sortInfo = computedProps.computedSortInfo === undefined ? null : computedProps.computedSortInfo;\n    var sortingDirection;\n    if (computedProps.defaultSortingDirection) {\n      sortingDirection = computedProps.defaultSortingDirection === 'asc' ? 1 : -1;\n    }\n    if (defaultSortingDirection) {\n      sortingDirection = defaultSortingDirection === 'asc' ? 1 : -1;\n    }\n    var computedIsMultiSort = computedProps.computedIsMultiSort;\n    var nextSortInfo = computedIsMultiSort ? getNextMultipleSortInfo(computedColumn, sortInfo, {\n      allowUnsort: allowUnsort,\n      sortFunctions: computedProps.sortFunctions\n    }) : getNextSingleSortInfo(computedColumn, sortInfo, {\n      allowUnsort: allowUnsort,\n      multiSort: false,\n      forceDir: undefined,\n      defaultDir: sortingDirection,\n      sortFunctions: computedProps.sortFunctions\n    });\n    setSortInfo(nextSortInfo);\n  }, [setSortInfo]);\n  var setColumnSortInfo = (0, _react.useCallback)(function (column, dir) {\n    var computedProps = computedPropsRef.current;\n    if (!computedProps) {\n      return;\n    }\n    var allowUnsort = computedProps.allowUnsort;\n    var computedColumn = computedProps.getColumnBy(column);\n    if (!computedColumn) {\n      return;\n    }\n    var computedIsMultiSort = computedProps.computedIsMultiSort;\n    var nextSortInfo = computedIsMultiSort ? getNextMultipleSortInfo(computedColumn, sortInfo, {\n      allowUnsort: allowUnsort,\n      forceDir: dir,\n      sortFunctions: computedProps.sortFunctions\n    }) : getNextSingleSortInfo(computedColumn, sortInfo, {\n      allowUnsort: allowUnsort,\n      multiSort: false,\n      forceDir: dir,\n      sortFunctions: computedProps.sortFunctions\n    });\n    setSortInfo(nextSortInfo);\n  }, [setSortInfo]);\n  var unsortColumn = function unsortColumn(column) {\n    var computedProps = computedPropsRef.current;\n    if (!computedProps) {\n      return;\n    }\n    var computedColumn = computedProps.getColumnBy(column);\n    if (!computedColumn) {\n      return;\n    }\n    var columnSortInfo = computedColumn.computedSortInfo;\n    if (!columnSortInfo) {\n      return;\n    }\n    var sortInfo = computedProps.computedSortInfo;\n    var newSortInfo = null;\n    if (Array.isArray(sortInfo)) {\n      newSortInfo = sortInfo.filter(function (sortInfo) {\n        if (sortInfo && (sortInfo.id === columnSortInfo.id || sortInfo.name === columnSortInfo.name)) {\n          return false;\n        }\n        return true;\n      });\n    }\n    setSortInfo(newSortInfo);\n  };\n  return {\n    computedSortInfo: sortInfo,\n    unsortColumn: unsortColumn,\n    setSortInfo: setSortInfo,\n    computedIsMultiSort: Array.isArray(sortInfo),\n    toggleColumnSort: toggleColumnSort,\n    setColumnSortInfo: setColumnSortInfo\n  };\n};\nvar _default = useSortInfo;\nexports.default = _default;","map":{"version":3,"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","default","_slicedToArray2","_toConsumableArray2","_react","_isControlledProperty","_useProperty3","_batchUpdate","getNextSortInfoForColumn","currentDir","column","_ref","allowUnsort","multiSort","forceDir","defaultDir","sortFunctions","newSortInfo","dir","id","name","sortName","columnName","type","sort","sortFn","fn","one","two","undefined","getNextSingleSortInfo","currentSortInfo","_ref2","_ref2$allowUnsort","Array","isArray","getNextMultipleSortInfo","_ref3","_ref3$allowUnsort","result","info","filter","x","sortInfoIndex","findIndex","currentSortInfoForColumn","nextSortInfoForColumn","concat","slice","useSortInfo","props","_","computedPropsRef","controlled","_useProperty","_useProperty2","sortInfo","silentSetSortInfo","setSortInfo","useCallback","computedProps","current","queue","computedRemoteData","commit","computedPagination","setSkip","computedSkip","setLoadDataTrigger","loadDataTrigger","toggleColumnSort","colId","defaultSortingDirection","computedColumn","getColumnBy","computedSortInfo","sortingDirection","computedIsMultiSort","nextSortInfo","setColumnSortInfo","unsortColumn","columnSortInfo","_default"],"sources":["/Users/alexandre.nepomuceno/Documents/agenda/node_modules/@inovua/reactdatagrid-community/plugins/sortable-columns/useSortInfo.js"],"sourcesContent":["/** \n * Copyright Â© INOVUA TRADING.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\nvar _react = require(\"react\");\nvar _isControlledProperty = _interopRequireDefault(require(\"../../utils/isControlledProperty\"));\nvar _useProperty3 = _interopRequireDefault(require(\"../../hooks/useProperty\"));\nvar _batchUpdate = _interopRequireDefault(require(\"../../utils/batchUpdate\"));\nvar getNextSortInfoForColumn = function getNextSortInfoForColumn(currentDir, column, _ref) {\n  var allowUnsort = _ref.allowUnsort,\n    multiSort = _ref.multiSort,\n    forceDir = _ref.forceDir,\n    defaultDir = _ref.defaultDir,\n    sortFunctions = _ref.sortFunctions;\n  var newSortInfo = {\n    dir: 1,\n    id: column.id,\n    name: column.sortName || column.name || '',\n    columnName: column.name || '',\n    type: column.type\n  };\n  var sortName = newSortInfo.name;\n  if (!sortName && !column.sort) {\n    return null;\n  }\n  var sortFn = column.sort;\n  if (!sortFn && sortFunctions && sortFunctions[column.type]) {\n    sortFn = sortFunctions[column.type];\n  }\n  if (sortFn) {\n    newSortInfo.fn = function (one, two) {\n      return sortFn(one, two, column);\n    };\n  }\n  if (forceDir !== undefined) {\n    newSortInfo.dir = forceDir;\n    return newSortInfo;\n  }\n  if (defaultDir === undefined) {\n    defaultDir = 1;\n  }\n  if (defaultDir === 1) {\n    if (!currentDir) {\n      newSortInfo.dir = 1;\n    } else if (currentDir === 1) {\n      newSortInfo.dir = -1;\n    } else if (currentDir === -1) {\n      if (allowUnsort || multiSort) {\n        return null;\n      }\n      newSortInfo.dir = 1;\n    }\n  } else if (defaultDir === -1) {\n    if (!currentDir) {\n      newSortInfo.dir = -1;\n    } else if (currentDir === -1) {\n      newSortInfo.dir = 1;\n    } else if (currentDir === 1) {\n      if (allowUnsort || multiSort) {\n        return null;\n      }\n      newSortInfo.dir = 1;\n    }\n  }\n  return newSortInfo;\n};\nvar getNextSingleSortInfo = function getNextSingleSortInfo(column, currentSortInfo, _ref2) {\n  var _ref2$allowUnsort = _ref2.allowUnsort,\n    allowUnsort = _ref2$allowUnsort === void 0 ? false : _ref2$allowUnsort,\n    multiSort = _ref2.multiSort,\n    forceDir = _ref2.forceDir,\n    defaultDir = _ref2.defaultDir,\n    sortFunctions = _ref2.sortFunctions;\n  if (Array.isArray(currentSortInfo)) {\n    return null;\n  }\n  return getNextSortInfoForColumn(currentSortInfo && (currentSortInfo.name === column.id || currentSortInfo.id === column.id || currentSortInfo.name === column.sortName) ? currentSortInfo.dir : 0, column, {\n    allowUnsort: allowUnsort,\n    multiSort: multiSort,\n    forceDir: forceDir,\n    defaultDir: defaultDir,\n    sortFunctions: sortFunctions\n  });\n};\nvar getNextMultipleSortInfo = function getNextMultipleSortInfo(column, currentSortInfo, _ref3) {\n  var _ref3$allowUnsort = _ref3.allowUnsort,\n    allowUnsort = _ref3$allowUnsort === void 0 ? false : _ref3$allowUnsort,\n    forceDir = _ref3.forceDir,\n    sortFunctions = _ref3.sortFunctions;\n  var result;\n  if (!Array.isArray(currentSortInfo)) {\n    var info = getNextSingleSortInfo(column, currentSortInfo, {\n      allowUnsort: allowUnsort,\n      multiSort: true,\n      forceDir: forceDir,\n      sortFunctions: sortFunctions\n    });\n    result = [info].filter(function (x) {\n      return x;\n    });\n  } else {\n    var sortInfoIndex = currentSortInfo.findIndex(function (value) {\n      return value.id ? value.id === column.id : value.name === column.name || value.name === column.sortName;\n    });\n    var currentSortInfoForColumn = currentSortInfo[sortInfoIndex];\n    var nextSortInfoForColumn = getNextSingleSortInfo(column, currentSortInfo[sortInfoIndex], {\n      allowUnsort: allowUnsort,\n      multiSort: true,\n      forceDir: forceDir,\n      sortFunctions: sortFunctions\n    });\n    if (nextSortInfoForColumn && forceDir !== undefined) {\n      nextSortInfoForColumn.dir = forceDir;\n    }\n    result = (currentSortInfoForColumn ? [].concat((0, _toConsumableArray2.default)(currentSortInfo.slice(0, sortInfoIndex)), [nextSortInfoForColumn], (0, _toConsumableArray2.default)(currentSortInfo.slice(sortInfoIndex + 1))) : [].concat((0, _toConsumableArray2.default)(currentSortInfo), [nextSortInfoForColumn])).filter(function (x) {\n      return x;\n    });\n  }\n  return result;\n};\nvar useSortInfo = function useSortInfo(props, _, computedPropsRef) {\n  var controlled = (0, _isControlledProperty.default)(props, 'sortInfo');\n  var _useProperty = (0, _useProperty3.default)(props, 'sortInfo'),\n    _useProperty2 = (0, _slicedToArray2.default)(_useProperty, 2),\n    sortInfo = _useProperty2[0],\n    silentSetSortInfo = _useProperty2[1];\n  if (controlled) {}\n  var setSortInfo = (0, _react.useCallback)(function (sortInfo) {\n    var computedProps = computedPropsRef.current;\n    if (!computedProps) {\n      return;\n    }\n    var queue = (0, _batchUpdate.default)();\n    var computedRemoteData = computedProps.computedRemoteData;\n    queue.commit(function () {\n      if (computedProps.computedPagination && computedProps.setSkip && computedProps.computedSkip) {\n        computedProps.setSkip(0);\n      }\n      silentSetSortInfo(sortInfo);\n      if (computedRemoteData) {\n        computedProps.setLoadDataTrigger(function (loadDataTrigger) {\n          return [].concat((0, _toConsumableArray2.default)(loadDataTrigger), ['sortInfo']);\n        });\n      }\n    });\n  }, [silentSetSortInfo]);\n  var toggleColumnSort = (0, _react.useCallback)(function (colId, defaultSortingDirection) {\n    var computedProps = computedPropsRef.current;\n    if (!computedProps) {\n      return;\n    }\n    var allowUnsort = computedProps.allowUnsort;\n    var computedColumn = computedProps.getColumnBy(colId);\n    if (!computedColumn) {\n      return;\n    }\n    var sortInfo = computedProps.computedSortInfo === undefined ? null : computedProps.computedSortInfo;\n    var sortingDirection;\n    if (computedProps.defaultSortingDirection) {\n      sortingDirection = computedProps.defaultSortingDirection === 'asc' ? 1 : -1;\n    }\n    if (defaultSortingDirection) {\n      sortingDirection = defaultSortingDirection === 'asc' ? 1 : -1;\n    }\n    var computedIsMultiSort = computedProps.computedIsMultiSort;\n    var nextSortInfo = computedIsMultiSort ? getNextMultipleSortInfo(computedColumn, sortInfo, {\n      allowUnsort: allowUnsort,\n      sortFunctions: computedProps.sortFunctions\n    }) : getNextSingleSortInfo(computedColumn, sortInfo, {\n      allowUnsort: allowUnsort,\n      multiSort: false,\n      forceDir: undefined,\n      defaultDir: sortingDirection,\n      sortFunctions: computedProps.sortFunctions\n    });\n    setSortInfo(nextSortInfo);\n  }, [setSortInfo]);\n  var setColumnSortInfo = (0, _react.useCallback)(function (column, dir) {\n    var computedProps = computedPropsRef.current;\n    if (!computedProps) {\n      return;\n    }\n    var allowUnsort = computedProps.allowUnsort;\n    var computedColumn = computedProps.getColumnBy(column);\n    if (!computedColumn) {\n      return;\n    }\n    var computedIsMultiSort = computedProps.computedIsMultiSort;\n    var nextSortInfo = computedIsMultiSort ? getNextMultipleSortInfo(computedColumn, sortInfo, {\n      allowUnsort: allowUnsort,\n      forceDir: dir,\n      sortFunctions: computedProps.sortFunctions\n    }) : getNextSingleSortInfo(computedColumn, sortInfo, {\n      allowUnsort: allowUnsort,\n      multiSort: false,\n      forceDir: dir,\n      sortFunctions: computedProps.sortFunctions\n    });\n    setSortInfo(nextSortInfo);\n  }, [setSortInfo]);\n  var unsortColumn = function unsortColumn(column) {\n    var computedProps = computedPropsRef.current;\n    if (!computedProps) {\n      return;\n    }\n    var computedColumn = computedProps.getColumnBy(column);\n    if (!computedColumn) {\n      return;\n    }\n    var columnSortInfo = computedColumn.computedSortInfo;\n    if (!columnSortInfo) {\n      return;\n    }\n    var sortInfo = computedProps.computedSortInfo;\n    var newSortInfo = null;\n    if (Array.isArray(sortInfo)) {\n      newSortInfo = sortInfo.filter(function (sortInfo) {\n        if (sortInfo && (sortInfo.id === columnSortInfo.id || sortInfo.name === columnSortInfo.name)) {\n          return false;\n        }\n        return true;\n      });\n    }\n    setSortInfo(newSortInfo);\n  };\n  return {\n    computedSortInfo: sortInfo,\n    unsortColumn: unsortColumn,\n    setSortInfo: setSortInfo,\n    computedIsMultiSort: Array.isArray(sortInfo),\n    toggleColumnSort: toggleColumnSort,\n    setColumnSortInfo: setColumnSortInfo\n  };\n};\nvar _default = useSortInfo;\nexports.default = _default;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script"}