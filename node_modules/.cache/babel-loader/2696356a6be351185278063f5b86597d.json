{"ast":null,"code":"/**\n * Copyright Â© INOVUA TRADING.\n *\n * This source code is licensed under the Commercial License found in the\n * LICENSE file in the root directory of this source tree.\n */\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\nvar _react = require(\"react\");\nvar _useProperty5 = _interopRequireDefault(require(\"@inovua/reactdatagrid-community/hooks/useProperty\"));\nvar _batchUpdate = _interopRequireDefault(require(\"@inovua/reactdatagrid-community/utils/batchUpdate\"));\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      (0, _defineProperty2.default)(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n  return target;\n}\nvar EXPANDABLE_NODE_INFO = {};\nvar EMPTY_OBJECT = {};\nvar isNodeExpandableAt_FromProps = function isNodeExpandableAt_FromProps(computedPropsRef, rowIndex) {\n  var computedProps = computedPropsRef.current;\n  if (!computedProps) {\n    return false;\n  }\n  var data = computedProps.getItemAt(rowIndex);\n  if (!data) {\n    return false;\n  }\n  if (data.__group) {\n    return false;\n  }\n  if (data.__nodeProps && data.__nodeProps.leafNode) {\n    return false;\n  }\n  var id = computedProps.getItemId(data);\n  var initialProps = computedProps.initialProps;\n  if (initialProps.unexpandableNodes && initialProps.unexpandableNodes[id]) {\n    return false;\n  }\n  if (!initialProps.isNodeExpandable) {\n    return true;\n  }\n  EXPANDABLE_NODE_INFO.id = id;\n  EXPANDABLE_NODE_INFO.data = data;\n  EXPANDABLE_NODE_INFO.rowIndex = rowIndex;\n  EXPANDABLE_NODE_INFO.node = data;\n  EXPANDABLE_NODE_INFO.nodeProps = data.__nodeProps;\n  return initialProps.isNodeExpandable(EXPANDABLE_NODE_INFO);\n};\nvar loadNodeAsync_FromProps = function loadNodeAsync_FromProps(computedPropsRef, dataOrIndex, callback) {\n  var computedProps = computedPropsRef.current;\n  if (!computedProps) {\n    return;\n  }\n  var data = typeof dataOrIndex === 'number' ? computedProps.getItemAt(dataOrIndex) : dataOrIndex;\n  var nodeId = computedProps.getItemId(data);\n  var nodeCache = computedProps.getNodeCache();\n  var once = !!computedProps.initialProps.loadNodeOnce;\n  var loadFn = computedProps.computedLoadNode;\n  if (!loadFn && callback) {\n    callback();\n    return;\n  }\n  if (once && nodeCache && nodeCache[nodeId] != null && nodeCache[nodeId][computedProps.initialProps.nodesProperty] !== undefined) {\n    if (callback) {\n      callback();\n    }\n    return;\n  }\n  var loadingNodes = _objectSpread({}, computedProps.computedLoadingNodes);\n  var result = loadFn({\n    node: data,\n    nodeProps: data.__nodeProps\n  });\n  if (Array.isArray(result)) {\n    computedProps.appendCacheForNode(nodeId, (0, _defineProperty2.default)({}, computedProps.initialProps.nodesProperty, result));\n    if (callback) {\n      callback();\n    }\n  } else {\n    loadingNodes[nodeId] = true;\n    computedProps.setLoadingNodes(loadingNodes);\n    if (callback) {\n      callback();\n    }\n  }\n  if (typeof result.then === 'function') {\n    result.then(function (nodes) {\n      var computedProps = computedPropsRef.current;\n      if (!computedProps) {\n        return;\n      }\n      var loadingNodes = _objectSpread({}, computedProps.computedLoadingNodes);\n      delete loadingNodes[nodeId];\n      computedProps.setLoadingNodes(loadingNodes);\n      computedProps.appendCacheForNode(nodeId, (0, _defineProperty2.default)({}, computedProps.initialProps.nodesProperty, nodes));\n    });\n  }\n};\nvar useTreeColumn = function useTreeColumn(props, computedProps, computedPropsRef) {\n  var computedTreeEnabled = props.treeEnabled || !!props.treeColumn;\n  var _useProperty = (0, _useProperty5.default)(props, 'expandedNodes', undefined, {\n      onChange: function onChange(expandedNodes) {\n        var fn = computedProps.initialProps.onExpandedNodesChange;\n        if (fn) {\n          for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n            args[_key - 1] = arguments[_key];\n          }\n          fn.apply(void 0, [{\n            expandedNodes: expandedNodes\n          }].concat(args));\n        }\n      }\n    }),\n    _useProperty2 = (0, _slicedToArray2.default)(_useProperty, 2),\n    expandedNodes = _useProperty2[0],\n    doSetExpandedNodes = _useProperty2[1];\n  var isNodeExpandableAt = function isNodeExpandableAt(index) {\n    return isNodeExpandableAt_FromProps(computedPropsRef, index);\n  };\n  var setExpandedNodes = function setExpandedNodes(expandedNodes, collapsedNodes, cfg) {\n    cfg = cfg || {};\n    var _cfg = cfg,\n      id = _cfg.id,\n      data = _cfg.data,\n      expanded = _cfg.expanded;\n    var index;\n    var nodeProps;\n    var computedProps = computedPropsRef.current;\n    if (!computedProps) {\n      return;\n    }\n    var initialProps = computedProps.initialProps;\n    if (data) {\n      nodeProps = data.__nodeProps;\n      index = computedProps.dataIndexMap[id];\n      if (!expanded) {\n        if (initialProps.onNodeCollapse && initialProps.onNodeCollapse({\n          nodeProps: nodeProps,\n          node: data,\n          data: data,\n          id: id,\n          index: index\n        }) === false) {\n          return;\n        }\n      } else {\n        if (!isNodeExpandableAt(index)) {\n          return;\n        }\n        if (initialProps.onNodeExpand && initialProps.onNodeExpand({\n          nodeProps: nodeProps,\n          node: data,\n          data: data,\n          id: id,\n          index: index\n        }) === false) {\n          return;\n        }\n      }\n      if (initialProps.onNodeExpandChange && initialProps.onNodeExpandChange({\n        expandedNodes: expandedNodes,\n        id: id,\n        index: index,\n        data: data,\n        nodeProps: nodeProps,\n        node: data,\n        nodeExpanded: expanded\n      }) === false) {\n        return;\n      }\n    }\n    if (initialProps.onExpandedNodesChange) {\n      initialProps.onExpandedNodesChange({\n        expandedNodes: expandedNodes,\n        nodeExpanded: expanded,\n        nodeProps: nodeProps,\n        data: data,\n        id: id,\n        index: index\n      });\n    }\n    if (expandedNodes) {\n      doSetExpandedNodes(expandedNodes);\n    }\n  };\n  var _useProperty3 = (0, _useProperty5.default)(props, 'nodeCache'),\n    _useProperty4 = (0, _slicedToArray2.default)(_useProperty3, 2),\n    nodeCache = _useProperty4[0],\n    doSetNodeCache = _useProperty4[1];\n  var _useState = (0, _react.useState)({}),\n    _useState2 = (0, _slicedToArray2.default)(_useState, 2),\n    loadingNodes = _useState2[0],\n    setLoadingNodes = _useState2[1];\n  var collapsingNodesRef = (0, _react.useRef)({});\n  var isNodeExpanded = function isNodeExpanded(data) {\n    var computedProps = computedPropsRef.current;\n    if (!computedProps) {\n      return false;\n    }\n    if (data == null) {\n      return false;\n    }\n    var index;\n    if (typeof data == 'number') {\n      index = data;\n      data = computedProps.getItemAt(index);\n    }\n    var expandedNodes = computedProps.computedExpandedNodes;\n    var id = computedProps.getItemId(data);\n    if (!expandedNodes) {\n      return false;\n    }\n    return !!expandedNodes[id];\n  };\n  var getExpandedNodes = function getExpandedNodes() {\n    return computedPropsRef.current.computedExpandedNodes;\n  };\n  var loadNodeAsync = (0, _react.useCallback)(function (data, callback) {\n    return loadNodeAsync_FromProps(computedPropsRef, data, callback);\n  }, []);\n  var clearNodeChildrenCache = function clearNodeChildrenCache(nodeId) {\n    var recursive = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n    var treeCache = arguments.length > 2 ? arguments[2] : undefined;\n    var clearedMap = arguments.length > 3 ? arguments[3] : undefined;\n    var computedProps = computedPropsRef.current;\n    clearedMap = clearedMap || {};\n    if (!computedProps) {\n      return clearedMap;\n    }\n    var isRoot = !treeCache;\n    treeCache = treeCache || _objectSpread({}, getNodeCache());\n    var data = computedProps.dataMap[nodeId];\n    if (!data) {\n      return clearedMap;\n    }\n    var nodeCache = treeCache[nodeId];\n    var childNodes = nodeCache != null ? nodeCache[computedProps.nodesProperty] : data[computedProps.nodesProperty];\n    if (childNodes && recursive && computedProps.initialProps.collapseChildrenOnAsyncNodeCollapse) {\n      var _computedProps$initia = computedProps.initialProps,\n        generateIdFromPath = _computedProps$initia.generateIdFromPath,\n        nodePathSeparator = _computedProps$initia.nodePathSeparator;\n      childNodes.forEach(function (childNode) {\n        if (!childNode) {\n          return;\n        }\n        var childId = computedProps.getItemId(childNode);\n        if (childNode.__nodeProps) {\n          childId = childNode.__nodeProps.key;\n        } else if (generateIdFromPath) {\n          childId = \"\".concat(nodeId).concat(nodePathSeparator).concat(childId);\n        }\n        clearedMap[childId] = true;\n        computedProps.clearNodeChildrenCache(childId, recursive, treeCache, clearedMap);\n      });\n    }\n    treeCache[nodeId] = _objectSpread(_objectSpread({}, nodeCache), {}, (0, _defineProperty2.default)({}, computedProps.initialProps.nodesProperty, data.__nodeProps ? data.__nodeProps.initialNodes : data[computedProps.initialProps.nodesProperty]));\n    if (isRoot) {\n      setNodeCache(treeCache, {\n        nodeId: nodeId,\n        node: data\n      });\n      return clearedMap;\n    }\n    return clearedMap;\n  };\n  var setNodeExpandedById = function setNodeExpandedById(id, expanded) {\n    var config = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    var computedProps = computedPropsRef.current;\n    if (!computedProps) {\n      return;\n    }\n    if (!computedProps.dataMap) {\n      return;\n    }\n    var collapsingNodesRef = computedProps.collapsingNodesRef;\n    var data = computedProps.dataMap[id];\n    if (!data) {\n      return;\n    }\n    if (data.__nodeProps && data.__nodeProps.leafNode) {\n      return;\n    }\n    if (data.__nodeProps && data.__nodeProps.expanded === expanded && config.force !== true) {\n      return;\n    }\n    var treeCache = computedProps.computedNodeCache;\n    var clearedCacheIds;\n    var __collapsingNodes = collapsingNodesRef.current;\n    var queue = (0, _batchUpdate.default)();\n    var doExpandOrCollapse = function doExpandOrCollapse() {\n      var expandedNodes = _objectSpread({}, getExpandedNodes());\n      if (!expanded) {\n        var recursive = !!computedProps.loadNode;\n        delete expandedNodes[id];\n        if (__collapsingNodes && __collapsingNodes[id]) {\n          delete __collapsingNodes[id];\n        }\n        if (recursive && clearedCacheIds && computedProps.collapseChildrenOnAsyncNodeCollapse) {\n          for (var _id in clearedCacheIds) {\n            delete expandedNodes[_id];\n          }\n        }\n        if (computedProps.collapseChildrenRecursive) {\n          for (var childId in expandedNodes) {\n            if (childId.indexOf(id) === 0) {\n              delete expandedNodes[childId];\n            }\n          }\n        }\n      } else {\n        expandedNodes[id] = true;\n      }\n      setExpandedNodes(expandedNodes, undefined, {\n        data: data,\n        expanded: expanded,\n        id: id\n      });\n    };\n    if (!expanded) {\n      collapsingNodesRef.current = __collapsingNodes || {};\n      collapsingNodesRef.current[id] = true;\n    }\n    if (!expanded) {\n      queue(function () {\n        var nodeCache = treeCache ? treeCache[id] : undefined;\n        if (nodeCache !== undefined && !computedProps.initialProps.loadNodeOnce) {\n          var recursive = !!computedProps.initialProps.loadNode;\n          clearedCacheIds = clearNodeChildrenCache(id, recursive, treeCache);\n          doExpandOrCollapse();\n        } else {\n          doExpandOrCollapse();\n        }\n      });\n      queue.commit();\n      return;\n    }\n    queue(function () {\n      if (expanded && data.__nodeProps && data.__nodeProps.asyncNode) {\n        loadNodeAsync(data, doExpandOrCollapse);\n      } else {\n        doExpandOrCollapse();\n      }\n    });\n    queue.commit();\n  };\n  var setNodeExpandedAt = function setNodeExpandedAt(index, expanded) {\n    var data = computedProps.getItemAt(index);\n    if (!data) {\n      return;\n    }\n    var id = computedProps.getItemId(data);\n    return setNodeExpandedById(id, expanded);\n  };\n  var toggleNodeExpand = (0, _react.useCallback)(function (dataOrIndex) {\n    var computedProps = computedPropsRef.current;\n    if (!computedProps) {\n      return;\n    }\n    var data = typeof dataOrIndex === 'number' ? computedProps.getItemAt(dataOrIndex) : dataOrIndex;\n    if (!data) {\n      return;\n    }\n    var id = computedProps.getItemId(data);\n    var expanded = isNodeExpanded(data);\n    if (typeof dataOrIndex === 'number') {\n      computedProps.setActiveIndex(dataOrIndex);\n    } else {\n      var rowIndex = computedProps.getRowIndexById(id);\n      computedProps.setActiveIndex(rowIndex);\n    }\n    return setNodeExpandedById(id, !expanded);\n  }, []);\n  var getNodeCache = (0, _react.useCallback)(function () {\n    var computedProps = computedPropsRef.current;\n    if (!computedProps) {\n      return {};\n    }\n    return computedProps.computedNodeCache || {};\n  }, []);\n  var appendCacheForNode = function appendCacheForNode(nodeId, node) {\n    var computedProps = computedPropsRef.current;\n    if (!computedProps) {\n      return;\n    }\n    var nodeCache = _objectSpread({}, getNodeCache());\n    if (node === undefined) {\n      delete nodeCache[nodeId];\n    } else {\n      nodeCache[nodeId] = _objectSpread(_objectSpread({}, nodeCache[nodeId]), node);\n    }\n    computedProps.setNodeCache(nodeCache, {\n      nodeId: nodeId,\n      node: node\n    });\n  };\n  var setNodeCache = function setNodeCache(nodeCache, info) {\n    var computedProps = computedPropsRef.current;\n    if (!computedProps) {\n      return;\n    }\n    if (computedProps.initialProps.onNodeCache) {\n      computedProps.initialProps.onNodeCache(nodeCache, info);\n    }\n    doSetNodeCache(nodeCache);\n  };\n  var computedExpandedNodes = expandedNodes;\n  var computedNodeCache = nodeCache;\n  var computedLoadingNodes = loadingNodes;\n  var once = !!computedProps.initialProps.loadNodeOnce;\n  var computedLoadNode = once ? computedProps.initialProps.loadNodeOnce : computedProps.initialProps.loadNode;\n  var computeAllNodes = function computeAllNodes(dataArray) {\n    var config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : EMPTY_OBJECT;\n    var parentNode = arguments.length > 2 ? arguments[2] : undefined;\n    var result = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n    var idProperty = config.idProperty;\n    var nodesName = config.nodesName;\n    var pathSeparator = config.pathSeparator;\n    var generateIdFromPath = computedProps.generateIdFromPath;\n    dataArray.forEach(function (item) {\n      if (item) {\n        var itemId = item[idProperty];\n        var itemNodes = item[nodesName];\n        var parentNodeId = parentNode ? parentNode[idProperty] : undefined;\n        var path = parentNode ? \"\".concat(parentNodeId).concat(pathSeparator).concat(itemId) : \"\".concat(itemId);\n        if (generateIdFromPath) {\n          item[idProperty] = path;\n        }\n        result[path] = true;\n        if (Array.isArray(itemNodes)) {\n          computeAllNodes(itemNodes, config, item, result);\n        }\n      }\n    });\n    return result;\n  };\n  var collapseAllTreeNodes = function collapseAllTreeNodes() {\n    var computedProps = computedPropsRef.current;\n    if (!computedProps) {\n      return;\n    }\n    setExpandedNodes({});\n  };\n  var expandAllTreeNodes = function expandAllTreeNodes() {\n    var computedProps = computedPropsRef.current;\n    if (!computedProps) {\n      return;\n    }\n    var config = {\n      idProperty: !computedProps.compoundIdProperty ? computedProps.idProperty : 'id',\n      nodesName: computedProps.nodesProperty || 'nodes',\n      pathSeparator: computedProps.nodePathSeparator || '/',\n      generateIdFromPath: computedProps.generateIdFromPath\n    };\n    var originalData = JSON.stringify(computedProps.originalData || []);\n    var cloneOriginalData = (0, _toConsumableArray2.default)(JSON.parse(originalData));\n    var allNodes = computeAllNodes(cloneOriginalData, config);\n    setExpandedNodes(allNodes);\n  };\n  return {\n    clearNodeChildrenCache: clearNodeChildrenCache,\n    toggleNodeExpand: toggleNodeExpand,\n    loadNodeAsync: loadNodeAsync,\n    collapsingNodesRef: collapsingNodesRef,\n    setLoadingNodes: setLoadingNodes,\n    computedTreeEnabled: computedTreeEnabled,\n    computedLoadNode: computedLoadNode,\n    computedExpandedNodes: computedExpandedNodes,\n    computedLoadingNodes: computedLoadingNodes,\n    computedNodeCache: computedNodeCache,\n    getNodeCache: getNodeCache,\n    setNodeCache: setNodeCache,\n    appendCacheForNode: appendCacheForNode,\n    isNodeExpandableAt: isNodeExpandableAt,\n    isNodeExpanded: isNodeExpanded,\n    setNodeExpandedAt: setNodeExpandedAt,\n    setNodeExpandedById: setNodeExpandedById,\n    collapseAllTreeNodes: collapseAllTreeNodes,\n    expandAllTreeNodes: expandAllTreeNodes\n  };\n};\nvar _default = useTreeColumn;\nexports.default = _default;","map":{"version":3,"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","default","_toConsumableArray2","_slicedToArray2","_defineProperty2","_react","_useProperty5","_batchUpdate","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","getOwnPropertyDescriptors","defineProperties","EXPANDABLE_NODE_INFO","EMPTY_OBJECT","isNodeExpandableAt_FromProps","computedPropsRef","rowIndex","computedProps","current","data","getItemAt","__group","__nodeProps","leafNode","id","getItemId","initialProps","unexpandableNodes","isNodeExpandable","node","nodeProps","loadNodeAsync_FromProps","dataOrIndex","callback","nodeId","nodeCache","getNodeCache","once","loadNodeOnce","loadFn","computedLoadNode","nodesProperty","undefined","loadingNodes","computedLoadingNodes","result","Array","isArray","appendCacheForNode","setLoadingNodes","then","nodes","useTreeColumn","props","computedTreeEnabled","treeEnabled","treeColumn","_useProperty","onChange","expandedNodes","fn","onExpandedNodesChange","_len","args","_key","concat","_useProperty2","doSetExpandedNodes","isNodeExpandableAt","index","setExpandedNodes","collapsedNodes","cfg","_cfg","expanded","dataIndexMap","onNodeCollapse","onNodeExpand","onNodeExpandChange","nodeExpanded","_useProperty3","_useProperty4","doSetNodeCache","_useState","useState","_useState2","collapsingNodesRef","useRef","isNodeExpanded","computedExpandedNodes","getExpandedNodes","loadNodeAsync","useCallback","clearNodeChildrenCache","recursive","treeCache","clearedMap","isRoot","dataMap","childNodes","collapseChildrenOnAsyncNodeCollapse","_computedProps$initia","generateIdFromPath","nodePathSeparator","childNode","childId","initialNodes","setNodeCache","setNodeExpandedById","config","force","computedNodeCache","clearedCacheIds","__collapsingNodes","queue","doExpandOrCollapse","loadNode","_id","collapseChildrenRecursive","indexOf","commit","asyncNode","setNodeExpandedAt","toggleNodeExpand","setActiveIndex","getRowIndexById","info","onNodeCache","computeAllNodes","dataArray","parentNode","idProperty","nodesName","pathSeparator","item","itemId","itemNodes","parentNodeId","path","collapseAllTreeNodes","expandAllTreeNodes","compoundIdProperty","originalData","JSON","stringify","cloneOriginalData","parse","allNodes","_default"],"sources":["/Users/alexandre.nepomuceno/Documents/agendaagroamais/node_modules/@inovua/reactdatagrid-enterprise/plugins/tree/useTreeColumn/index.js"],"sourcesContent":["/**\n * Copyright Â© INOVUA TRADING.\n *\n * This source code is licensed under the Commercial License found in the\n * LICENSE file in the root directory of this source tree.\n */\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\nvar _react = require(\"react\");\nvar _useProperty5 = _interopRequireDefault(require(\"@inovua/reactdatagrid-community/hooks/useProperty\"));\nvar _batchUpdate = _interopRequireDefault(require(\"@inovua/reactdatagrid-community/utils/batchUpdate\"));\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nvar EXPANDABLE_NODE_INFO = {};\nvar EMPTY_OBJECT = {};\nvar isNodeExpandableAt_FromProps = function isNodeExpandableAt_FromProps(computedPropsRef, rowIndex) {\n  var computedProps = computedPropsRef.current;\n  if (!computedProps) {\n    return false;\n  }\n  var data = computedProps.getItemAt(rowIndex);\n  if (!data) {\n    return false;\n  }\n  if (data.__group) {\n    return false;\n  }\n  if (data.__nodeProps && data.__nodeProps.leafNode) {\n    return false;\n  }\n  var id = computedProps.getItemId(data);\n  var initialProps = computedProps.initialProps;\n  if (initialProps.unexpandableNodes && initialProps.unexpandableNodes[id]) {\n    return false;\n  }\n  if (!initialProps.isNodeExpandable) {\n    return true;\n  }\n  EXPANDABLE_NODE_INFO.id = id;\n  EXPANDABLE_NODE_INFO.data = data;\n  EXPANDABLE_NODE_INFO.rowIndex = rowIndex;\n  EXPANDABLE_NODE_INFO.node = data;\n  EXPANDABLE_NODE_INFO.nodeProps = data.__nodeProps;\n  return initialProps.isNodeExpandable(EXPANDABLE_NODE_INFO);\n};\nvar loadNodeAsync_FromProps = function loadNodeAsync_FromProps(computedPropsRef, dataOrIndex, callback) {\n  var computedProps = computedPropsRef.current;\n  if (!computedProps) {\n    return;\n  }\n  var data = typeof dataOrIndex === 'number' ? computedProps.getItemAt(dataOrIndex) : dataOrIndex;\n  var nodeId = computedProps.getItemId(data);\n  var nodeCache = computedProps.getNodeCache();\n  var once = !!computedProps.initialProps.loadNodeOnce;\n  var loadFn = computedProps.computedLoadNode;\n  if (!loadFn && callback) {\n    callback();\n    return;\n  }\n  if (once && nodeCache && nodeCache[nodeId] != null && nodeCache[nodeId][computedProps.initialProps.nodesProperty] !== undefined) {\n    if (callback) {\n      callback();\n    }\n    return;\n  }\n  var loadingNodes = _objectSpread({}, computedProps.computedLoadingNodes);\n  var result = loadFn({\n    node: data,\n    nodeProps: data.__nodeProps\n  });\n  if (Array.isArray(result)) {\n    computedProps.appendCacheForNode(nodeId, (0, _defineProperty2.default)({}, computedProps.initialProps.nodesProperty, result));\n    if (callback) {\n      callback();\n    }\n  } else {\n    loadingNodes[nodeId] = true;\n    computedProps.setLoadingNodes(loadingNodes);\n    if (callback) {\n      callback();\n    }\n  }\n  if (typeof result.then === 'function') {\n    result.then(function (nodes) {\n      var computedProps = computedPropsRef.current;\n      if (!computedProps) {\n        return;\n      }\n      var loadingNodes = _objectSpread({}, computedProps.computedLoadingNodes);\n      delete loadingNodes[nodeId];\n      computedProps.setLoadingNodes(loadingNodes);\n      computedProps.appendCacheForNode(nodeId, (0, _defineProperty2.default)({}, computedProps.initialProps.nodesProperty, nodes));\n    });\n  }\n};\nvar useTreeColumn = function useTreeColumn(props, computedProps, computedPropsRef) {\n  var computedTreeEnabled = props.treeEnabled || !!props.treeColumn;\n  var _useProperty = (0, _useProperty5.default)(props, 'expandedNodes', undefined, {\n      onChange: function onChange(expandedNodes) {\n        var fn = computedProps.initialProps.onExpandedNodesChange;\n        if (fn) {\n          for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n            args[_key - 1] = arguments[_key];\n          }\n          fn.apply(void 0, [{\n            expandedNodes: expandedNodes\n          }].concat(args));\n        }\n      }\n    }),\n    _useProperty2 = (0, _slicedToArray2.default)(_useProperty, 2),\n    expandedNodes = _useProperty2[0],\n    doSetExpandedNodes = _useProperty2[1];\n  var isNodeExpandableAt = function isNodeExpandableAt(index) {\n    return isNodeExpandableAt_FromProps(computedPropsRef, index);\n  };\n  var setExpandedNodes = function setExpandedNodes(expandedNodes, collapsedNodes, cfg) {\n    cfg = cfg || {};\n    var _cfg = cfg,\n      id = _cfg.id,\n      data = _cfg.data,\n      expanded = _cfg.expanded;\n    var index;\n    var nodeProps;\n    var computedProps = computedPropsRef.current;\n    if (!computedProps) {\n      return;\n    }\n    var initialProps = computedProps.initialProps;\n    if (data) {\n      nodeProps = data.__nodeProps;\n      index = computedProps.dataIndexMap[id];\n      if (!expanded) {\n        if (initialProps.onNodeCollapse && initialProps.onNodeCollapse({\n          nodeProps: nodeProps,\n          node: data,\n          data: data,\n          id: id,\n          index: index\n        }) === false) {\n          return;\n        }\n      } else {\n        if (!isNodeExpandableAt(index)) {\n          return;\n        }\n        if (initialProps.onNodeExpand && initialProps.onNodeExpand({\n          nodeProps: nodeProps,\n          node: data,\n          data: data,\n          id: id,\n          index: index\n        }) === false) {\n          return;\n        }\n      }\n      if (initialProps.onNodeExpandChange && initialProps.onNodeExpandChange({\n        expandedNodes: expandedNodes,\n        id: id,\n        index: index,\n        data: data,\n        nodeProps: nodeProps,\n        node: data,\n        nodeExpanded: expanded\n      }) === false) {\n        return;\n      }\n    }\n    if (initialProps.onExpandedNodesChange) {\n      initialProps.onExpandedNodesChange({\n        expandedNodes: expandedNodes,\n        nodeExpanded: expanded,\n        nodeProps: nodeProps,\n        data: data,\n        id: id,\n        index: index\n      });\n    }\n    if (expandedNodes) {\n      doSetExpandedNodes(expandedNodes);\n    }\n  };\n  var _useProperty3 = (0, _useProperty5.default)(props, 'nodeCache'),\n    _useProperty4 = (0, _slicedToArray2.default)(_useProperty3, 2),\n    nodeCache = _useProperty4[0],\n    doSetNodeCache = _useProperty4[1];\n  var _useState = (0, _react.useState)({}),\n    _useState2 = (0, _slicedToArray2.default)(_useState, 2),\n    loadingNodes = _useState2[0],\n    setLoadingNodes = _useState2[1];\n  var collapsingNodesRef = (0, _react.useRef)({});\n  var isNodeExpanded = function isNodeExpanded(data) {\n    var computedProps = computedPropsRef.current;\n    if (!computedProps) {\n      return false;\n    }\n    if (data == null) {\n      return false;\n    }\n    var index;\n    if (typeof data == 'number') {\n      index = data;\n      data = computedProps.getItemAt(index);\n    }\n    var expandedNodes = computedProps.computedExpandedNodes;\n    var id = computedProps.getItemId(data);\n    if (!expandedNodes) {\n      return false;\n    }\n    return !!expandedNodes[id];\n  };\n  var getExpandedNodes = function getExpandedNodes() {\n    return computedPropsRef.current.computedExpandedNodes;\n  };\n  var loadNodeAsync = (0, _react.useCallback)(function (data, callback) {\n    return loadNodeAsync_FromProps(computedPropsRef, data, callback);\n  }, []);\n  var clearNodeChildrenCache = function clearNodeChildrenCache(nodeId) {\n    var recursive = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n    var treeCache = arguments.length > 2 ? arguments[2] : undefined;\n    var clearedMap = arguments.length > 3 ? arguments[3] : undefined;\n    var computedProps = computedPropsRef.current;\n    clearedMap = clearedMap || {};\n    if (!computedProps) {\n      return clearedMap;\n    }\n    var isRoot = !treeCache;\n    treeCache = treeCache || _objectSpread({}, getNodeCache());\n    var data = computedProps.dataMap[nodeId];\n    if (!data) {\n      return clearedMap;\n    }\n    var nodeCache = treeCache[nodeId];\n    var childNodes = nodeCache != null ? nodeCache[computedProps.nodesProperty] : data[computedProps.nodesProperty];\n    if (childNodes && recursive && computedProps.initialProps.collapseChildrenOnAsyncNodeCollapse) {\n      var _computedProps$initia = computedProps.initialProps,\n        generateIdFromPath = _computedProps$initia.generateIdFromPath,\n        nodePathSeparator = _computedProps$initia.nodePathSeparator;\n      childNodes.forEach(function (childNode) {\n        if (!childNode) {\n          return;\n        }\n        var childId = computedProps.getItemId(childNode);\n        if (childNode.__nodeProps) {\n          childId = childNode.__nodeProps.key;\n        } else if (generateIdFromPath) {\n          childId = \"\".concat(nodeId).concat(nodePathSeparator).concat(childId);\n        }\n        clearedMap[childId] = true;\n        computedProps.clearNodeChildrenCache(childId, recursive, treeCache, clearedMap);\n      });\n    }\n    treeCache[nodeId] = _objectSpread(_objectSpread({}, nodeCache), {}, (0, _defineProperty2.default)({}, computedProps.initialProps.nodesProperty, data.__nodeProps ? data.__nodeProps.initialNodes : data[computedProps.initialProps.nodesProperty]));\n    if (isRoot) {\n      setNodeCache(treeCache, {\n        nodeId: nodeId,\n        node: data\n      });\n      return clearedMap;\n    }\n    return clearedMap;\n  };\n  var setNodeExpandedById = function setNodeExpandedById(id, expanded) {\n    var config = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    var computedProps = computedPropsRef.current;\n    if (!computedProps) {\n      return;\n    }\n    if (!computedProps.dataMap) {\n      return;\n    }\n    var collapsingNodesRef = computedProps.collapsingNodesRef;\n    var data = computedProps.dataMap[id];\n    if (!data) {\n      return;\n    }\n    if (data.__nodeProps && data.__nodeProps.leafNode) {\n      return;\n    }\n    if (data.__nodeProps && data.__nodeProps.expanded === expanded && config.force !== true) {\n      return;\n    }\n    var treeCache = computedProps.computedNodeCache;\n    var clearedCacheIds;\n    var __collapsingNodes = collapsingNodesRef.current;\n    var queue = (0, _batchUpdate.default)();\n    var doExpandOrCollapse = function doExpandOrCollapse() {\n      var expandedNodes = _objectSpread({}, getExpandedNodes());\n      if (!expanded) {\n        var recursive = !!computedProps.loadNode;\n        delete expandedNodes[id];\n        if (__collapsingNodes && __collapsingNodes[id]) {\n          delete __collapsingNodes[id];\n        }\n        if (recursive && clearedCacheIds && computedProps.collapseChildrenOnAsyncNodeCollapse) {\n          for (var _id in clearedCacheIds) {\n            delete expandedNodes[_id];\n          }\n        }\n        if (computedProps.collapseChildrenRecursive) {\n          for (var childId in expandedNodes) {\n            if (childId.indexOf(id) === 0) {\n              delete expandedNodes[childId];\n            }\n          }\n        }\n      } else {\n        expandedNodes[id] = true;\n      }\n      setExpandedNodes(expandedNodes, undefined, {\n        data: data,\n        expanded: expanded,\n        id: id\n      });\n    };\n    if (!expanded) {\n      collapsingNodesRef.current = __collapsingNodes || {};\n      collapsingNodesRef.current[id] = true;\n    }\n    if (!expanded) {\n      queue(function () {\n        var nodeCache = treeCache ? treeCache[id] : undefined;\n        if (nodeCache !== undefined && !computedProps.initialProps.loadNodeOnce) {\n          var recursive = !!computedProps.initialProps.loadNode;\n          clearedCacheIds = clearNodeChildrenCache(id, recursive, treeCache);\n          doExpandOrCollapse();\n        } else {\n          doExpandOrCollapse();\n        }\n      });\n      queue.commit();\n      return;\n    }\n    queue(function () {\n      if (expanded && data.__nodeProps && data.__nodeProps.asyncNode) {\n        loadNodeAsync(data, doExpandOrCollapse);\n      } else {\n        doExpandOrCollapse();\n      }\n    });\n    queue.commit();\n  };\n  var setNodeExpandedAt = function setNodeExpandedAt(index, expanded) {\n    var data = computedProps.getItemAt(index);\n    if (!data) {\n      return;\n    }\n    var id = computedProps.getItemId(data);\n    return setNodeExpandedById(id, expanded);\n  };\n  var toggleNodeExpand = (0, _react.useCallback)(function (dataOrIndex) {\n    var computedProps = computedPropsRef.current;\n    if (!computedProps) {\n      return;\n    }\n    var data = typeof dataOrIndex === 'number' ? computedProps.getItemAt(dataOrIndex) : dataOrIndex;\n    if (!data) {\n      return;\n    }\n    var id = computedProps.getItemId(data);\n    var expanded = isNodeExpanded(data);\n    if (typeof dataOrIndex === 'number') {\n      computedProps.setActiveIndex(dataOrIndex);\n    } else {\n      var rowIndex = computedProps.getRowIndexById(id);\n      computedProps.setActiveIndex(rowIndex);\n    }\n    return setNodeExpandedById(id, !expanded);\n  }, []);\n  var getNodeCache = (0, _react.useCallback)(function () {\n    var computedProps = computedPropsRef.current;\n    if (!computedProps) {\n      return {};\n    }\n    return computedProps.computedNodeCache || {};\n  }, []);\n  var appendCacheForNode = function appendCacheForNode(nodeId, node) {\n    var computedProps = computedPropsRef.current;\n    if (!computedProps) {\n      return;\n    }\n    var nodeCache = _objectSpread({}, getNodeCache());\n    if (node === undefined) {\n      delete nodeCache[nodeId];\n    } else {\n      nodeCache[nodeId] = _objectSpread(_objectSpread({}, nodeCache[nodeId]), node);\n    }\n    computedProps.setNodeCache(nodeCache, {\n      nodeId: nodeId,\n      node: node\n    });\n  };\n  var setNodeCache = function setNodeCache(nodeCache, info) {\n    var computedProps = computedPropsRef.current;\n    if (!computedProps) {\n      return;\n    }\n    if (computedProps.initialProps.onNodeCache) {\n      computedProps.initialProps.onNodeCache(nodeCache, info);\n    }\n    doSetNodeCache(nodeCache);\n  };\n  var computedExpandedNodes = expandedNodes;\n  var computedNodeCache = nodeCache;\n  var computedLoadingNodes = loadingNodes;\n  var once = !!computedProps.initialProps.loadNodeOnce;\n  var computedLoadNode = once ? computedProps.initialProps.loadNodeOnce : computedProps.initialProps.loadNode;\n  var computeAllNodes = function computeAllNodes(dataArray) {\n    var config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : EMPTY_OBJECT;\n    var parentNode = arguments.length > 2 ? arguments[2] : undefined;\n    var result = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n    var idProperty = config.idProperty;\n    var nodesName = config.nodesName;\n    var pathSeparator = config.pathSeparator;\n    var generateIdFromPath = computedProps.generateIdFromPath;\n    dataArray.forEach(function (item) {\n      if (item) {\n        var itemId = item[idProperty];\n        var itemNodes = item[nodesName];\n        var parentNodeId = parentNode ? parentNode[idProperty] : undefined;\n        var path = parentNode ? \"\".concat(parentNodeId).concat(pathSeparator).concat(itemId) : \"\".concat(itemId);\n        if (generateIdFromPath) {\n          item[idProperty] = path;\n        }\n        result[path] = true;\n        if (Array.isArray(itemNodes)) {\n          computeAllNodes(itemNodes, config, item, result);\n        }\n      }\n    });\n    return result;\n  };\n  var collapseAllTreeNodes = function collapseAllTreeNodes() {\n    var computedProps = computedPropsRef.current;\n    if (!computedProps) {\n      return;\n    }\n    setExpandedNodes({});\n  };\n  var expandAllTreeNodes = function expandAllTreeNodes() {\n    var computedProps = computedPropsRef.current;\n    if (!computedProps) {\n      return;\n    }\n    var config = {\n      idProperty: !computedProps.compoundIdProperty ? computedProps.idProperty : 'id',\n      nodesName: computedProps.nodesProperty || 'nodes',\n      pathSeparator: computedProps.nodePathSeparator || '/',\n      generateIdFromPath: computedProps.generateIdFromPath\n    };\n    var originalData = JSON.stringify(computedProps.originalData || []);\n    var cloneOriginalData = (0, _toConsumableArray2.default)(JSON.parse(originalData));\n    var allNodes = computeAllNodes(cloneOriginalData, config);\n    setExpandedNodes(allNodes);\n  };\n  return {\n    clearNodeChildrenCache: clearNodeChildrenCache,\n    toggleNodeExpand: toggleNodeExpand,\n    loadNodeAsync: loadNodeAsync,\n    collapsingNodesRef: collapsingNodesRef,\n    setLoadingNodes: setLoadingNodes,\n    computedTreeEnabled: computedTreeEnabled,\n    computedLoadNode: computedLoadNode,\n    computedExpandedNodes: computedExpandedNodes,\n    computedLoadingNodes: computedLoadingNodes,\n    computedNodeCache: computedNodeCache,\n    getNodeCache: getNodeCache,\n    setNodeCache: setNodeCache,\n    appendCacheForNode: appendCacheForNode,\n    isNodeExpandableAt: isNodeExpandableAt,\n    isNodeExpanded: isNodeExpanded,\n    setNodeExpandedAt: setNodeExpandedAt,\n    setNodeExpandedById: setNodeExpandedById,\n    collapseAllTreeNodes: collapseAllTreeNodes,\n    expandAllTreeNodes: expandAllTreeNodes\n  };\n};\nvar _default = useTreeColumn;\nexports.default = _default;"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;;AAEZ,IAAIA,sBAAsB,GAAGC,OAAO,CAAC,8CAA8C,CAAC;AACpFC,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAC3CC,KAAK,EAAE;AACT,CAAC,CAAC;AACFD,OAAO,CAACE,OAAO,GAAG,KAAK,CAAC;AACxB,IAAIC,mBAAmB,GAAGP,sBAAsB,CAACC,OAAO,CAAC,0CAA0C,CAAC,CAAC;AACrG,IAAIO,eAAe,GAAGR,sBAAsB,CAACC,OAAO,CAAC,sCAAsC,CAAC,CAAC;AAC7F,IAAIQ,gBAAgB,GAAGT,sBAAsB,CAACC,OAAO,CAAC,uCAAuC,CAAC,CAAC;AAC/F,IAAIS,MAAM,GAAGT,OAAO,CAAC,OAAO,CAAC;AAC7B,IAAIU,aAAa,GAAGX,sBAAsB,CAACC,OAAO,CAAC,mDAAmD,CAAC,CAAC;AACxG,IAAIW,YAAY,GAAGZ,sBAAsB,CAACC,OAAO,CAAC,mDAAmD,CAAC,CAAC;AACvG,SAASY,OAAOA,CAACC,MAAM,EAAEC,cAAc,EAAE;EAAE,IAAIC,IAAI,GAAGd,MAAM,CAACc,IAAI,CAACF,MAAM,CAAC;EAAE,IAAIZ,MAAM,CAACe,qBAAqB,EAAE;IAAE,IAAIC,OAAO,GAAGhB,MAAM,CAACe,qBAAqB,CAACH,MAAM,CAAC;IAAEC,cAAc,KAAKG,OAAO,GAAGA,OAAO,CAACC,MAAM,CAAC,UAAUC,GAAG,EAAE;MAAE,OAAOlB,MAAM,CAACmB,wBAAwB,CAACP,MAAM,EAAEM,GAAG,CAAC,CAACE,UAAU;IAAE,CAAC,CAAC,CAAC,EAAEN,IAAI,CAACO,IAAI,CAACC,KAAK,CAACR,IAAI,EAAEE,OAAO,CAAC;EAAE;EAAE,OAAOF,IAAI;AAAE;AACpV,SAASS,aAAaA,CAACC,MAAM,EAAE;EAAE,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGC,SAAS,CAACC,MAAM,EAAEF,CAAC,EAAE,EAAE;IAAE,IAAIG,MAAM,GAAG,IAAI,IAAIF,SAAS,CAACD,CAAC,CAAC,GAAGC,SAAS,CAACD,CAAC,CAAC,GAAG,CAAC,CAAC;IAAEA,CAAC,GAAG,CAAC,GAAGd,OAAO,CAACX,MAAM,CAAC4B,MAAM,CAAC,EAAE,CAAC,CAAC,CAAC,CAACC,OAAO,CAAC,UAAUC,GAAG,EAAE;MAAE,CAAC,CAAC,EAAEvB,gBAAgB,CAACH,OAAO,EAAEoB,MAAM,EAAEM,GAAG,EAAEF,MAAM,CAACE,GAAG,CAAC,CAAC;IAAE,CAAC,CAAC,GAAG9B,MAAM,CAAC+B,yBAAyB,GAAG/B,MAAM,CAACgC,gBAAgB,CAACR,MAAM,EAAExB,MAAM,CAAC+B,yBAAyB,CAACH,MAAM,CAAC,CAAC,GAAGjB,OAAO,CAACX,MAAM,CAAC4B,MAAM,CAAC,CAAC,CAACC,OAAO,CAAC,UAAUC,GAAG,EAAE;MAAE9B,MAAM,CAACC,cAAc,CAACuB,MAAM,EAAEM,GAAG,EAAE9B,MAAM,CAACmB,wBAAwB,CAACS,MAAM,EAAEE,GAAG,CAAC,CAAC;IAAE,CAAC,CAAC;EAAE;EAAE,OAAON,MAAM;AAAE;AACvgB,IAAIS,oBAAoB,GAAG,CAAC,CAAC;AAC7B,IAAIC,YAAY,GAAG,CAAC,CAAC;AACrB,IAAIC,4BAA4B,GAAG,SAASA,4BAA4BA,CAACC,gBAAgB,EAAEC,QAAQ,EAAE;EACnG,IAAIC,aAAa,GAAGF,gBAAgB,CAACG,OAAO;EAC5C,IAAI,CAACD,aAAa,EAAE;IAClB,OAAO,KAAK;EACd;EACA,IAAIE,IAAI,GAAGF,aAAa,CAACG,SAAS,CAACJ,QAAQ,CAAC;EAC5C,IAAI,CAACG,IAAI,EAAE;IACT,OAAO,KAAK;EACd;EACA,IAAIA,IAAI,CAACE,OAAO,EAAE;IAChB,OAAO,KAAK;EACd;EACA,IAAIF,IAAI,CAACG,WAAW,IAAIH,IAAI,CAACG,WAAW,CAACC,QAAQ,EAAE;IACjD,OAAO,KAAK;EACd;EACA,IAAIC,EAAE,GAAGP,aAAa,CAACQ,SAAS,CAACN,IAAI,CAAC;EACtC,IAAIO,YAAY,GAAGT,aAAa,CAACS,YAAY;EAC7C,IAAIA,YAAY,CAACC,iBAAiB,IAAID,YAAY,CAACC,iBAAiB,CAACH,EAAE,CAAC,EAAE;IACxE,OAAO,KAAK;EACd;EACA,IAAI,CAACE,YAAY,CAACE,gBAAgB,EAAE;IAClC,OAAO,IAAI;EACb;EACAhB,oBAAoB,CAACY,EAAE,GAAGA,EAAE;EAC5BZ,oBAAoB,CAACO,IAAI,GAAGA,IAAI;EAChCP,oBAAoB,CAACI,QAAQ,GAAGA,QAAQ;EACxCJ,oBAAoB,CAACiB,IAAI,GAAGV,IAAI;EAChCP,oBAAoB,CAACkB,SAAS,GAAGX,IAAI,CAACG,WAAW;EACjD,OAAOI,YAAY,CAACE,gBAAgB,CAAChB,oBAAoB,CAAC;AAC5D,CAAC;AACD,IAAImB,uBAAuB,GAAG,SAASA,uBAAuBA,CAAChB,gBAAgB,EAAEiB,WAAW,EAAEC,QAAQ,EAAE;EACtG,IAAIhB,aAAa,GAAGF,gBAAgB,CAACG,OAAO;EAC5C,IAAI,CAACD,aAAa,EAAE;IAClB;EACF;EACA,IAAIE,IAAI,GAAG,OAAOa,WAAW,KAAK,QAAQ,GAAGf,aAAa,CAACG,SAAS,CAACY,WAAW,CAAC,GAAGA,WAAW;EAC/F,IAAIE,MAAM,GAAGjB,aAAa,CAACQ,SAAS,CAACN,IAAI,CAAC;EAC1C,IAAIgB,SAAS,GAAGlB,aAAa,CAACmB,YAAY,CAAC,CAAC;EAC5C,IAAIC,IAAI,GAAG,CAAC,CAACpB,aAAa,CAACS,YAAY,CAACY,YAAY;EACpD,IAAIC,MAAM,GAAGtB,aAAa,CAACuB,gBAAgB;EAC3C,IAAI,CAACD,MAAM,IAAIN,QAAQ,EAAE;IACvBA,QAAQ,CAAC,CAAC;IACV;EACF;EACA,IAAII,IAAI,IAAIF,SAAS,IAAIA,SAAS,CAACD,MAAM,CAAC,IAAI,IAAI,IAAIC,SAAS,CAACD,MAAM,CAAC,CAACjB,aAAa,CAACS,YAAY,CAACe,aAAa,CAAC,KAAKC,SAAS,EAAE;IAC/H,IAAIT,QAAQ,EAAE;MACZA,QAAQ,CAAC,CAAC;IACZ;IACA;EACF;EACA,IAAIU,YAAY,GAAGzC,aAAa,CAAC,CAAC,CAAC,EAAEe,aAAa,CAAC2B,oBAAoB,CAAC;EACxE,IAAIC,MAAM,GAAGN,MAAM,CAAC;IAClBV,IAAI,EAAEV,IAAI;IACVW,SAAS,EAAEX,IAAI,CAACG;EAClB,CAAC,CAAC;EACF,IAAIwB,KAAK,CAACC,OAAO,CAACF,MAAM,CAAC,EAAE;IACzB5B,aAAa,CAAC+B,kBAAkB,CAACd,MAAM,EAAE,CAAC,CAAC,EAAEhD,gBAAgB,CAACH,OAAO,EAAE,CAAC,CAAC,EAAEkC,aAAa,CAACS,YAAY,CAACe,aAAa,EAAEI,MAAM,CAAC,CAAC;IAC7H,IAAIZ,QAAQ,EAAE;MACZA,QAAQ,CAAC,CAAC;IACZ;EACF,CAAC,MAAM;IACLU,YAAY,CAACT,MAAM,CAAC,GAAG,IAAI;IAC3BjB,aAAa,CAACgC,eAAe,CAACN,YAAY,CAAC;IAC3C,IAAIV,QAAQ,EAAE;MACZA,QAAQ,CAAC,CAAC;IACZ;EACF;EACA,IAAI,OAAOY,MAAM,CAACK,IAAI,KAAK,UAAU,EAAE;IACrCL,MAAM,CAACK,IAAI,CAAC,UAAUC,KAAK,EAAE;MAC3B,IAAIlC,aAAa,GAAGF,gBAAgB,CAACG,OAAO;MAC5C,IAAI,CAACD,aAAa,EAAE;QAClB;MACF;MACA,IAAI0B,YAAY,GAAGzC,aAAa,CAAC,CAAC,CAAC,EAAEe,aAAa,CAAC2B,oBAAoB,CAAC;MACxE,OAAOD,YAAY,CAACT,MAAM,CAAC;MAC3BjB,aAAa,CAACgC,eAAe,CAACN,YAAY,CAAC;MAC3C1B,aAAa,CAAC+B,kBAAkB,CAACd,MAAM,EAAE,CAAC,CAAC,EAAEhD,gBAAgB,CAACH,OAAO,EAAE,CAAC,CAAC,EAAEkC,aAAa,CAACS,YAAY,CAACe,aAAa,EAAEU,KAAK,CAAC,CAAC;IAC9H,CAAC,CAAC;EACJ;AACF,CAAC;AACD,IAAIC,aAAa,GAAG,SAASA,aAAaA,CAACC,KAAK,EAAEpC,aAAa,EAAEF,gBAAgB,EAAE;EACjF,IAAIuC,mBAAmB,GAAGD,KAAK,CAACE,WAAW,IAAI,CAAC,CAACF,KAAK,CAACG,UAAU;EACjE,IAAIC,YAAY,GAAG,CAAC,CAAC,EAAErE,aAAa,CAACL,OAAO,EAAEsE,KAAK,EAAE,eAAe,EAAEX,SAAS,EAAE;MAC7EgB,QAAQ,EAAE,SAASA,QAAQA,CAACC,aAAa,EAAE;QACzC,IAAIC,EAAE,GAAG3C,aAAa,CAACS,YAAY,CAACmC,qBAAqB;QACzD,IAAID,EAAE,EAAE;UACN,KAAK,IAAIE,IAAI,GAAGzD,SAAS,CAACC,MAAM,EAAEyD,IAAI,GAAG,IAAIjB,KAAK,CAACgB,IAAI,GAAG,CAAC,GAAGA,IAAI,GAAG,CAAC,GAAG,CAAC,CAAC,EAAEE,IAAI,GAAG,CAAC,EAAEA,IAAI,GAAGF,IAAI,EAAEE,IAAI,EAAE,EAAE;YAC1GD,IAAI,CAACC,IAAI,GAAG,CAAC,CAAC,GAAG3D,SAAS,CAAC2D,IAAI,CAAC;UAClC;UACAJ,EAAE,CAAC3D,KAAK,CAAC,KAAK,CAAC,EAAE,CAAC;YAChB0D,aAAa,EAAEA;UACjB,CAAC,CAAC,CAACM,MAAM,CAACF,IAAI,CAAC,CAAC;QAClB;MACF;IACF,CAAC,CAAC;IACFG,aAAa,GAAG,CAAC,CAAC,EAAEjF,eAAe,CAACF,OAAO,EAAE0E,YAAY,EAAE,CAAC,CAAC;IAC7DE,aAAa,GAAGO,aAAa,CAAC,CAAC,CAAC;IAChCC,kBAAkB,GAAGD,aAAa,CAAC,CAAC,CAAC;EACvC,IAAIE,kBAAkB,GAAG,SAASA,kBAAkBA,CAACC,KAAK,EAAE;IAC1D,OAAOvD,4BAA4B,CAACC,gBAAgB,EAAEsD,KAAK,CAAC;EAC9D,CAAC;EACD,IAAIC,gBAAgB,GAAG,SAASA,gBAAgBA,CAACX,aAAa,EAAEY,cAAc,EAAEC,GAAG,EAAE;IACnFA,GAAG,GAAGA,GAAG,IAAI,CAAC,CAAC;IACf,IAAIC,IAAI,GAAGD,GAAG;MACZhD,EAAE,GAAGiD,IAAI,CAACjD,EAAE;MACZL,IAAI,GAAGsD,IAAI,CAACtD,IAAI;MAChBuD,QAAQ,GAAGD,IAAI,CAACC,QAAQ;IAC1B,IAAIL,KAAK;IACT,IAAIvC,SAAS;IACb,IAAIb,aAAa,GAAGF,gBAAgB,CAACG,OAAO;IAC5C,IAAI,CAACD,aAAa,EAAE;MAClB;IACF;IACA,IAAIS,YAAY,GAAGT,aAAa,CAACS,YAAY;IAC7C,IAAIP,IAAI,EAAE;MACRW,SAAS,GAAGX,IAAI,CAACG,WAAW;MAC5B+C,KAAK,GAAGpD,aAAa,CAAC0D,YAAY,CAACnD,EAAE,CAAC;MACtC,IAAI,CAACkD,QAAQ,EAAE;QACb,IAAIhD,YAAY,CAACkD,cAAc,IAAIlD,YAAY,CAACkD,cAAc,CAAC;UAC7D9C,SAAS,EAAEA,SAAS;UACpBD,IAAI,EAAEV,IAAI;UACVA,IAAI,EAAEA,IAAI;UACVK,EAAE,EAAEA,EAAE;UACN6C,KAAK,EAAEA;QACT,CAAC,CAAC,KAAK,KAAK,EAAE;UACZ;QACF;MACF,CAAC,MAAM;QACL,IAAI,CAACD,kBAAkB,CAACC,KAAK,CAAC,EAAE;UAC9B;QACF;QACA,IAAI3C,YAAY,CAACmD,YAAY,IAAInD,YAAY,CAACmD,YAAY,CAAC;UACzD/C,SAAS,EAAEA,SAAS;UACpBD,IAAI,EAAEV,IAAI;UACVA,IAAI,EAAEA,IAAI;UACVK,EAAE,EAAEA,EAAE;UACN6C,KAAK,EAAEA;QACT,CAAC,CAAC,KAAK,KAAK,EAAE;UACZ;QACF;MACF;MACA,IAAI3C,YAAY,CAACoD,kBAAkB,IAAIpD,YAAY,CAACoD,kBAAkB,CAAC;QACrEnB,aAAa,EAAEA,aAAa;QAC5BnC,EAAE,EAAEA,EAAE;QACN6C,KAAK,EAAEA,KAAK;QACZlD,IAAI,EAAEA,IAAI;QACVW,SAAS,EAAEA,SAAS;QACpBD,IAAI,EAAEV,IAAI;QACV4D,YAAY,EAAEL;MAChB,CAAC,CAAC,KAAK,KAAK,EAAE;QACZ;MACF;IACF;IACA,IAAIhD,YAAY,CAACmC,qBAAqB,EAAE;MACtCnC,YAAY,CAACmC,qBAAqB,CAAC;QACjCF,aAAa,EAAEA,aAAa;QAC5BoB,YAAY,EAAEL,QAAQ;QACtB5C,SAAS,EAAEA,SAAS;QACpBX,IAAI,EAAEA,IAAI;QACVK,EAAE,EAAEA,EAAE;QACN6C,KAAK,EAAEA;MACT,CAAC,CAAC;IACJ;IACA,IAAIV,aAAa,EAAE;MACjBQ,kBAAkB,CAACR,aAAa,CAAC;IACnC;EACF,CAAC;EACD,IAAIqB,aAAa,GAAG,CAAC,CAAC,EAAE5F,aAAa,CAACL,OAAO,EAAEsE,KAAK,EAAE,WAAW,CAAC;IAChE4B,aAAa,GAAG,CAAC,CAAC,EAAEhG,eAAe,CAACF,OAAO,EAAEiG,aAAa,EAAE,CAAC,CAAC;IAC9D7C,SAAS,GAAG8C,aAAa,CAAC,CAAC,CAAC;IAC5BC,cAAc,GAAGD,aAAa,CAAC,CAAC,CAAC;EACnC,IAAIE,SAAS,GAAG,CAAC,CAAC,EAAEhG,MAAM,CAACiG,QAAQ,EAAE,CAAC,CAAC,CAAC;IACtCC,UAAU,GAAG,CAAC,CAAC,EAAEpG,eAAe,CAACF,OAAO,EAAEoG,SAAS,EAAE,CAAC,CAAC;IACvDxC,YAAY,GAAG0C,UAAU,CAAC,CAAC,CAAC;IAC5BpC,eAAe,GAAGoC,UAAU,CAAC,CAAC,CAAC;EACjC,IAAIC,kBAAkB,GAAG,CAAC,CAAC,EAAEnG,MAAM,CAACoG,MAAM,EAAE,CAAC,CAAC,CAAC;EAC/C,IAAIC,cAAc,GAAG,SAASA,cAAcA,CAACrE,IAAI,EAAE;IACjD,IAAIF,aAAa,GAAGF,gBAAgB,CAACG,OAAO;IAC5C,IAAI,CAACD,aAAa,EAAE;MAClB,OAAO,KAAK;IACd;IACA,IAAIE,IAAI,IAAI,IAAI,EAAE;MAChB,OAAO,KAAK;IACd;IACA,IAAIkD,KAAK;IACT,IAAI,OAAOlD,IAAI,IAAI,QAAQ,EAAE;MAC3BkD,KAAK,GAAGlD,IAAI;MACZA,IAAI,GAAGF,aAAa,CAACG,SAAS,CAACiD,KAAK,CAAC;IACvC;IACA,IAAIV,aAAa,GAAG1C,aAAa,CAACwE,qBAAqB;IACvD,IAAIjE,EAAE,GAAGP,aAAa,CAACQ,SAAS,CAACN,IAAI,CAAC;IACtC,IAAI,CAACwC,aAAa,EAAE;MAClB,OAAO,KAAK;IACd;IACA,OAAO,CAAC,CAACA,aAAa,CAACnC,EAAE,CAAC;EAC5B,CAAC;EACD,IAAIkE,gBAAgB,GAAG,SAASA,gBAAgBA,CAAA,EAAG;IACjD,OAAO3E,gBAAgB,CAACG,OAAO,CAACuE,qBAAqB;EACvD,CAAC;EACD,IAAIE,aAAa,GAAG,CAAC,CAAC,EAAExG,MAAM,CAACyG,WAAW,EAAE,UAAUzE,IAAI,EAAEc,QAAQ,EAAE;IACpE,OAAOF,uBAAuB,CAAChB,gBAAgB,EAAEI,IAAI,EAAEc,QAAQ,CAAC;EAClE,CAAC,EAAE,EAAE,CAAC;EACN,IAAI4D,sBAAsB,GAAG,SAASA,sBAAsBA,CAAC3D,MAAM,EAAE;IACnE,IAAI4D,SAAS,GAAGzF,SAAS,CAACC,MAAM,GAAG,CAAC,IAAID,SAAS,CAAC,CAAC,CAAC,KAAKqC,SAAS,GAAGrC,SAAS,CAAC,CAAC,CAAC,GAAG,IAAI;IACxF,IAAI0F,SAAS,GAAG1F,SAAS,CAACC,MAAM,GAAG,CAAC,GAAGD,SAAS,CAAC,CAAC,CAAC,GAAGqC,SAAS;IAC/D,IAAIsD,UAAU,GAAG3F,SAAS,CAACC,MAAM,GAAG,CAAC,GAAGD,SAAS,CAAC,CAAC,CAAC,GAAGqC,SAAS;IAChE,IAAIzB,aAAa,GAAGF,gBAAgB,CAACG,OAAO;IAC5C8E,UAAU,GAAGA,UAAU,IAAI,CAAC,CAAC;IAC7B,IAAI,CAAC/E,aAAa,EAAE;MAClB,OAAO+E,UAAU;IACnB;IACA,IAAIC,MAAM,GAAG,CAACF,SAAS;IACvBA,SAAS,GAAGA,SAAS,IAAI7F,aAAa,CAAC,CAAC,CAAC,EAAEkC,YAAY,CAAC,CAAC,CAAC;IAC1D,IAAIjB,IAAI,GAAGF,aAAa,CAACiF,OAAO,CAAChE,MAAM,CAAC;IACxC,IAAI,CAACf,IAAI,EAAE;MACT,OAAO6E,UAAU;IACnB;IACA,IAAI7D,SAAS,GAAG4D,SAAS,CAAC7D,MAAM,CAAC;IACjC,IAAIiE,UAAU,GAAGhE,SAAS,IAAI,IAAI,GAAGA,SAAS,CAAClB,aAAa,CAACwB,aAAa,CAAC,GAAGtB,IAAI,CAACF,aAAa,CAACwB,aAAa,CAAC;IAC/G,IAAI0D,UAAU,IAAIL,SAAS,IAAI7E,aAAa,CAACS,YAAY,CAAC0E,mCAAmC,EAAE;MAC7F,IAAIC,qBAAqB,GAAGpF,aAAa,CAACS,YAAY;QACpD4E,kBAAkB,GAAGD,qBAAqB,CAACC,kBAAkB;QAC7DC,iBAAiB,GAAGF,qBAAqB,CAACE,iBAAiB;MAC7DJ,UAAU,CAAC3F,OAAO,CAAC,UAAUgG,SAAS,EAAE;QACtC,IAAI,CAACA,SAAS,EAAE;UACd;QACF;QACA,IAAIC,OAAO,GAAGxF,aAAa,CAACQ,SAAS,CAAC+E,SAAS,CAAC;QAChD,IAAIA,SAAS,CAAClF,WAAW,EAAE;UACzBmF,OAAO,GAAGD,SAAS,CAAClF,WAAW,CAACb,GAAG;QACrC,CAAC,MAAM,IAAI6F,kBAAkB,EAAE;UAC7BG,OAAO,GAAG,EAAE,CAACxC,MAAM,CAAC/B,MAAM,CAAC,CAAC+B,MAAM,CAACsC,iBAAiB,CAAC,CAACtC,MAAM,CAACwC,OAAO,CAAC;QACvE;QACAT,UAAU,CAACS,OAAO,CAAC,GAAG,IAAI;QAC1BxF,aAAa,CAAC4E,sBAAsB,CAACY,OAAO,EAAEX,SAAS,EAAEC,SAAS,EAAEC,UAAU,CAAC;MACjF,CAAC,CAAC;IACJ;IACAD,SAAS,CAAC7D,MAAM,CAAC,GAAGhC,aAAa,CAACA,aAAa,CAAC,CAAC,CAAC,EAAEiC,SAAS,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAEjD,gBAAgB,CAACH,OAAO,EAAE,CAAC,CAAC,EAAEkC,aAAa,CAACS,YAAY,CAACe,aAAa,EAAEtB,IAAI,CAACG,WAAW,GAAGH,IAAI,CAACG,WAAW,CAACoF,YAAY,GAAGvF,IAAI,CAACF,aAAa,CAACS,YAAY,CAACe,aAAa,CAAC,CAAC,CAAC;IACnP,IAAIwD,MAAM,EAAE;MACVU,YAAY,CAACZ,SAAS,EAAE;QACtB7D,MAAM,EAAEA,MAAM;QACdL,IAAI,EAAEV;MACR,CAAC,CAAC;MACF,OAAO6E,UAAU;IACnB;IACA,OAAOA,UAAU;EACnB,CAAC;EACD,IAAIY,mBAAmB,GAAG,SAASA,mBAAmBA,CAACpF,EAAE,EAAEkD,QAAQ,EAAE;IACnE,IAAImC,MAAM,GAAGxG,SAAS,CAACC,MAAM,GAAG,CAAC,IAAID,SAAS,CAAC,CAAC,CAAC,KAAKqC,SAAS,GAAGrC,SAAS,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;IACnF,IAAIY,aAAa,GAAGF,gBAAgB,CAACG,OAAO;IAC5C,IAAI,CAACD,aAAa,EAAE;MAClB;IACF;IACA,IAAI,CAACA,aAAa,CAACiF,OAAO,EAAE;MAC1B;IACF;IACA,IAAIZ,kBAAkB,GAAGrE,aAAa,CAACqE,kBAAkB;IACzD,IAAInE,IAAI,GAAGF,aAAa,CAACiF,OAAO,CAAC1E,EAAE,CAAC;IACpC,IAAI,CAACL,IAAI,EAAE;MACT;IACF;IACA,IAAIA,IAAI,CAACG,WAAW,IAAIH,IAAI,CAACG,WAAW,CAACC,QAAQ,EAAE;MACjD;IACF;IACA,IAAIJ,IAAI,CAACG,WAAW,IAAIH,IAAI,CAACG,WAAW,CAACoD,QAAQ,KAAKA,QAAQ,IAAImC,MAAM,CAACC,KAAK,KAAK,IAAI,EAAE;MACvF;IACF;IACA,IAAIf,SAAS,GAAG9E,aAAa,CAAC8F,iBAAiB;IAC/C,IAAIC,eAAe;IACnB,IAAIC,iBAAiB,GAAG3B,kBAAkB,CAACpE,OAAO;IAClD,IAAIgG,KAAK,GAAG,CAAC,CAAC,EAAE7H,YAAY,CAACN,OAAO,EAAE,CAAC;IACvC,IAAIoI,kBAAkB,GAAG,SAASA,kBAAkBA,CAAA,EAAG;MACrD,IAAIxD,aAAa,GAAGzD,aAAa,CAAC,CAAC,CAAC,EAAEwF,gBAAgB,CAAC,CAAC,CAAC;MACzD,IAAI,CAAChB,QAAQ,EAAE;QACb,IAAIoB,SAAS,GAAG,CAAC,CAAC7E,aAAa,CAACmG,QAAQ;QACxC,OAAOzD,aAAa,CAACnC,EAAE,CAAC;QACxB,IAAIyF,iBAAiB,IAAIA,iBAAiB,CAACzF,EAAE,CAAC,EAAE;UAC9C,OAAOyF,iBAAiB,CAACzF,EAAE,CAAC;QAC9B;QACA,IAAIsE,SAAS,IAAIkB,eAAe,IAAI/F,aAAa,CAACmF,mCAAmC,EAAE;UACrF,KAAK,IAAIiB,GAAG,IAAIL,eAAe,EAAE;YAC/B,OAAOrD,aAAa,CAAC0D,GAAG,CAAC;UAC3B;QACF;QACA,IAAIpG,aAAa,CAACqG,yBAAyB,EAAE;UAC3C,KAAK,IAAIb,OAAO,IAAI9C,aAAa,EAAE;YACjC,IAAI8C,OAAO,CAACc,OAAO,CAAC/F,EAAE,CAAC,KAAK,CAAC,EAAE;cAC7B,OAAOmC,aAAa,CAAC8C,OAAO,CAAC;YAC/B;UACF;QACF;MACF,CAAC,MAAM;QACL9C,aAAa,CAACnC,EAAE,CAAC,GAAG,IAAI;MAC1B;MACA8C,gBAAgB,CAACX,aAAa,EAAEjB,SAAS,EAAE;QACzCvB,IAAI,EAAEA,IAAI;QACVuD,QAAQ,EAAEA,QAAQ;QAClBlD,EAAE,EAAEA;MACN,CAAC,CAAC;IACJ,CAAC;IACD,IAAI,CAACkD,QAAQ,EAAE;MACbY,kBAAkB,CAACpE,OAAO,GAAG+F,iBAAiB,IAAI,CAAC,CAAC;MACpD3B,kBAAkB,CAACpE,OAAO,CAACM,EAAE,CAAC,GAAG,IAAI;IACvC;IACA,IAAI,CAACkD,QAAQ,EAAE;MACbwC,KAAK,CAAC,YAAY;QAChB,IAAI/E,SAAS,GAAG4D,SAAS,GAAGA,SAAS,CAACvE,EAAE,CAAC,GAAGkB,SAAS;QACrD,IAAIP,SAAS,KAAKO,SAAS,IAAI,CAACzB,aAAa,CAACS,YAAY,CAACY,YAAY,EAAE;UACvE,IAAIwD,SAAS,GAAG,CAAC,CAAC7E,aAAa,CAACS,YAAY,CAAC0F,QAAQ;UACrDJ,eAAe,GAAGnB,sBAAsB,CAACrE,EAAE,EAAEsE,SAAS,EAAEC,SAAS,CAAC;UAClEoB,kBAAkB,CAAC,CAAC;QACtB,CAAC,MAAM;UACLA,kBAAkB,CAAC,CAAC;QACtB;MACF,CAAC,CAAC;MACFD,KAAK,CAACM,MAAM,CAAC,CAAC;MACd;IACF;IACAN,KAAK,CAAC,YAAY;MAChB,IAAIxC,QAAQ,IAAIvD,IAAI,CAACG,WAAW,IAAIH,IAAI,CAACG,WAAW,CAACmG,SAAS,EAAE;QAC9D9B,aAAa,CAACxE,IAAI,EAAEgG,kBAAkB,CAAC;MACzC,CAAC,MAAM;QACLA,kBAAkB,CAAC,CAAC;MACtB;IACF,CAAC,CAAC;IACFD,KAAK,CAACM,MAAM,CAAC,CAAC;EAChB,CAAC;EACD,IAAIE,iBAAiB,GAAG,SAASA,iBAAiBA,CAACrD,KAAK,EAAEK,QAAQ,EAAE;IAClE,IAAIvD,IAAI,GAAGF,aAAa,CAACG,SAAS,CAACiD,KAAK,CAAC;IACzC,IAAI,CAAClD,IAAI,EAAE;MACT;IACF;IACA,IAAIK,EAAE,GAAGP,aAAa,CAACQ,SAAS,CAACN,IAAI,CAAC;IACtC,OAAOyF,mBAAmB,CAACpF,EAAE,EAAEkD,QAAQ,CAAC;EAC1C,CAAC;EACD,IAAIiD,gBAAgB,GAAG,CAAC,CAAC,EAAExI,MAAM,CAACyG,WAAW,EAAE,UAAU5D,WAAW,EAAE;IACpE,IAAIf,aAAa,GAAGF,gBAAgB,CAACG,OAAO;IAC5C,IAAI,CAACD,aAAa,EAAE;MAClB;IACF;IACA,IAAIE,IAAI,GAAG,OAAOa,WAAW,KAAK,QAAQ,GAAGf,aAAa,CAACG,SAAS,CAACY,WAAW,CAAC,GAAGA,WAAW;IAC/F,IAAI,CAACb,IAAI,EAAE;MACT;IACF;IACA,IAAIK,EAAE,GAAGP,aAAa,CAACQ,SAAS,CAACN,IAAI,CAAC;IACtC,IAAIuD,QAAQ,GAAGc,cAAc,CAACrE,IAAI,CAAC;IACnC,IAAI,OAAOa,WAAW,KAAK,QAAQ,EAAE;MACnCf,aAAa,CAAC2G,cAAc,CAAC5F,WAAW,CAAC;IAC3C,CAAC,MAAM;MACL,IAAIhB,QAAQ,GAAGC,aAAa,CAAC4G,eAAe,CAACrG,EAAE,CAAC;MAChDP,aAAa,CAAC2G,cAAc,CAAC5G,QAAQ,CAAC;IACxC;IACA,OAAO4F,mBAAmB,CAACpF,EAAE,EAAE,CAACkD,QAAQ,CAAC;EAC3C,CAAC,EAAE,EAAE,CAAC;EACN,IAAItC,YAAY,GAAG,CAAC,CAAC,EAAEjD,MAAM,CAACyG,WAAW,EAAE,YAAY;IACrD,IAAI3E,aAAa,GAAGF,gBAAgB,CAACG,OAAO;IAC5C,IAAI,CAACD,aAAa,EAAE;MAClB,OAAO,CAAC,CAAC;IACX;IACA,OAAOA,aAAa,CAAC8F,iBAAiB,IAAI,CAAC,CAAC;EAC9C,CAAC,EAAE,EAAE,CAAC;EACN,IAAI/D,kBAAkB,GAAG,SAASA,kBAAkBA,CAACd,MAAM,EAAEL,IAAI,EAAE;IACjE,IAAIZ,aAAa,GAAGF,gBAAgB,CAACG,OAAO;IAC5C,IAAI,CAACD,aAAa,EAAE;MAClB;IACF;IACA,IAAIkB,SAAS,GAAGjC,aAAa,CAAC,CAAC,CAAC,EAAEkC,YAAY,CAAC,CAAC,CAAC;IACjD,IAAIP,IAAI,KAAKa,SAAS,EAAE;MACtB,OAAOP,SAAS,CAACD,MAAM,CAAC;IAC1B,CAAC,MAAM;MACLC,SAAS,CAACD,MAAM,CAAC,GAAGhC,aAAa,CAACA,aAAa,CAAC,CAAC,CAAC,EAAEiC,SAAS,CAACD,MAAM,CAAC,CAAC,EAAEL,IAAI,CAAC;IAC/E;IACAZ,aAAa,CAAC0F,YAAY,CAACxE,SAAS,EAAE;MACpCD,MAAM,EAAEA,MAAM;MACdL,IAAI,EAAEA;IACR,CAAC,CAAC;EACJ,CAAC;EACD,IAAI8E,YAAY,GAAG,SAASA,YAAYA,CAACxE,SAAS,EAAE2F,IAAI,EAAE;IACxD,IAAI7G,aAAa,GAAGF,gBAAgB,CAACG,OAAO;IAC5C,IAAI,CAACD,aAAa,EAAE;MAClB;IACF;IACA,IAAIA,aAAa,CAACS,YAAY,CAACqG,WAAW,EAAE;MAC1C9G,aAAa,CAACS,YAAY,CAACqG,WAAW,CAAC5F,SAAS,EAAE2F,IAAI,CAAC;IACzD;IACA5C,cAAc,CAAC/C,SAAS,CAAC;EAC3B,CAAC;EACD,IAAIsD,qBAAqB,GAAG9B,aAAa;EACzC,IAAIoD,iBAAiB,GAAG5E,SAAS;EACjC,IAAIS,oBAAoB,GAAGD,YAAY;EACvC,IAAIN,IAAI,GAAG,CAAC,CAACpB,aAAa,CAACS,YAAY,CAACY,YAAY;EACpD,IAAIE,gBAAgB,GAAGH,IAAI,GAAGpB,aAAa,CAACS,YAAY,CAACY,YAAY,GAAGrB,aAAa,CAACS,YAAY,CAAC0F,QAAQ;EAC3G,IAAIY,eAAe,GAAG,SAASA,eAAeA,CAACC,SAAS,EAAE;IACxD,IAAIpB,MAAM,GAAGxG,SAAS,CAACC,MAAM,GAAG,CAAC,IAAID,SAAS,CAAC,CAAC,CAAC,KAAKqC,SAAS,GAAGrC,SAAS,CAAC,CAAC,CAAC,GAAGQ,YAAY;IAC7F,IAAIqH,UAAU,GAAG7H,SAAS,CAACC,MAAM,GAAG,CAAC,GAAGD,SAAS,CAAC,CAAC,CAAC,GAAGqC,SAAS;IAChE,IAAIG,MAAM,GAAGxC,SAAS,CAACC,MAAM,GAAG,CAAC,IAAID,SAAS,CAAC,CAAC,CAAC,KAAKqC,SAAS,GAAGrC,SAAS,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;IACnF,IAAI8H,UAAU,GAAGtB,MAAM,CAACsB,UAAU;IAClC,IAAIC,SAAS,GAAGvB,MAAM,CAACuB,SAAS;IAChC,IAAIC,aAAa,GAAGxB,MAAM,CAACwB,aAAa;IACxC,IAAI/B,kBAAkB,GAAGrF,aAAa,CAACqF,kBAAkB;IACzD2B,SAAS,CAACzH,OAAO,CAAC,UAAU8H,IAAI,EAAE;MAChC,IAAIA,IAAI,EAAE;QACR,IAAIC,MAAM,GAAGD,IAAI,CAACH,UAAU,CAAC;QAC7B,IAAIK,SAAS,GAAGF,IAAI,CAACF,SAAS,CAAC;QAC/B,IAAIK,YAAY,GAAGP,UAAU,GAAGA,UAAU,CAACC,UAAU,CAAC,GAAGzF,SAAS;QAClE,IAAIgG,IAAI,GAAGR,UAAU,GAAG,EAAE,CAACjE,MAAM,CAACwE,YAAY,CAAC,CAACxE,MAAM,CAACoE,aAAa,CAAC,CAACpE,MAAM,CAACsE,MAAM,CAAC,GAAG,EAAE,CAACtE,MAAM,CAACsE,MAAM,CAAC;QACxG,IAAIjC,kBAAkB,EAAE;UACtBgC,IAAI,CAACH,UAAU,CAAC,GAAGO,IAAI;QACzB;QACA7F,MAAM,CAAC6F,IAAI,CAAC,GAAG,IAAI;QACnB,IAAI5F,KAAK,CAACC,OAAO,CAACyF,SAAS,CAAC,EAAE;UAC5BR,eAAe,CAACQ,SAAS,EAAE3B,MAAM,EAAEyB,IAAI,EAAEzF,MAAM,CAAC;QAClD;MACF;IACF,CAAC,CAAC;IACF,OAAOA,MAAM;EACf,CAAC;EACD,IAAI8F,oBAAoB,GAAG,SAASA,oBAAoBA,CAAA,EAAG;IACzD,IAAI1H,aAAa,GAAGF,gBAAgB,CAACG,OAAO;IAC5C,IAAI,CAACD,aAAa,EAAE;MAClB;IACF;IACAqD,gBAAgB,CAAC,CAAC,CAAC,CAAC;EACtB,CAAC;EACD,IAAIsE,kBAAkB,GAAG,SAASA,kBAAkBA,CAAA,EAAG;IACrD,IAAI3H,aAAa,GAAGF,gBAAgB,CAACG,OAAO;IAC5C,IAAI,CAACD,aAAa,EAAE;MAClB;IACF;IACA,IAAI4F,MAAM,GAAG;MACXsB,UAAU,EAAE,CAAClH,aAAa,CAAC4H,kBAAkB,GAAG5H,aAAa,CAACkH,UAAU,GAAG,IAAI;MAC/EC,SAAS,EAAEnH,aAAa,CAACwB,aAAa,IAAI,OAAO;MACjD4F,aAAa,EAAEpH,aAAa,CAACsF,iBAAiB,IAAI,GAAG;MACrDD,kBAAkB,EAAErF,aAAa,CAACqF;IACpC,CAAC;IACD,IAAIwC,YAAY,GAAGC,IAAI,CAACC,SAAS,CAAC/H,aAAa,CAAC6H,YAAY,IAAI,EAAE,CAAC;IACnE,IAAIG,iBAAiB,GAAG,CAAC,CAAC,EAAEjK,mBAAmB,CAACD,OAAO,EAAEgK,IAAI,CAACG,KAAK,CAACJ,YAAY,CAAC,CAAC;IAClF,IAAIK,QAAQ,GAAGnB,eAAe,CAACiB,iBAAiB,EAAEpC,MAAM,CAAC;IACzDvC,gBAAgB,CAAC6E,QAAQ,CAAC;EAC5B,CAAC;EACD,OAAO;IACLtD,sBAAsB,EAAEA,sBAAsB;IAC9C8B,gBAAgB,EAAEA,gBAAgB;IAClChC,aAAa,EAAEA,aAAa;IAC5BL,kBAAkB,EAAEA,kBAAkB;IACtCrC,eAAe,EAAEA,eAAe;IAChCK,mBAAmB,EAAEA,mBAAmB;IACxCd,gBAAgB,EAAEA,gBAAgB;IAClCiD,qBAAqB,EAAEA,qBAAqB;IAC5C7C,oBAAoB,EAAEA,oBAAoB;IAC1CmE,iBAAiB,EAAEA,iBAAiB;IACpC3E,YAAY,EAAEA,YAAY;IAC1BuE,YAAY,EAAEA,YAAY;IAC1B3D,kBAAkB,EAAEA,kBAAkB;IACtCoB,kBAAkB,EAAEA,kBAAkB;IACtCoB,cAAc,EAAEA,cAAc;IAC9BkC,iBAAiB,EAAEA,iBAAiB;IACpCd,mBAAmB,EAAEA,mBAAmB;IACxC+B,oBAAoB,EAAEA,oBAAoB;IAC1CC,kBAAkB,EAAEA;EACtB,CAAC;AACH,CAAC;AACD,IAAIQ,QAAQ,GAAGhG,aAAa;AAC5BvE,OAAO,CAACE,OAAO,GAAGqK,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"script"}