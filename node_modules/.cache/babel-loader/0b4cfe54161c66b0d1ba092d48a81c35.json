{"ast":null,"code":"/**\n * Copyright Â© INOVUA TRADING.\n *\n * This source code is licensed under the Commercial License found in the\n * LICENSE file in the root directory of this source tree.\n */\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\nvar _typeof2 = _interopRequireDefault(require(\"@babel/runtime/helpers/typeof\"));\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\nvar _react = require(\"react\");\nvar _useProperty7 = _interopRequireDefault(require(\"@inovua/reactdatagrid-community/hooks/useProperty\"));\nvar _sealedObjectFactory = _interopRequireDefault(require(\"@inovua/reactdatagrid-community/utils/sealedObjectFactory\"));\nvar _batchUpdate = _interopRequireDefault(require(\"@inovua/reactdatagrid-community/utils/batchUpdate\"));\nvar _isControlledProperty = _interopRequireDefault(require(\"@inovua/reactdatagrid-community/utils/isControlledProperty\"));\nvar _renderDetailsGrid = _interopRequireDefault(require(\"./renderDetailsGrid\"));\nvar _isRowExpandEnabled_FromProps = require(\"@inovua/reactdatagrid-community/utils/isRowExpandEnabled_FromProps\");\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      (0, _defineProperty2.default)(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n  return target;\n}\nvar EXPANDABLE_ROW_INFO = (0, _sealedObjectFactory.default)({\n  rowIndex: undefined,\n  data: undefined,\n  id: undefined\n});\nvar getRowHeights_FromProps = function getRowHeights_FromProps(computedProps) {\n  return computedProps.computedRowHeights || {};\n};\nvar setRowHeightById_FromProps = function setRowHeightById_FromProps(rowHeight, id, computedProps) {\n  var rowHeights = _objectSpread({}, getRowHeights_FromProps(computedProps));\n  var changed = false;\n  if (rowHeight != null) {\n    if (rowHeights[id] !== rowHeight) {\n      rowHeights[id] = rowHeight;\n      changed = true;\n    }\n  } else {\n    if (rowHeights[id]) {\n      delete rowHeights[id];\n      changed = true;\n    }\n  }\n  if (changed) {\n    computedProps.setRowHeights(rowHeights);\n  }\n};\nvar updateExpandedHeights_FromProps = function updateExpandedHeights_FromProps(computedProps, rowHeights) {\n  var rowExpandHeight = computedProps.rowExpandHeight,\n    dataMap = computedProps.dataMap;\n  var expandedRows = getExpandedMap_FromProps(computedProps);\n  var defaultRowHeight = computedProps.rowHeight;\n  var heights = {};\n  var dataIndexMap = computedProps.dataIndexMap;\n  if (dataIndexMap) {\n    for (var itemId in expandedRows) {\n      var index = dataIndexMap[itemId];\n      if (index !== undefined) {\n        if (typeof rowExpandHeight === 'number') {\n          heights[index] = rowExpandHeight;\n        } else if (typeof rowExpandHeight === 'function') {\n          var currentRowHeight = rowExpandHeight({\n            data: dataMap && dataMap[itemId]\n          });\n          heights[index] = currentRowHeight;\n        }\n      }\n    }\n  }\n  rowHeights = rowHeights || getRowHeights_FromProps(computedProps);\n  if (rowHeights && dataIndexMap) {\n    for (var _itemId in rowHeights) {\n      var _index = dataIndexMap[_itemId];\n      if (_index !== undefined) {\n        heights[_index] = rowHeights[_itemId];\n      }\n    }\n  }\n  if (computedProps.initialProps.onUpdateRowHeights) {\n    computedProps.initialProps.onUpdateRowHeights(heights, computedProps);\n  }\n  computedProps.rowHeightManager.setValues({\n    defaultRowHeight: defaultRowHeight,\n    map: heights\n  });\n};\nvar setExpandedMap_FromProps = function setExpandedMap_FromProps(expandedMap, collapsedMap) {\n  var _ref = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {\n      id: null,\n      data: null,\n      expanded: false\n    },\n    id = _ref.id,\n    data = _ref.data,\n    expanded = _ref.expanded;\n  var computedProps = arguments.length > 3 ? arguments[3] : undefined;\n  var index;\n  if (expandedMap === true && !computedProps.multiRowExpand) {\n    throw new Error('cannot expand all when multiRowExpand is false');\n  }\n  if (data) {\n    index = computedProps.dataIndexMap[id];\n    if (!expanded) {\n      var rowHeights = computedProps.computedRowHeights;\n      if (rowHeights && rowHeights[id]) {\n        rowHeights = _objectSpread({}, rowHeights);\n        delete rowHeights[id];\n        computedProps.setRowHeights(rowHeights);\n      }\n      if (computedProps.initialProps.onRowCollapse && computedProps.initialProps.onRowCollapse({\n        data: data,\n        id: id,\n        index: index\n      }) === false) {\n        return;\n      }\n    } else {\n      if (!computedProps.isRowExpandableAt(index)) {\n        return;\n      }\n      if (computedProps.initialProps.onRowExpand && computedProps.initialProps.onRowExpand({\n        data: data,\n        id: id,\n        index: index\n      }) === false) {\n        return;\n      }\n      if (!computedProps.multiRowExpand) {\n        expandedMap = (0, _defineProperty2.default)({}, id, true);\n      }\n    }\n    if (computedProps.initialProps.onRowExpandChange && computedProps.initialProps.onRowExpandChange({\n      expandedRows: expandedMap,\n      collapsedRows: collapsedMap,\n      id: id,\n      index: index,\n      data: data,\n      rowExpanded: expanded\n    }) === false) {\n      return;\n    }\n  }\n  if (computedProps.initialProps.onExpandedRowsChange) {\n    computedProps.initialProps.onExpandedRowsChange({\n      expandedRows: expandedMap,\n      collapsedRows: collapsedMap,\n      rowExpanded: expanded,\n      data: data,\n      id: id,\n      index: index\n    });\n  }\n  if (!(0, _isControlledProperty.default)(computedProps.initialProps, 'expandedRows') && !(0, _isControlledProperty.default)(computedProps.initialProps, 'collapsedRows') || computedProps.initialProps.expandedRows === true && !(0, _isControlledProperty.default)(computedProps.initialProps, 'collapsedRows')) {\n    var queue = (0, _batchUpdate.default)();\n    queue(function () {\n      computedProps.setExpandedRows(expandedMap);\n      computedProps.setCollapsedRows(collapsedMap);\n    });\n    queue.commit();\n  }\n};\nvar isRowExpandableAt_FromProps = function isRowExpandableAt_FromProps(rowIndex, computedProps) {\n  var data = computedProps.getItemAt(rowIndex);\n  if (!data) {\n    return false;\n  }\n  if (data.__group) {\n    return false;\n  }\n  var id = computedProps.getItemId(data);\n  if (computedProps.unexpandableRows && computedProps.unexpandableRows[id]) {\n    return false;\n  }\n  if (!computedProps.isRowExpandable) {\n    return true;\n  }\n  EXPANDABLE_ROW_INFO.id = id;\n  EXPANDABLE_ROW_INFO.data = data;\n  EXPANDABLE_ROW_INFO.rowIndex = rowIndex;\n  return computedProps.isRowExpandable(EXPANDABLE_ROW_INFO);\n};\nvar getExpandedMap_FromProps = function getExpandedMap_FromProps(computedProps) {\n  if (!(0, _isRowExpandEnabled_FromProps.isRowExpandEnabled_FromProps)(computedProps)) {\n    return undefined;\n  }\n  var expandedRows = computedProps.computedExpandedRows;\n  if (expandedRows !== undefined && expandedRows !== true) {\n    expandedRows = _objectSpread({}, expandedRows);\n    Object.keys(getUnexpandableRowsMap_FromProps(computedProps)).forEach(function (k) {\n      delete expandedRows[k];\n    });\n  }\n  if (expandedRows === true) {\n    expandedRows = computedProps.data.reduce(function (acc, item, index) {\n      if (computedProps.isRowExpanded(index)) {\n        acc[computedProps.getItemId(item)] = true;\n      }\n      return acc;\n    }, {});\n  }\n  if ((0, _typeof2.default)(expandedRows) !== 'object' && expandedRows !== true) {\n    expandedRows = {};\n  }\n  return expandedRows;\n};\nvar getUnexpandableRows_FromProps = function getUnexpandableRows_FromProps(computedProps) {\n  var groupBy = computedProps.computedGroupBy;\n  var initialProps = computedProps.initialProps;\n  if (!groupBy && !initialProps.isRowExpandable) {\n    return [];\n  }\n  if (groupBy && !initialProps.isRowExpandable) {\n    return computedProps.computedGroupArray || [];\n  }\n  return computedProps.data.filter(function (_, index) {\n    return !isRowExpandableAt_FromProps(index, computedProps);\n  });\n};\nvar getUnexpandableRowsMap_FromProps = function getUnexpandableRowsMap_FromProps(computedProps) {\n  if (computedProps.unexpandableRows) {\n    return computedProps.unexpandableRows;\n  }\n  return getUnexpandableRows_FromProps(computedProps).reduce(function (acc, data) {\n    var id = computedProps.getItemId(data);\n    acc[id] = true;\n    return acc;\n  }, {});\n};\nvar getCollapsedMap_FromProps = function getCollapsedMap_FromProps(computedProps) {\n  if (!computedProps.computedRowExpandEnabled) {\n    return undefined;\n  }\n  if (!computedProps.multiRowExpand) {\n    return undefined;\n  }\n  var result = computedProps.computedCollapsedRows || {};\n  if (computedProps.computedGroupBy && computedProps.computedGroupKeys) {\n    result = _objectSpread(_objectSpread({}, result), computedProps.computedGroupKeys);\n  }\n  if (computedProps.unexpandableRows) {\n    result = _objectSpread(_objectSpread({}, result), computedProps.unexpandableRows);\n  }\n  if (computedProps.initialProps.isRowExpandable) {\n    result = _objectSpread({}, result);\n    computedProps.data.forEach(function (item, index) {\n      if (!computedProps.isRowExpandableAt(index)) {\n        result[computedProps.getItemId(item)] = true;\n      }\n    });\n  }\n  return result;\n};\nvar isRowExpandedById_FromProps = function isRowExpandedById_FromProps(id, computedProps) {\n  var expandedRows = computedProps.computedExpandedRows;\n  if (!expandedRows) {\n    return false;\n  }\n  var isExpanded;\n  if (expandedRows === true) {\n    var collapsedRows = getCollapsedMap_FromProps(computedProps) || {};\n    isExpanded = !collapsedRows[id];\n  } else {\n    isExpanded = !!expandedRows[id];\n  }\n  if (isExpanded) {\n    isExpanded = computedProps.isRowExpanded(computedProps.getRowIndexById(id));\n  }\n  return isExpanded;\n};\nvar isRowExpanded_FromProps = function isRowExpanded_FromProps(data, computedProps) {\n  if (data == null) {\n    return false;\n  }\n  var index = undefined;\n  if (typeof data == 'number') {\n    index = data;\n    data = computedProps.getItemAt(data);\n  }\n  var expandedRows = computedProps.computedExpandedRows;\n  var id = computedProps.getItemId(data);\n  if (!expandedRows) {\n    return false;\n  }\n  var isExpanded;\n  if (expandedRows === true) {\n    var collapsedMap = getCollapsedMap_FromProps(computedProps) || {};\n    isExpanded = !collapsedMap[id];\n  } else {\n    isExpanded = expandedRows ? !!expandedRows[id] : false;\n  }\n  if (isExpanded) {\n    if (index === undefined) {\n      index = computedProps.getRowIndexById(id);\n    }\n    isExpanded = computedProps.isRowExpandableAt(index);\n  }\n  return isExpanded;\n};\nvar setRowExpandedById_FromProps = function setRowExpandedById_FromProps(id, expanded, computedProps) {\n  var data = computedProps.dataMap[id];\n  if (!data) {\n    return;\n  }\n  var expandedRowsValue = computedProps.computedExpandedRows;\n  if (expandedRowsValue === true) {\n    var collapsedMap = _objectSpread({}, computedProps.getCollapsedMap() || {});\n    if (!expanded) {\n      collapsedMap[id] = true;\n    } else {\n      delete collapsedMap[id];\n    }\n    setExpandedMap_FromProps(true, collapsedMap, {\n      data: data,\n      expanded: expanded,\n      id: id\n    }, computedProps);\n    return;\n  }\n  var expandedMap = _objectSpread({}, computedProps.getExpandedMap());\n  if (!expanded) {\n    delete expandedMap[id];\n  } else {\n    expandedMap[id] = true;\n  }\n  setExpandedMap_FromProps(expandedMap, undefined, {\n    data: data,\n    expanded: expanded,\n    id: id\n  }, computedProps);\n};\nvar useRowDetails = function useRowDetails(props, computedProps, computedPropsRef) {\n  var _useProperty = (0, _useProperty7.default)(props, 'expandedRows'),\n    _useProperty2 = (0, _slicedToArray2.default)(_useProperty, 2),\n    expandedRows = _useProperty2[0],\n    setExpandedRows = _useProperty2[1];\n  var _useProperty3 = (0, _useProperty7.default)(props, 'collapsedRows'),\n    _useProperty4 = (0, _slicedToArray2.default)(_useProperty3, 2),\n    collapsedRows = _useProperty4[0],\n    setCollapsedRows = _useProperty4[1];\n  var _useProperty5 = (0, _useProperty7.default)(props, 'rowHeights'),\n    _useProperty6 = (0, _slicedToArray2.default)(_useProperty5, 2),\n    rowHeights = _useProperty6[0],\n    doSetRowHeights = _useProperty6[1];\n  var setRowHeights = (0, _react.useCallback)(function (rowHeights) {\n    var computedProps = computedPropsRef.current;\n    if (!computedProps) {\n      return;\n    }\n    doSetRowHeights(rowHeights);\n  }, []);\n  var isRowExpandEnabled = (0, _react.useCallback)(function () {\n    var computedProps = computedPropsRef.current;\n    if (!computedProps) {\n      return false;\n    }\n    return (0, _isRowExpandEnabled_FromProps.isRowExpandEnabled_FromProps)(computedProps);\n  }, []);\n  var isRowExpandableAt = (0, _react.useCallback)(function (rowIndex) {\n    var computedProps = computedPropsRef.current;\n    if (!computedProps) {\n      return false;\n    }\n    return isRowExpandableAt_FromProps(rowIndex, computedProps);\n  }, []);\n  var isRowExpandableById = (0, _react.useCallback)(function (rowId) {\n    var computedProps = computedPropsRef.current;\n    if (!computedProps) {\n      return false;\n    }\n    var index = computedProps.getRowIndexById(rowId);\n    return isRowExpandableAt(index);\n  }, []);\n  var isRowExpanded = (0, _react.useCallback)(function (data) {\n    var computedProps = computedPropsRef.current;\n    if (!computedProps) {\n      return false;\n    }\n    return isRowExpanded_FromProps(data, computedProps);\n  }, []);\n  var getCollapsedMap = (0, _react.useCallback)(function () {\n    var computedProps = computedPropsRef.current;\n    if (!computedProps) {\n      return undefined;\n    }\n    return getCollapsedMap_FromProps(computedProps);\n  }, []);\n  var getExpandedMap = (0, _react.useCallback)(function () {\n    var computedProps = computedPropsRef.current;\n    if (!computedProps) {\n      return undefined;\n    }\n    return getExpandedMap_FromProps(computedProps);\n  }, []);\n  var setRowExpandedById = (0, _react.useCallback)(function (id, expanded) {\n    var computedProps = computedPropsRef.current;\n    if (!computedProps) {\n      return;\n    }\n    setRowExpandedById_FromProps(id, expanded, computedProps);\n  }, []);\n  var toggleRowExpandById = (0, _react.useCallback)(function (id) {\n    var computedProps = computedPropsRef.current;\n    if (!computedProps) {\n      return;\n    }\n    setRowExpandedById_FromProps(id, !isRowExpandedById(id), computedProps);\n  }, []);\n  var setRowExpandedAt = (0, _react.useCallback)(function (index, expanded) {\n    var data = computedProps.getItemAt(index);\n    if (!data) {\n      return;\n    }\n    var id = computedProps.getItemId(data);\n    return setRowExpandedById(id, expanded);\n  }, []);\n  var setRowHeightById = (0, _react.useCallback)(function (rowHeight, id) {\n    var computedProps = computedPropsRef.current;\n    if (!computedProps) {\n      return;\n    }\n    setRowHeightById_FromProps(rowHeight, id, computedProps);\n  }, []);\n  var toggleRowExpand = (0, _react.useCallback)(function (dataOrIndex) {\n    var computedProps = computedPropsRef.current;\n    if (!computedProps) {\n      return;\n    }\n    var data = typeof dataOrIndex === 'number' ? computedProps.data[dataOrIndex] : dataOrIndex;\n    if (!data) {\n      return;\n    }\n    var id = computedProps.getItemId(data);\n    var expanded = isRowExpanded(data);\n    return setRowExpandedById(id, !expanded);\n  }, []);\n  var isRowExpandedById = (0, _react.useCallback)(function (id) {\n    var computedProps = computedPropsRef.current;\n    if (!computedProps) {\n      return false;\n    }\n    return isRowExpandedById_FromProps(id, computedProps);\n  }, []);\n  var computedCollapsedRows = collapsedRows;\n  var computedExpandedRows = expandedRows;\n  var computedRowExpandEnabled = (0, _isRowExpandEnabled_FromProps.isRowExpandEnabled_FromProps)(props);\n  (0, _react.useLayoutEffect)(function () {\n    var computedProps = computedPropsRef.current;\n    if (!computedProps) {\n      return;\n    }\n    if (computedProps.wasMountedRef.current === false) {\n      return;\n    }\n    updateExpandedHeights_FromProps(computedProps);\n  }, [props.rowHeight, props.rowExpandHeight, computedProps.dataIndexMap, rowHeights, computedExpandedRows, computedCollapsedRows, computedRowExpandEnabled]);\n  var detailsGridInfoRef = (0, _react.useRef)({});\n  var renderDetailsGrid = (0, _react.useCallback)(function (rowDetailsInfo) {\n    var computedProps = computedPropsRef.current;\n    if (!computedProps) {\n      return;\n    }\n    return (0, _renderDetailsGrid.default)(rowDetailsInfo, computedProps);\n  }, []);\n  var onDetailsDidMount = (0, _react.useCallback)(function (childGridComputedPropsRef) {\n    var childGridComputedProps = childGridComputedPropsRef.current;\n    if (!childGridComputedProps) {\n      return;\n    }\n    childGridComputedProps.detailsGridInfoRef.current.__detailsPersisted = false;\n    var rowDetailsInfo = childGridComputedProps.initialProps.__parentRowInfo;\n    var info = detailsGridInfoRef.current;\n    if (info.masterDetailsKeys && info.unmountedDetails && info.masterDetailsInstances) {\n      var cacheKey = info.masterDetailsKeys[rowDetailsInfo.id];\n      info.masterDetailsInstances[cacheKey] = childGridComputedProps;\n      delete info.unmountedDetails[cacheKey];\n    }\n  }, []);\n  var getSelfRestoreProperties = (0, _react.useCallback)(function () {\n    var computedProps = computedPropsRef.current;\n    if (!computedProps) {\n      return null;\n    }\n    var info = computedProps.detailsGridInfoRef.current;\n    return {\n      rowHeightManager: computedProps.rowHeightManager,\n      masterDetailsCache: info.masterDetailsCache,\n      masterDetailsKeys: info.masterDetailsKeys,\n      originalDetailsGrids: info.originalDetailsGrids,\n      unmountedDetails: info.unmountedDetails\n    };\n  }, []);\n  var persistUnmountedDetails = function persistUnmountedDetails() {\n    var info = detailsGridInfoRef.current;\n    if (info.masterDetailsInstances) {\n      Object.keys(info.masterDetailsInstances).forEach(function (cacheKey) {\n        var childGridComputedProps = info.masterDetailsInstances[cacheKey];\n        if (childGridComputedProps) {\n          onDetailsWillUnmount({\n            current: childGridComputedProps\n          });\n        }\n      });\n    }\n  };\n  var onDetailsWillUnmount = (0, _react.useCallback)(function (childGridComputedPropsRef) {\n    var childGridComputedProps = childGridComputedPropsRef.current;\n    if (childGridComputedProps.detailsGridInfoRef.current.__detailsPersisted) {\n      return;\n    }\n    var rowDetailsInfo = childGridComputedProps.initialProps.__parentRowInfo;\n    childGridComputedProps.persistUnmountedDetails();\n    var info = detailsGridInfoRef.current;\n    if (info.masterDetailsKeys && info.unmountedDetails) {\n      var cacheKey = info.masterDetailsKeys[rowDetailsInfo.id];\n      info.unmountedDetails[cacheKey] = {\n        state: childGridComputedProps.getState(),\n        scrollTop: childGridComputedProps.getScrollTop(),\n        scrollLeft: childGridComputedProps.getScrollLeft(),\n        self: childGridComputedProps.getSelfRestoreProperties()\n      };\n    }\n    childGridComputedProps.detailsGridInfoRef.current.__detailsPersisted = true;\n  }, []);\n  var onDetailsUpdateRowHeights = (0, _react.useCallback)(function (rowHeights, childComputedProps) {\n    var computedProps = computedPropsRef.current;\n    if (!computedProps) {\n      return;\n    }\n    var getExtraRowHeights = function getExtraRowHeights(childComputedProps) {\n      var rowHeight = childComputedProps.initialProps.rowHeight;\n      var substractRowHeight = rowHeight;\n      var result = Object.keys(rowHeights || {}).reduce(function (acc, rowId) {\n        return acc + rowHeights[rowId] - substractRowHeight;\n      }, 0);\n      return result;\n    };\n    var parentRowInfo = childComputedProps.initialProps.__parentRowInfo;\n    var extraHeight = getExtraRowHeights(childComputedProps);\n    if (extraHeight) {\n      setRowHeightById(computedProps.initialProps.rowExpandHeight + extraHeight, parentRowInfo.id);\n    } else {\n      setRowHeightById(null, parentRowInfo.id);\n    }\n  }, []);\n  var getRowHeightById = (0, _react.useCallback)(function (id) {\n    var computedProps = computedPropsRef.current;\n    if (!computedProps) {\n      return 0;\n    }\n    var rowHeights = getRowHeights_FromProps(computedProps);\n    return rowHeights[id] || computedProps.rowHeight;\n  }, []);\n  var collapseAllRows = (0, _react.useCallback)(function () {\n    var computedProps = computedPropsRef.current;\n    if (!computedProps) {\n      return;\n    }\n    setExpandedMap_FromProps({}, undefined, undefined, computedProps);\n  }, []);\n  var expandAllRows = (0, _react.useCallback)(function () {\n    var computedProps = computedPropsRef.current;\n    if (!computedProps) {\n      return;\n    }\n    setExpandedMap_FromProps(true, getUnexpandableRowsMap_FromProps(computedProps), undefined, computedProps);\n  }, []);\n  var computedRenderRowDetails = props.renderRowDetails || (props.renderDetailsGrid ? renderDetailsGrid : null);\n  return {\n    detailsGridInfoRef: detailsGridInfoRef,\n    setExpandedRows: setExpandedRows,\n    setCollapsedRows: setCollapsedRows,\n    getCollapsedMap: getCollapsedMap,\n    getExpandedMap: getExpandedMap,\n    setRowHeights: setRowHeights,\n    isRowExpanded: isRowExpanded,\n    isRowExpandableById: isRowExpandableById,\n    setRowExpandedById: setRowExpandedById,\n    setRowHeightById: setRowHeightById,\n    setRowExpandedAt: setRowExpandedAt,\n    getRowHeightById: getRowHeightById,\n    collapseAllRows: collapseAllRows,\n    expandAllRows: expandAllRows,\n    isRowExpandedById: isRowExpandedById,\n    isRowExpandEnabled: isRowExpandEnabled,\n    isRowExpandableAt: isRowExpandableAt,\n    toggleRowExpand: toggleRowExpand,\n    toggleRowExpandById: toggleRowExpandById,\n    computedRowHeights: rowHeights,\n    computedExpandedRows: computedExpandedRows,\n    computedCollapsedRows: computedCollapsedRows,\n    computedRowExpandEnabled: computedRowExpandEnabled,\n    computedRenderRowDetails: computedRenderRowDetails,\n    onDetailsUpdateRowHeights: onDetailsUpdateRowHeights,\n    onDetailsDidMount: onDetailsDidMount,\n    onDetailsWillUnmount: onDetailsWillUnmount,\n    getSelfRestoreProperties: getSelfRestoreProperties,\n    persistUnmountedDetails: persistUnmountedDetails\n  };\n};\nvar _default = useRowDetails;\nexports.default = _default;","map":{"version":3,"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","default","_slicedToArray2","_typeof2","_defineProperty2","_react","_useProperty7","_sealedObjectFactory","_batchUpdate","_isControlledProperty","_renderDetailsGrid","_isRowExpandEnabled_FromProps","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","getOwnPropertyDescriptors","defineProperties","EXPANDABLE_ROW_INFO","rowIndex","undefined","data","id","getRowHeights_FromProps","computedProps","computedRowHeights","setRowHeightById_FromProps","rowHeight","rowHeights","changed","setRowHeights","updateExpandedHeights_FromProps","rowExpandHeight","dataMap","expandedRows","getExpandedMap_FromProps","defaultRowHeight","heights","dataIndexMap","itemId","index","currentRowHeight","_itemId","_index","initialProps","onUpdateRowHeights","rowHeightManager","setValues","map","setExpandedMap_FromProps","expandedMap","collapsedMap","_ref","expanded","multiRowExpand","Error","onRowCollapse","isRowExpandableAt","onRowExpand","onRowExpandChange","collapsedRows","rowExpanded","onExpandedRowsChange","queue","setExpandedRows","setCollapsedRows","commit","isRowExpandableAt_FromProps","getItemAt","__group","getItemId","unexpandableRows","isRowExpandable","isRowExpandEnabled_FromProps","computedExpandedRows","getUnexpandableRowsMap_FromProps","k","reduce","acc","item","isRowExpanded","getUnexpandableRows_FromProps","groupBy","computedGroupBy","computedGroupArray","_","getCollapsedMap_FromProps","computedRowExpandEnabled","result","computedCollapsedRows","computedGroupKeys","isRowExpandedById_FromProps","isExpanded","getRowIndexById","isRowExpanded_FromProps","setRowExpandedById_FromProps","expandedRowsValue","getCollapsedMap","getExpandedMap","useRowDetails","props","computedPropsRef","_useProperty","_useProperty2","_useProperty3","_useProperty4","_useProperty5","_useProperty6","doSetRowHeights","useCallback","current","isRowExpandEnabled","isRowExpandableById","rowId","setRowExpandedById","toggleRowExpandById","isRowExpandedById","setRowExpandedAt","setRowHeightById","toggleRowExpand","dataOrIndex","useLayoutEffect","wasMountedRef","detailsGridInfoRef","useRef","renderDetailsGrid","rowDetailsInfo","onDetailsDidMount","childGridComputedPropsRef","childGridComputedProps","__detailsPersisted","__parentRowInfo","info","masterDetailsKeys","unmountedDetails","masterDetailsInstances","cacheKey","getSelfRestoreProperties","masterDetailsCache","originalDetailsGrids","persistUnmountedDetails","onDetailsWillUnmount","state","getState","scrollTop","getScrollTop","scrollLeft","getScrollLeft","self","onDetailsUpdateRowHeights","childComputedProps","getExtraRowHeights","substractRowHeight","parentRowInfo","extraHeight","getRowHeightById","collapseAllRows","expandAllRows","computedRenderRowDetails","renderRowDetails","_default"],"sources":["/Users/alexandre.nepomuceno/Documents/agenda/node_modules/@inovua/reactdatagrid-enterprise/plugins/row-details/useRowDetails/index.js"],"sourcesContent":["/**\n * Copyright Â© INOVUA TRADING.\n *\n * This source code is licensed under the Commercial License found in the\n * LICENSE file in the root directory of this source tree.\n */\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\nvar _typeof2 = _interopRequireDefault(require(\"@babel/runtime/helpers/typeof\"));\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\nvar _react = require(\"react\");\nvar _useProperty7 = _interopRequireDefault(require(\"@inovua/reactdatagrid-community/hooks/useProperty\"));\nvar _sealedObjectFactory = _interopRequireDefault(require(\"@inovua/reactdatagrid-community/utils/sealedObjectFactory\"));\nvar _batchUpdate = _interopRequireDefault(require(\"@inovua/reactdatagrid-community/utils/batchUpdate\"));\nvar _isControlledProperty = _interopRequireDefault(require(\"@inovua/reactdatagrid-community/utils/isControlledProperty\"));\nvar _renderDetailsGrid = _interopRequireDefault(require(\"./renderDetailsGrid\"));\nvar _isRowExpandEnabled_FromProps = require(\"@inovua/reactdatagrid-community/utils/isRowExpandEnabled_FromProps\");\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nvar EXPANDABLE_ROW_INFO = (0, _sealedObjectFactory.default)({\n  rowIndex: undefined,\n  data: undefined,\n  id: undefined\n});\nvar getRowHeights_FromProps = function getRowHeights_FromProps(computedProps) {\n  return computedProps.computedRowHeights || {};\n};\nvar setRowHeightById_FromProps = function setRowHeightById_FromProps(rowHeight, id, computedProps) {\n  var rowHeights = _objectSpread({}, getRowHeights_FromProps(computedProps));\n  var changed = false;\n  if (rowHeight != null) {\n    if (rowHeights[id] !== rowHeight) {\n      rowHeights[id] = rowHeight;\n      changed = true;\n    }\n  } else {\n    if (rowHeights[id]) {\n      delete rowHeights[id];\n      changed = true;\n    }\n  }\n  if (changed) {\n    computedProps.setRowHeights(rowHeights);\n  }\n};\nvar updateExpandedHeights_FromProps = function updateExpandedHeights_FromProps(computedProps, rowHeights) {\n  var rowExpandHeight = computedProps.rowExpandHeight,\n    dataMap = computedProps.dataMap;\n  var expandedRows = getExpandedMap_FromProps(computedProps);\n  var defaultRowHeight = computedProps.rowHeight;\n  var heights = {};\n  var dataIndexMap = computedProps.dataIndexMap;\n  if (dataIndexMap) {\n    for (var itemId in expandedRows) {\n      var index = dataIndexMap[itemId];\n      if (index !== undefined) {\n        if (typeof rowExpandHeight === 'number') {\n          heights[index] = rowExpandHeight;\n        } else if (typeof rowExpandHeight === 'function') {\n          var currentRowHeight = rowExpandHeight({\n            data: dataMap && dataMap[itemId]\n          });\n          heights[index] = currentRowHeight;\n        }\n      }\n    }\n  }\n  rowHeights = rowHeights || getRowHeights_FromProps(computedProps);\n  if (rowHeights && dataIndexMap) {\n    for (var _itemId in rowHeights) {\n      var _index = dataIndexMap[_itemId];\n      if (_index !== undefined) {\n        heights[_index] = rowHeights[_itemId];\n      }\n    }\n  }\n  if (computedProps.initialProps.onUpdateRowHeights) {\n    computedProps.initialProps.onUpdateRowHeights(heights, computedProps);\n  }\n  computedProps.rowHeightManager.setValues({\n    defaultRowHeight: defaultRowHeight,\n    map: heights\n  });\n};\nvar setExpandedMap_FromProps = function setExpandedMap_FromProps(expandedMap, collapsedMap) {\n  var _ref = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {\n      id: null,\n      data: null,\n      expanded: false\n    },\n    id = _ref.id,\n    data = _ref.data,\n    expanded = _ref.expanded;\n  var computedProps = arguments.length > 3 ? arguments[3] : undefined;\n  var index;\n  if (expandedMap === true && !computedProps.multiRowExpand) {\n    throw new Error('cannot expand all when multiRowExpand is false');\n  }\n  if (data) {\n    index = computedProps.dataIndexMap[id];\n    if (!expanded) {\n      var rowHeights = computedProps.computedRowHeights;\n      if (rowHeights && rowHeights[id]) {\n        rowHeights = _objectSpread({}, rowHeights);\n        delete rowHeights[id];\n        computedProps.setRowHeights(rowHeights);\n      }\n      if (computedProps.initialProps.onRowCollapse && computedProps.initialProps.onRowCollapse({\n        data: data,\n        id: id,\n        index: index\n      }) === false) {\n        return;\n      }\n    } else {\n      if (!computedProps.isRowExpandableAt(index)) {\n        return;\n      }\n      if (computedProps.initialProps.onRowExpand && computedProps.initialProps.onRowExpand({\n        data: data,\n        id: id,\n        index: index\n      }) === false) {\n        return;\n      }\n      if (!computedProps.multiRowExpand) {\n        expandedMap = (0, _defineProperty2.default)({}, id, true);\n      }\n    }\n    if (computedProps.initialProps.onRowExpandChange && computedProps.initialProps.onRowExpandChange({\n      expandedRows: expandedMap,\n      collapsedRows: collapsedMap,\n      id: id,\n      index: index,\n      data: data,\n      rowExpanded: expanded\n    }) === false) {\n      return;\n    }\n  }\n  if (computedProps.initialProps.onExpandedRowsChange) {\n    computedProps.initialProps.onExpandedRowsChange({\n      expandedRows: expandedMap,\n      collapsedRows: collapsedMap,\n      rowExpanded: expanded,\n      data: data,\n      id: id,\n      index: index\n    });\n  }\n  if (!(0, _isControlledProperty.default)(computedProps.initialProps, 'expandedRows') && !(0, _isControlledProperty.default)(computedProps.initialProps, 'collapsedRows') || computedProps.initialProps.expandedRows === true && !(0, _isControlledProperty.default)(computedProps.initialProps, 'collapsedRows')) {\n    var queue = (0, _batchUpdate.default)();\n    queue(function () {\n      computedProps.setExpandedRows(expandedMap);\n      computedProps.setCollapsedRows(collapsedMap);\n    });\n    queue.commit();\n  }\n};\nvar isRowExpandableAt_FromProps = function isRowExpandableAt_FromProps(rowIndex, computedProps) {\n  var data = computedProps.getItemAt(rowIndex);\n  if (!data) {\n    return false;\n  }\n  if (data.__group) {\n    return false;\n  }\n  var id = computedProps.getItemId(data);\n  if (computedProps.unexpandableRows && computedProps.unexpandableRows[id]) {\n    return false;\n  }\n  if (!computedProps.isRowExpandable) {\n    return true;\n  }\n  EXPANDABLE_ROW_INFO.id = id;\n  EXPANDABLE_ROW_INFO.data = data;\n  EXPANDABLE_ROW_INFO.rowIndex = rowIndex;\n  return computedProps.isRowExpandable(EXPANDABLE_ROW_INFO);\n};\nvar getExpandedMap_FromProps = function getExpandedMap_FromProps(computedProps) {\n  if (!(0, _isRowExpandEnabled_FromProps.isRowExpandEnabled_FromProps)(computedProps)) {\n    return undefined;\n  }\n  var expandedRows = computedProps.computedExpandedRows;\n  if (expandedRows !== undefined && expandedRows !== true) {\n    expandedRows = _objectSpread({}, expandedRows);\n    Object.keys(getUnexpandableRowsMap_FromProps(computedProps)).forEach(function (k) {\n      delete expandedRows[k];\n    });\n  }\n  if (expandedRows === true) {\n    expandedRows = computedProps.data.reduce(function (acc, item, index) {\n      if (computedProps.isRowExpanded(index)) {\n        acc[computedProps.getItemId(item)] = true;\n      }\n      return acc;\n    }, {});\n  }\n  if ((0, _typeof2.default)(expandedRows) !== 'object' && expandedRows !== true) {\n    expandedRows = {};\n  }\n  return expandedRows;\n};\nvar getUnexpandableRows_FromProps = function getUnexpandableRows_FromProps(computedProps) {\n  var groupBy = computedProps.computedGroupBy;\n  var initialProps = computedProps.initialProps;\n  if (!groupBy && !initialProps.isRowExpandable) {\n    return [];\n  }\n  if (groupBy && !initialProps.isRowExpandable) {\n    return computedProps.computedGroupArray || [];\n  }\n  return computedProps.data.filter(function (_, index) {\n    return !isRowExpandableAt_FromProps(index, computedProps);\n  });\n};\nvar getUnexpandableRowsMap_FromProps = function getUnexpandableRowsMap_FromProps(computedProps) {\n  if (computedProps.unexpandableRows) {\n    return computedProps.unexpandableRows;\n  }\n  return getUnexpandableRows_FromProps(computedProps).reduce(function (acc, data) {\n    var id = computedProps.getItemId(data);\n    acc[id] = true;\n    return acc;\n  }, {});\n};\nvar getCollapsedMap_FromProps = function getCollapsedMap_FromProps(computedProps) {\n  if (!computedProps.computedRowExpandEnabled) {\n    return undefined;\n  }\n  if (!computedProps.multiRowExpand) {\n    return undefined;\n  }\n  var result = computedProps.computedCollapsedRows || {};\n  if (computedProps.computedGroupBy && computedProps.computedGroupKeys) {\n    result = _objectSpread(_objectSpread({}, result), computedProps.computedGroupKeys);\n  }\n  if (computedProps.unexpandableRows) {\n    result = _objectSpread(_objectSpread({}, result), computedProps.unexpandableRows);\n  }\n  if (computedProps.initialProps.isRowExpandable) {\n    result = _objectSpread({}, result);\n    computedProps.data.forEach(function (item, index) {\n      if (!computedProps.isRowExpandableAt(index)) {\n        result[computedProps.getItemId(item)] = true;\n      }\n    });\n  }\n  return result;\n};\nvar isRowExpandedById_FromProps = function isRowExpandedById_FromProps(id, computedProps) {\n  var expandedRows = computedProps.computedExpandedRows;\n  if (!expandedRows) {\n    return false;\n  }\n  var isExpanded;\n  if (expandedRows === true) {\n    var collapsedRows = getCollapsedMap_FromProps(computedProps) || {};\n    isExpanded = !collapsedRows[id];\n  } else {\n    isExpanded = !!expandedRows[id];\n  }\n  if (isExpanded) {\n    isExpanded = computedProps.isRowExpanded(computedProps.getRowIndexById(id));\n  }\n  return isExpanded;\n};\nvar isRowExpanded_FromProps = function isRowExpanded_FromProps(data, computedProps) {\n  if (data == null) {\n    return false;\n  }\n  var index = undefined;\n  if (typeof data == 'number') {\n    index = data;\n    data = computedProps.getItemAt(data);\n  }\n  var expandedRows = computedProps.computedExpandedRows;\n  var id = computedProps.getItemId(data);\n  if (!expandedRows) {\n    return false;\n  }\n  var isExpanded;\n  if (expandedRows === true) {\n    var collapsedMap = getCollapsedMap_FromProps(computedProps) || {};\n    isExpanded = !collapsedMap[id];\n  } else {\n    isExpanded = expandedRows ? !!expandedRows[id] : false;\n  }\n  if (isExpanded) {\n    if (index === undefined) {\n      index = computedProps.getRowIndexById(id);\n    }\n    isExpanded = computedProps.isRowExpandableAt(index);\n  }\n  return isExpanded;\n};\nvar setRowExpandedById_FromProps = function setRowExpandedById_FromProps(id, expanded, computedProps) {\n  var data = computedProps.dataMap[id];\n  if (!data) {\n    return;\n  }\n  var expandedRowsValue = computedProps.computedExpandedRows;\n  if (expandedRowsValue === true) {\n    var collapsedMap = _objectSpread({}, computedProps.getCollapsedMap() || {});\n    if (!expanded) {\n      collapsedMap[id] = true;\n    } else {\n      delete collapsedMap[id];\n    }\n    setExpandedMap_FromProps(true, collapsedMap, {\n      data: data,\n      expanded: expanded,\n      id: id\n    }, computedProps);\n    return;\n  }\n  var expandedMap = _objectSpread({}, computedProps.getExpandedMap());\n  if (!expanded) {\n    delete expandedMap[id];\n  } else {\n    expandedMap[id] = true;\n  }\n  setExpandedMap_FromProps(expandedMap, undefined, {\n    data: data,\n    expanded: expanded,\n    id: id\n  }, computedProps);\n};\nvar useRowDetails = function useRowDetails(props, computedProps, computedPropsRef) {\n  var _useProperty = (0, _useProperty7.default)(props, 'expandedRows'),\n    _useProperty2 = (0, _slicedToArray2.default)(_useProperty, 2),\n    expandedRows = _useProperty2[0],\n    setExpandedRows = _useProperty2[1];\n  var _useProperty3 = (0, _useProperty7.default)(props, 'collapsedRows'),\n    _useProperty4 = (0, _slicedToArray2.default)(_useProperty3, 2),\n    collapsedRows = _useProperty4[0],\n    setCollapsedRows = _useProperty4[1];\n  var _useProperty5 = (0, _useProperty7.default)(props, 'rowHeights'),\n    _useProperty6 = (0, _slicedToArray2.default)(_useProperty5, 2),\n    rowHeights = _useProperty6[0],\n    doSetRowHeights = _useProperty6[1];\n  var setRowHeights = (0, _react.useCallback)(function (rowHeights) {\n    var computedProps = computedPropsRef.current;\n    if (!computedProps) {\n      return;\n    }\n    doSetRowHeights(rowHeights);\n  }, []);\n  var isRowExpandEnabled = (0, _react.useCallback)(function () {\n    var computedProps = computedPropsRef.current;\n    if (!computedProps) {\n      return false;\n    }\n    return (0, _isRowExpandEnabled_FromProps.isRowExpandEnabled_FromProps)(computedProps);\n  }, []);\n  var isRowExpandableAt = (0, _react.useCallback)(function (rowIndex) {\n    var computedProps = computedPropsRef.current;\n    if (!computedProps) {\n      return false;\n    }\n    return isRowExpandableAt_FromProps(rowIndex, computedProps);\n  }, []);\n  var isRowExpandableById = (0, _react.useCallback)(function (rowId) {\n    var computedProps = computedPropsRef.current;\n    if (!computedProps) {\n      return false;\n    }\n    var index = computedProps.getRowIndexById(rowId);\n    return isRowExpandableAt(index);\n  }, []);\n  var isRowExpanded = (0, _react.useCallback)(function (data) {\n    var computedProps = computedPropsRef.current;\n    if (!computedProps) {\n      return false;\n    }\n    return isRowExpanded_FromProps(data, computedProps);\n  }, []);\n  var getCollapsedMap = (0, _react.useCallback)(function () {\n    var computedProps = computedPropsRef.current;\n    if (!computedProps) {\n      return undefined;\n    }\n    return getCollapsedMap_FromProps(computedProps);\n  }, []);\n  var getExpandedMap = (0, _react.useCallback)(function () {\n    var computedProps = computedPropsRef.current;\n    if (!computedProps) {\n      return undefined;\n    }\n    return getExpandedMap_FromProps(computedProps);\n  }, []);\n  var setRowExpandedById = (0, _react.useCallback)(function (id, expanded) {\n    var computedProps = computedPropsRef.current;\n    if (!computedProps) {\n      return;\n    }\n    setRowExpandedById_FromProps(id, expanded, computedProps);\n  }, []);\n  var toggleRowExpandById = (0, _react.useCallback)(function (id) {\n    var computedProps = computedPropsRef.current;\n    if (!computedProps) {\n      return;\n    }\n    setRowExpandedById_FromProps(id, !isRowExpandedById(id), computedProps);\n  }, []);\n  var setRowExpandedAt = (0, _react.useCallback)(function (index, expanded) {\n    var data = computedProps.getItemAt(index);\n    if (!data) {\n      return;\n    }\n    var id = computedProps.getItemId(data);\n    return setRowExpandedById(id, expanded);\n  }, []);\n  var setRowHeightById = (0, _react.useCallback)(function (rowHeight, id) {\n    var computedProps = computedPropsRef.current;\n    if (!computedProps) {\n      return;\n    }\n    setRowHeightById_FromProps(rowHeight, id, computedProps);\n  }, []);\n  var toggleRowExpand = (0, _react.useCallback)(function (dataOrIndex) {\n    var computedProps = computedPropsRef.current;\n    if (!computedProps) {\n      return;\n    }\n    var data = typeof dataOrIndex === 'number' ? computedProps.data[dataOrIndex] : dataOrIndex;\n    if (!data) {\n      return;\n    }\n    var id = computedProps.getItemId(data);\n    var expanded = isRowExpanded(data);\n    return setRowExpandedById(id, !expanded);\n  }, []);\n  var isRowExpandedById = (0, _react.useCallback)(function (id) {\n    var computedProps = computedPropsRef.current;\n    if (!computedProps) {\n      return false;\n    }\n    return isRowExpandedById_FromProps(id, computedProps);\n  }, []);\n  var computedCollapsedRows = collapsedRows;\n  var computedExpandedRows = expandedRows;\n  var computedRowExpandEnabled = (0, _isRowExpandEnabled_FromProps.isRowExpandEnabled_FromProps)(props);\n  (0, _react.useLayoutEffect)(function () {\n    var computedProps = computedPropsRef.current;\n    if (!computedProps) {\n      return;\n    }\n    if (computedProps.wasMountedRef.current === false) {\n      return;\n    }\n    updateExpandedHeights_FromProps(computedProps);\n  }, [props.rowHeight, props.rowExpandHeight, computedProps.dataIndexMap, rowHeights, computedExpandedRows, computedCollapsedRows, computedRowExpandEnabled]);\n  var detailsGridInfoRef = (0, _react.useRef)({});\n  var renderDetailsGrid = (0, _react.useCallback)(function (rowDetailsInfo) {\n    var computedProps = computedPropsRef.current;\n    if (!computedProps) {\n      return;\n    }\n    return (0, _renderDetailsGrid.default)(rowDetailsInfo, computedProps);\n  }, []);\n  var onDetailsDidMount = (0, _react.useCallback)(function (childGridComputedPropsRef) {\n    var childGridComputedProps = childGridComputedPropsRef.current;\n    if (!childGridComputedProps) {\n      return;\n    }\n    childGridComputedProps.detailsGridInfoRef.current.__detailsPersisted = false;\n    var rowDetailsInfo = childGridComputedProps.initialProps.__parentRowInfo;\n    var info = detailsGridInfoRef.current;\n    if (info.masterDetailsKeys && info.unmountedDetails && info.masterDetailsInstances) {\n      var cacheKey = info.masterDetailsKeys[rowDetailsInfo.id];\n      info.masterDetailsInstances[cacheKey] = childGridComputedProps;\n      delete info.unmountedDetails[cacheKey];\n    }\n  }, []);\n  var getSelfRestoreProperties = (0, _react.useCallback)(function () {\n    var computedProps = computedPropsRef.current;\n    if (!computedProps) {\n      return null;\n    }\n    var info = computedProps.detailsGridInfoRef.current;\n    return {\n      rowHeightManager: computedProps.rowHeightManager,\n      masterDetailsCache: info.masterDetailsCache,\n      masterDetailsKeys: info.masterDetailsKeys,\n      originalDetailsGrids: info.originalDetailsGrids,\n      unmountedDetails: info.unmountedDetails\n    };\n  }, []);\n  var persistUnmountedDetails = function persistUnmountedDetails() {\n    var info = detailsGridInfoRef.current;\n    if (info.masterDetailsInstances) {\n      Object.keys(info.masterDetailsInstances).forEach(function (cacheKey) {\n        var childGridComputedProps = info.masterDetailsInstances[cacheKey];\n        if (childGridComputedProps) {\n          onDetailsWillUnmount({\n            current: childGridComputedProps\n          });\n        }\n      });\n    }\n  };\n  var onDetailsWillUnmount = (0, _react.useCallback)(function (childGridComputedPropsRef) {\n    var childGridComputedProps = childGridComputedPropsRef.current;\n    if (childGridComputedProps.detailsGridInfoRef.current.__detailsPersisted) {\n      return;\n    }\n    var rowDetailsInfo = childGridComputedProps.initialProps.__parentRowInfo;\n    childGridComputedProps.persistUnmountedDetails();\n    var info = detailsGridInfoRef.current;\n    if (info.masterDetailsKeys && info.unmountedDetails) {\n      var cacheKey = info.masterDetailsKeys[rowDetailsInfo.id];\n      info.unmountedDetails[cacheKey] = {\n        state: childGridComputedProps.getState(),\n        scrollTop: childGridComputedProps.getScrollTop(),\n        scrollLeft: childGridComputedProps.getScrollLeft(),\n        self: childGridComputedProps.getSelfRestoreProperties()\n      };\n    }\n    childGridComputedProps.detailsGridInfoRef.current.__detailsPersisted = true;\n  }, []);\n  var onDetailsUpdateRowHeights = (0, _react.useCallback)(function (rowHeights, childComputedProps) {\n    var computedProps = computedPropsRef.current;\n    if (!computedProps) {\n      return;\n    }\n    var getExtraRowHeights = function getExtraRowHeights(childComputedProps) {\n      var rowHeight = childComputedProps.initialProps.rowHeight;\n      var substractRowHeight = rowHeight;\n      var result = Object.keys(rowHeights || {}).reduce(function (acc, rowId) {\n        return acc + rowHeights[rowId] - substractRowHeight;\n      }, 0);\n      return result;\n    };\n    var parentRowInfo = childComputedProps.initialProps.__parentRowInfo;\n    var extraHeight = getExtraRowHeights(childComputedProps);\n    if (extraHeight) {\n      setRowHeightById(computedProps.initialProps.rowExpandHeight + extraHeight, parentRowInfo.id);\n    } else {\n      setRowHeightById(null, parentRowInfo.id);\n    }\n  }, []);\n  var getRowHeightById = (0, _react.useCallback)(function (id) {\n    var computedProps = computedPropsRef.current;\n    if (!computedProps) {\n      return 0;\n    }\n    var rowHeights = getRowHeights_FromProps(computedProps);\n    return rowHeights[id] || computedProps.rowHeight;\n  }, []);\n  var collapseAllRows = (0, _react.useCallback)(function () {\n    var computedProps = computedPropsRef.current;\n    if (!computedProps) {\n      return;\n    }\n    setExpandedMap_FromProps({}, undefined, undefined, computedProps);\n  }, []);\n  var expandAllRows = (0, _react.useCallback)(function () {\n    var computedProps = computedPropsRef.current;\n    if (!computedProps) {\n      return;\n    }\n    setExpandedMap_FromProps(true, getUnexpandableRowsMap_FromProps(computedProps), undefined, computedProps);\n  }, []);\n  var computedRenderRowDetails = props.renderRowDetails || (props.renderDetailsGrid ? renderDetailsGrid : null);\n  return {\n    detailsGridInfoRef: detailsGridInfoRef,\n    setExpandedRows: setExpandedRows,\n    setCollapsedRows: setCollapsedRows,\n    getCollapsedMap: getCollapsedMap,\n    getExpandedMap: getExpandedMap,\n    setRowHeights: setRowHeights,\n    isRowExpanded: isRowExpanded,\n    isRowExpandableById: isRowExpandableById,\n    setRowExpandedById: setRowExpandedById,\n    setRowHeightById: setRowHeightById,\n    setRowExpandedAt: setRowExpandedAt,\n    getRowHeightById: getRowHeightById,\n    collapseAllRows: collapseAllRows,\n    expandAllRows: expandAllRows,\n    isRowExpandedById: isRowExpandedById,\n    isRowExpandEnabled: isRowExpandEnabled,\n    isRowExpandableAt: isRowExpandableAt,\n    toggleRowExpand: toggleRowExpand,\n    toggleRowExpandById: toggleRowExpandById,\n    computedRowHeights: rowHeights,\n    computedExpandedRows: computedExpandedRows,\n    computedCollapsedRows: computedCollapsedRows,\n    computedRowExpandEnabled: computedRowExpandEnabled,\n    computedRenderRowDetails: computedRenderRowDetails,\n    onDetailsUpdateRowHeights: onDetailsUpdateRowHeights,\n    onDetailsDidMount: onDetailsDidMount,\n    onDetailsWillUnmount: onDetailsWillUnmount,\n    getSelfRestoreProperties: getSelfRestoreProperties,\n    persistUnmountedDetails: persistUnmountedDetails\n  };\n};\nvar _default = useRowDetails;\nexports.default = _default;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script"}