{"ast":null,"code":"/** \n * Copyright © INOVUA TRADING.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\nvar sum = function sum(a, b) {\n  return (a || 0) + (b || 0);\n};\nvar EMPTY_ARRAY = [];\nvar _default = function _default(_ref) {\n  var flexes = _ref.flexes,\n    availableSize = _ref.availableSize,\n    _ref$maxWidths = _ref.maxWidths,\n    maxWidths = _ref$maxWidths === void 0 ? EMPTY_ARRAY : _ref$maxWidths,\n    _ref$minWidths = _ref.minWidths,\n    minWidths = _ref$minWidths === void 0 ? EMPTY_ARRAY : _ref$minWidths;\n  flexes = (0, _toConsumableArray2.default)(flexes);\n  var sumOfAllFlexes = flexes.reduce(sum, 0);\n  if (minWidths.length && minWidths.length != flexes.length) {\n    throw 'minWidths.length needs to be === flexes.length';\n  }\n  if (maxWidths.length && maxWidths.length != flexes.length) {\n    throw 'maxWidths.length needs to be === flexes.length';\n  }\n  var oneFlex = sumOfAllFlexes ? availableSize / sumOfAllFlexes : 0;\n  var result = flexes.map(function (_) {\n    return null;\n  });\n  flexes.forEach(function (flex, index) {\n    var minWidth = minWidths[index];\n    flex = flex || 0;\n    if (flex === 0) {\n      return;\n    }\n    var size;\n    var flexSize = Math.round(flex * oneFlex);\n    var maxWidth = maxWidths[index];\n    if (minWidth != null && flexSize < minWidth) {\n      availableSize -= minWidth;\n      flexes[index] = 0;\n      size = minWidth;\n      sumOfAllFlexes -= flex;\n      oneFlex = sumOfAllFlexes ? availableSize / sumOfAllFlexes : 0;\n    } else if (maxWidth != null && flexSize > maxWidth) {\n      availableSize -= maxWidth;\n      flexes[index] = 0;\n      size = maxWidth;\n      sumOfAllFlexes -= flex;\n      oneFlex = sumOfAllFlexes ? availableSize / sumOfAllFlexes : 0;\n    }\n    if (size) {\n      result[index] = size;\n    }\n  });\n  var lastValidFlexIndex = flexes.reduce(function (acc, flex, index) {\n    return flex ? index : acc;\n  }, -1);\n  flexes.forEach(function (flex, index) {\n    if (!flex) {\n      return;\n    }\n    var flexSize = Math.round(flex * oneFlex);\n    if (index === lastValidFlexIndex) {\n      flexSize = availableSize;\n    }\n    if (minWidths[index] != null) {\n      flexSize = Math.max(flexSize, minWidths[index] || 0);\n    }\n    if (maxWidths[index] != null) {\n      flexSize = Math.min(flexSize, maxWidths[index] || Infinity);\n    }\n    availableSize -= Math.max(flexSize, 0);\n    result[index] = flexSize;\n  });\n  return result;\n};\nexports.default = _default;","map":{"version":3,"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","default","_toConsumableArray2","sum","a","b","EMPTY_ARRAY","_default","_ref","flexes","availableSize","_ref$maxWidths","maxWidths","_ref$minWidths","minWidths","sumOfAllFlexes","reduce","length","oneFlex","result","map","_","forEach","flex","index","minWidth","size","flexSize","Math","round","maxWidth","lastValidFlexIndex","acc","max","min","Infinity"],"sources":["/Users/alexandre.nepomuceno/Documents/agenda/node_modules/@inovua/reactdatagrid-community/utils/flex/computeFlexWidths.js"],"sourcesContent":["/** \n * Copyright © INOVUA TRADING.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\nvar sum = function sum(a, b) {\n  return (a || 0) + (b || 0);\n};\nvar EMPTY_ARRAY = [];\nvar _default = function _default(_ref) {\n  var flexes = _ref.flexes,\n    availableSize = _ref.availableSize,\n    _ref$maxWidths = _ref.maxWidths,\n    maxWidths = _ref$maxWidths === void 0 ? EMPTY_ARRAY : _ref$maxWidths,\n    _ref$minWidths = _ref.minWidths,\n    minWidths = _ref$minWidths === void 0 ? EMPTY_ARRAY : _ref$minWidths;\n  flexes = (0, _toConsumableArray2.default)(flexes);\n  var sumOfAllFlexes = flexes.reduce(sum, 0);\n  if (minWidths.length && minWidths.length != flexes.length) {\n    throw 'minWidths.length needs to be === flexes.length';\n  }\n  if (maxWidths.length && maxWidths.length != flexes.length) {\n    throw 'maxWidths.length needs to be === flexes.length';\n  }\n  var oneFlex = sumOfAllFlexes ? availableSize / sumOfAllFlexes : 0;\n  var result = flexes.map(function (_) {\n    return null;\n  });\n  flexes.forEach(function (flex, index) {\n    var minWidth = minWidths[index];\n    flex = flex || 0;\n    if (flex === 0) {\n      return;\n    }\n    var size;\n    var flexSize = Math.round(flex * oneFlex);\n    var maxWidth = maxWidths[index];\n    if (minWidth != null && flexSize < minWidth) {\n      availableSize -= minWidth;\n      flexes[index] = 0;\n      size = minWidth;\n      sumOfAllFlexes -= flex;\n      oneFlex = sumOfAllFlexes ? availableSize / sumOfAllFlexes : 0;\n    } else if (maxWidth != null && flexSize > maxWidth) {\n      availableSize -= maxWidth;\n      flexes[index] = 0;\n      size = maxWidth;\n      sumOfAllFlexes -= flex;\n      oneFlex = sumOfAllFlexes ? availableSize / sumOfAllFlexes : 0;\n    }\n    if (size) {\n      result[index] = size;\n    }\n  });\n  var lastValidFlexIndex = flexes.reduce(function (acc, flex, index) {\n    return flex ? index : acc;\n  }, -1);\n  flexes.forEach(function (flex, index) {\n    if (!flex) {\n      return;\n    }\n    var flexSize = Math.round(flex * oneFlex);\n    if (index === lastValidFlexIndex) {\n      flexSize = availableSize;\n    }\n    if (minWidths[index] != null) {\n      flexSize = Math.max(flexSize, minWidths[index] || 0);\n    }\n    if (maxWidths[index] != null) {\n      flexSize = Math.min(flexSize, maxWidths[index] || Infinity);\n    }\n    availableSize -= Math.max(flexSize, 0);\n    result[index] = flexSize;\n  });\n  return result;\n};\nexports.default = _default;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script"}