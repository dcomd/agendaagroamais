{"ast":null,"code":"/** \n * Copyright Â© INOVUA TRADING.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.useCellSelection = void 0;\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\nvar _typeof2 = _interopRequireDefault(require(\"@babel/runtime/helpers/typeof\"));\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\nvar _react = require(\"react\");\nvar _useProperty3 = _interopRequireDefault(require(\"@inovua/reactdatagrid-community/hooks/useProperty\"));\nvar _batchUpdate = _interopRequireDefault(require(\"@inovua/reactdatagrid-community/utils/batchUpdate\"));\nvar _clamp = _interopRequireDefault(require(\"@inovua/reactdatagrid-community/utils/clamp\"));\nvar _useActiveCell2 = _interopRequireDefault(require(\"./useActiveCell\"));\nvar _usePrevious = _interopRequireDefault(require(\"@inovua/reactdatagrid-community/hooks/usePrevious\"));\nvar _useNamedState3 = _interopRequireDefault(require(\"@inovua/reactdatagrid-community/hooks/useNamedState\"));\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      (0, _defineProperty2.default)(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n  return target;\n}\nvar getFirstSelectedCell = function getFirstSelectedCell(cellSelection) {\n  return cellSelection.sort(function (cell1, cell2) {\n    if (cell1[0] < cell2[0]) {\n      return -1;\n    } else if (cell1[0] > cell2[0]) {\n      return 1;\n    }\n    return cell1[1] < cell2[1] ? -1 : 1;\n  })[0];\n};\nvar useCellSelection = function useCellSelection(props, _ref, computedPropsRef) {\n  var rowSelectionEnabled = _ref.rowSelectionEnabled,\n    hasRowNavigation = _ref.hasRowNavigation,\n    listenOnCellEnter = _ref.listenOnCellEnter;\n  var _useProperty = (0, _useProperty3.default)(props, 'cellSelection'),\n    _useProperty2 = (0, _slicedToArray2.default)(_useProperty, 2),\n    cellSelection = _useProperty2[0],\n    setCellSelection = _useProperty2[1];\n  var _useNamedState = (0, _useNamedState3.default)(false, props.context, 'bulkUpdateMouseDown'),\n    _useNamedState2 = (0, _slicedToArray2.default)(_useNamedState, 2),\n    bulkUpdateMouseDown = _useNamedState2[0],\n    setBulkUpdateMouseDown = _useNamedState2[1];\n  var _useActiveCell = (0, _useActiveCell2.default)(props, computedPropsRef),\n    computedActiveCell = _useActiveCell.computedActiveCell,\n    getCellSelectionIdKey = _useActiveCell.getCellSelectionIdKey,\n    getCellSelectionBetween = _useActiveCell.getCellSelectionBetween,\n    setActiveCell = _useActiveCell.setActiveCell,\n    getCellSelectionKey = _useActiveCell.getCellSelectionKey,\n    incrementActiveCell = _useActiveCell.incrementActiveCell;\n  var cellSelectionEnabled = !rowSelectionEnabled ? !!cellSelection : false;\n  if (rowSelectionEnabled || hasRowNavigation) {\n    computedActiveCell = undefined;\n  }\n  var cellNavigationEnabled = computedActiveCell !== undefined;\n  if (cellSelection) {\n    cellNavigationEnabled = props.enableKeyboardNavigation !== false && !hasRowNavigation ? true : computedActiveCell !== undefined || !!cellSelection;\n  }\n  if (props.enableKeyboardNavigation === false) {\n    cellNavigationEnabled = false;\n  }\n  var cellMultiSelectionEnabledRef = (0, _react.useRef)(false);\n  cellMultiSelectionEnabledRef.current = cellSelectionEnabled && props.multiSelect !== false;\n  var cellMultiSelectionEnabled = cellMultiSelectionEnabledRef.current;\n  var prevMultiSelectionEnabled = (0, _usePrevious.default)(cellMultiSelectionEnabled, cellMultiSelectionEnabled);\n  (0, _react.useEffect)(function () {\n    if (prevMultiSelectionEnabled && !cellMultiSelectionEnabled) {\n      setCellSelection({});\n    }\n  }, [cellMultiSelectionEnabled, prevMultiSelectionEnabled]);\n  var onCellEnter = (0, _react.useMemo)(function () {\n    return listenOnCellEnter ? function (event, _ref2) {\n      var columnIndex = _ref2.columnIndex,\n        rowIndex = _ref2.rowIndex;\n      var computedProps = computedPropsRef.current;\n      if (!computedProps) {\n        return;\n      }\n      var data = computedProps.getItemAt(rowIndex);\n      if (!data || data.__group) {\n        return;\n      }\n      var col = computedProps.getColumnBy(columnIndex);\n      if (col && col.cellSelectable === false) {\n        return;\n      }\n      var groupBy = computedProps.computedGroupBy;\n      var minCol = groupBy ? groupBy.length : 0;\n      if (columnIndex < minCol) {\n        return;\n      }\n      var range = computedProps.getCellSelectionBetween(computedProps.selectionFixedCell || computedProps.computedActiveCell || computedProps.lastSelectedCell, [rowIndex, columnIndex]);\n      var queue = (0, _batchUpdate.default)();\n      queue(function () {\n        computedProps.setCellSelection(range);\n        computedProps.setLastCellInRange(Object.keys(range).pop() || '');\n      });\n      var direction = computedProps.cellDragStartRowIndex != null ? rowIndex - computedProps.cellDragStartRowIndex : rowIndex;\n      var sign = direction < 0 ? -1 : direction > 0 ? 1 : 0;\n      var scrollToRowIndex = (0, _clamp.default)(rowIndex + sign, 0, computedProps.count - 1);\n      var visible = computedProps.isCellVisible({\n        columnIndex: columnIndex,\n        rowIndex: scrollToRowIndex\n      });\n      if (visible !== true) {\n        visible = visible;\n        var left = visible.leftDiff < 0;\n        var top = visible.topDiff < 0;\n        computedProps.scrollToCell({\n          columnIndex: columnIndex,\n          rowIndex: scrollToRowIndex\n        }, {\n          top: top,\n          left: left\n        });\n      }\n      queue.commit();\n    } : null;\n  }, [listenOnCellEnter]);\n  var getContinuousSelectedRangeFor = function getContinuousSelectedRangeFor(selectionMap, cell) {\n    if (!cell) {\n      return [];\n    }\n    selectionMap = selectionMap || {};\n    var _cell = (0, _slicedToArray2.default)(cell, 2),\n      row = _cell[0],\n      col = _cell[1];\n    var key = getCellSelectionKey(row, col);\n    var range = [];\n    while (selectionMap[key]) {\n      range.push([row, col]);\n      key = getCellSelectionKey(row - 1, col - 1);\n      if (selectionMap[key]) {\n        row -= 1;\n        col -= 1;\n        continue;\n      }\n      if (!selectionMap[key]) {\n        key = getCellSelectionKey(row - 1, col);\n      }\n      if (selectionMap[key]) {\n        row -= 1;\n        continue;\n      }\n      if (!selectionMap[key]) {\n        key = getCellSelectionKey(row, col - 1);\n        col -= 1;\n      }\n    }\n    return range;\n  };\n  var toggleActiveCellSelection = (0, _react.useCallback)(function (fakeEvent) {\n    var computedProps = computedPropsRef.current;\n    if (!computedProps) {\n      return;\n    }\n    var computedActiveCell = computedProps.computedActiveCell;\n    if (!computedActiveCell) {\n      return;\n    }\n    var _computedActiveCell = (0, _slicedToArray2.default)(computedActiveCell, 2),\n      rowIndex = _computedActiveCell[0],\n      columnIndex = _computedActiveCell[1];\n    var column = computedProps.getColumnBy(columnIndex);\n    if (column && column.cellSelectable === false) {\n      return;\n    }\n    var selected = isCellSelected(rowIndex, columnIndex);\n    var event = fakeEvent || {\n      ctrlKey: selected\n    };\n    computedProps.onCellClickAction(event, {\n      rowIndex: rowIndex,\n      columnIndex: columnIndex\n    });\n  }, []);\n  var isCellSelected = (0, _react.useCallback)(function (row, col) {\n    if (row && (0, _typeof2.default)(row) === 'object') {\n      col = row.columnIndex;\n      row = row.rowIndex;\n    }\n    var computedProps = computedPropsRef.current;\n    if (!computedProps) {\n      return;\n    }\n    if (computedProps.computedCellSelection) {\n      var key = computedProps.getCellSelectionKey(row, col);\n      return !!computedProps.computedCellSelection[key];\n    }\n    return false;\n  }, []);\n  var _useState = (0, _react.useState)(null),\n    _useState2 = (0, _slicedToArray2.default)(_useState, 2),\n    cellDragStartRowIndex = _useState2[0],\n    setCellDragStartRowIndex = _useState2[1];\n  var cellSelectionRef = (0, _react.useRef)(cellSelection);\n  cellSelectionRef.current = cellSelection;\n  var onCellSelectionDraggerMouseDown = (0, _react.useMemo)(function () {\n    if (cellMultiSelectionEnabled && cellSelectionRef.current) {\n      var _onCellSelectionDraggerMouseDown = function _onCellSelectionDraggerMouseDown(event, _ref3, selectionFixedCell) {\n        var columnIndex = _ref3.columnIndex,\n          rowIndex = _ref3.rowIndex;\n        var computedProps = computedPropsRef.current;\n        if (!computedProps) {\n          return;\n        }\n        var column = computedProps.getColumnBy(columnIndex);\n        if (column && column.cellSelectable === false) {\n          return;\n        }\n        if (!selectionFixedCell) {\n          var currentCell = [rowIndex, columnIndex];\n          var groupBy = computedProps.computedGroupBy;\n          var hasGroupBy = groupBy && groupBy.length;\n          var currentRange = !hasGroupBy ? getContinuousSelectedRangeFor(computedProps.computedCellSelection, currentCell) : [];\n          selectionFixedCell = !hasGroupBy ? getFirstSelectedCell(currentRange.length ? currentRange : [currentCell]) : computedProps.computedActiveCell || computedProps.lastSelectedCell;\n        }\n        var fn = function fn() {\n          computedProps.setListenOnCellEnter(false, fn);\n          setCellDragStartRowIndex(null);\n          computedProps.setSelectionFixedCell(null);\n        };\n        var queue = (0, _batchUpdate.default)();\n        queue(function () {\n          setCellDragStartRowIndex(rowIndex);\n          if (selectionFixedCell === undefined) {\n            selectionFixedCell = null;\n          }\n          computedProps.setSelectionFixedCell(selectionFixedCell);\n          computedProps.setListenOnCellEnter(true, fn);\n        });\n        queue.commit();\n      };\n      return _onCellSelectionDraggerMouseDown;\n    }\n    return null;\n  }, [cellMultiSelectionEnabled]);\n  var cellContentRef = (0, _react.useRef)(null);\n  var computedCellBulkUpdateMouseDown = (0, _react.useCallback)(function (_event, _cellProps) {\n    var computedProps = computedPropsRef.current;\n    if (!computedProps) {\n      return;\n    }\n    if (!computedProps.enableCellBulkUpdate) {\n      return;\n    }\n    var computedActiveCell = computedProps.computedActiveCell,\n      data = computedProps.data;\n    if (!computedActiveCell) {\n      return;\n    }\n    setBulkUpdateMouseDown(true);\n    var _computedActiveCell2 = (0, _slicedToArray2.default)(computedActiveCell, 2),\n      activeRow = _computedActiveCell2[0],\n      activeColumn = _computedActiveCell2[1];\n    var row = data[activeRow];\n    var column = computedProps.getColumnBy(activeColumn);\n    var columnName = column.name;\n    var cellContent = columnName ? row[columnName] : null;\n    cellContentRef.current = cellContent;\n  }, []);\n  var computedCellBulkUpdateMouseUp = (0, _react.useCallback)(function (_event) {\n    setBulkUpdateMouseDown(false);\n    var computedProps = computedPropsRef.current;\n    if (!computedProps) {\n      return;\n    }\n    var cellContent = cellContentRef.current;\n    if (!cellContent) {\n      return;\n    }\n    if (!computedProps.enableCellBulkUpdate) {\n      return;\n    }\n    var cellSelectionMap = computedProps.computedCellSelection;\n    if (!cellSelectionMap) {\n      return;\n    }\n    var dataMap = {};\n    Object.keys(cellSelectionMap).map(function (key) {\n      var _key$split = key.split(','),\n        _key$split2 = (0, _slicedToArray2.default)(_key$split, 2),\n        rowId = _key$split2[0],\n        columnName = _key$split2[1];\n      if (!dataMap[rowId]) {\n        dataMap[rowId] = (0, _defineProperty2.default)({}, columnName, cellContent);\n      }\n      {\n        dataMap[rowId] = _objectSpread(_objectSpread({}, dataMap[rowId]), {}, (0, _defineProperty2.default)({}, columnName, cellContent));\n      }\n    });\n    var dataArray = Object.keys(dataMap).map(function (key) {\n      var index = -1;\n      index = computedProps.getItemIndexById(key);\n      if (index === -1) {\n        index = computedProps.getItemIndexById(Number(key));\n      }\n      if (index > -1) {\n        var item = computedProps.getItemAt(index);\n        var itemId = computedProps.getItemId(item);\n        return _objectSpread({\n          id: itemId\n        }, dataMap[key]);\n      }\n    });\n    computedProps.setItemsAt(dataArray, {\n      replace: false\n    });\n    cellContentRef.current = null;\n  }, []);\n  return {\n    onCellEnter: onCellEnter,\n    toggleActiveCellSelection: toggleActiveCellSelection,\n    cellDragStartRowIndex: cellDragStartRowIndex,\n    setCellDragStartRowIndex: setCellDragStartRowIndex,\n    onCellSelectionDraggerMouseDown: onCellSelectionDraggerMouseDown,\n    computedCellBulkUpdateMouseDown: computedCellBulkUpdateMouseDown,\n    bulkUpdateMouseDown: bulkUpdateMouseDown,\n    computedCellBulkUpdateMouseUp: computedCellBulkUpdateMouseUp,\n    getCellSelectionBetween: getCellSelectionBetween,\n    computedActiveCell: computedActiveCell,\n    incrementActiveCell: incrementActiveCell,\n    getCellSelectionIdKey: getCellSelectionIdKey,\n    setActiveCell: setActiveCell,\n    getCellSelectionKey: getCellSelectionKey,\n    cellSelectionEnabled: cellSelectionEnabled,\n    cellNavigationEnabled: cellNavigationEnabled,\n    cellMultiSelectionEnabled: cellMultiSelectionEnabled,\n    computedCellSelection: cellSelection,\n    setCellSelection: setCellSelection\n  };\n};\nexports.useCellSelection = useCellSelection;","map":{"version":3,"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","useCellSelection","_defineProperty2","_typeof2","_slicedToArray2","_react","_useProperty3","_batchUpdate","_clamp","_useActiveCell2","_usePrevious","_useNamedState3","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","default","getOwnPropertyDescriptors","defineProperties","getFirstSelectedCell","cellSelection","sort","cell1","cell2","props","_ref","computedPropsRef","rowSelectionEnabled","hasRowNavigation","listenOnCellEnter","_useProperty","_useProperty2","setCellSelection","_useNamedState","context","_useNamedState2","bulkUpdateMouseDown","setBulkUpdateMouseDown","_useActiveCell","computedActiveCell","getCellSelectionIdKey","getCellSelectionBetween","setActiveCell","getCellSelectionKey","incrementActiveCell","cellSelectionEnabled","undefined","cellNavigationEnabled","enableKeyboardNavigation","cellMultiSelectionEnabledRef","useRef","current","multiSelect","cellMultiSelectionEnabled","prevMultiSelectionEnabled","useEffect","onCellEnter","useMemo","event","_ref2","columnIndex","rowIndex","computedProps","data","getItemAt","__group","col","getColumnBy","cellSelectable","groupBy","computedGroupBy","minCol","range","selectionFixedCell","lastSelectedCell","queue","setLastCellInRange","pop","direction","cellDragStartRowIndex","sign","scrollToRowIndex","count","visible","isCellVisible","left","leftDiff","top","topDiff","scrollToCell","commit","getContinuousSelectedRangeFor","selectionMap","cell","_cell","row","toggleActiveCellSelection","useCallback","fakeEvent","_computedActiveCell","column","selected","isCellSelected","ctrlKey","onCellClickAction","computedCellSelection","_useState","useState","_useState2","setCellDragStartRowIndex","cellSelectionRef","onCellSelectionDraggerMouseDown","_onCellSelectionDraggerMouseDown","_ref3","currentCell","hasGroupBy","currentRange","fn","setListenOnCellEnter","setSelectionFixedCell","cellContentRef","computedCellBulkUpdateMouseDown","_event","_cellProps","enableCellBulkUpdate","_computedActiveCell2","activeRow","activeColumn","columnName","name","cellContent","computedCellBulkUpdateMouseUp","cellSelectionMap","dataMap","map","_key$split","split","_key$split2","rowId","dataArray","index","getItemIndexById","Number","item","itemId","getItemId","id","setItemsAt","replace"],"sources":["/Users/alexandre.nepomuceno/Documents/agendaagroamais/node_modules/@inovua/reactdatagrid-community/plugins/cell-selection/useCellSelection.js"],"sourcesContent":["/** \n * Copyright Â© INOVUA TRADING.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.useCellSelection = void 0;\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\nvar _typeof2 = _interopRequireDefault(require(\"@babel/runtime/helpers/typeof\"));\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\nvar _react = require(\"react\");\nvar _useProperty3 = _interopRequireDefault(require(\"@inovua/reactdatagrid-community/hooks/useProperty\"));\nvar _batchUpdate = _interopRequireDefault(require(\"@inovua/reactdatagrid-community/utils/batchUpdate\"));\nvar _clamp = _interopRequireDefault(require(\"@inovua/reactdatagrid-community/utils/clamp\"));\nvar _useActiveCell2 = _interopRequireDefault(require(\"./useActiveCell\"));\nvar _usePrevious = _interopRequireDefault(require(\"@inovua/reactdatagrid-community/hooks/usePrevious\"));\nvar _useNamedState3 = _interopRequireDefault(require(\"@inovua/reactdatagrid-community/hooks/useNamedState\"));\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nvar getFirstSelectedCell = function getFirstSelectedCell(cellSelection) {\n  return cellSelection.sort(function (cell1, cell2) {\n    if (cell1[0] < cell2[0]) {\n      return -1;\n    } else if (cell1[0] > cell2[0]) {\n      return 1;\n    }\n    return cell1[1] < cell2[1] ? -1 : 1;\n  })[0];\n};\nvar useCellSelection = function useCellSelection(props, _ref, computedPropsRef) {\n  var rowSelectionEnabled = _ref.rowSelectionEnabled,\n    hasRowNavigation = _ref.hasRowNavigation,\n    listenOnCellEnter = _ref.listenOnCellEnter;\n  var _useProperty = (0, _useProperty3.default)(props, 'cellSelection'),\n    _useProperty2 = (0, _slicedToArray2.default)(_useProperty, 2),\n    cellSelection = _useProperty2[0],\n    setCellSelection = _useProperty2[1];\n  var _useNamedState = (0, _useNamedState3.default)(false, props.context, 'bulkUpdateMouseDown'),\n    _useNamedState2 = (0, _slicedToArray2.default)(_useNamedState, 2),\n    bulkUpdateMouseDown = _useNamedState2[0],\n    setBulkUpdateMouseDown = _useNamedState2[1];\n  var _useActiveCell = (0, _useActiveCell2.default)(props, computedPropsRef),\n    computedActiveCell = _useActiveCell.computedActiveCell,\n    getCellSelectionIdKey = _useActiveCell.getCellSelectionIdKey,\n    getCellSelectionBetween = _useActiveCell.getCellSelectionBetween,\n    setActiveCell = _useActiveCell.setActiveCell,\n    getCellSelectionKey = _useActiveCell.getCellSelectionKey,\n    incrementActiveCell = _useActiveCell.incrementActiveCell;\n  var cellSelectionEnabled = !rowSelectionEnabled ? !!cellSelection : false;\n  if (rowSelectionEnabled || hasRowNavigation) {\n    computedActiveCell = undefined;\n  }\n  var cellNavigationEnabled = computedActiveCell !== undefined;\n  if (cellSelection) {\n    cellNavigationEnabled = props.enableKeyboardNavigation !== false && !hasRowNavigation ? true : computedActiveCell !== undefined || !!cellSelection;\n  }\n  if (props.enableKeyboardNavigation === false) {\n    cellNavigationEnabled = false;\n  }\n  var cellMultiSelectionEnabledRef = (0, _react.useRef)(false);\n  cellMultiSelectionEnabledRef.current = cellSelectionEnabled && props.multiSelect !== false;\n  var cellMultiSelectionEnabled = cellMultiSelectionEnabledRef.current;\n  var prevMultiSelectionEnabled = (0, _usePrevious.default)(cellMultiSelectionEnabled, cellMultiSelectionEnabled);\n  (0, _react.useEffect)(function () {\n    if (prevMultiSelectionEnabled && !cellMultiSelectionEnabled) {\n      setCellSelection({});\n    }\n  }, [cellMultiSelectionEnabled, prevMultiSelectionEnabled]);\n  var onCellEnter = (0, _react.useMemo)(function () {\n    return listenOnCellEnter ? function (event, _ref2) {\n      var columnIndex = _ref2.columnIndex,\n        rowIndex = _ref2.rowIndex;\n      var computedProps = computedPropsRef.current;\n      if (!computedProps) {\n        return;\n      }\n      var data = computedProps.getItemAt(rowIndex);\n      if (!data || data.__group) {\n        return;\n      }\n      var col = computedProps.getColumnBy(columnIndex);\n      if (col && col.cellSelectable === false) {\n        return;\n      }\n      var groupBy = computedProps.computedGroupBy;\n      var minCol = groupBy ? groupBy.length : 0;\n      if (columnIndex < minCol) {\n        return;\n      }\n      var range = computedProps.getCellSelectionBetween(computedProps.selectionFixedCell || computedProps.computedActiveCell || computedProps.lastSelectedCell, [rowIndex, columnIndex]);\n      var queue = (0, _batchUpdate.default)();\n      queue(function () {\n        computedProps.setCellSelection(range);\n        computedProps.setLastCellInRange(Object.keys(range).pop() || '');\n      });\n      var direction = computedProps.cellDragStartRowIndex != null ? rowIndex - computedProps.cellDragStartRowIndex : rowIndex;\n      var sign = direction < 0 ? -1 : direction > 0 ? 1 : 0;\n      var scrollToRowIndex = (0, _clamp.default)(rowIndex + sign, 0, computedProps.count - 1);\n      var visible = computedProps.isCellVisible({\n        columnIndex: columnIndex,\n        rowIndex: scrollToRowIndex\n      });\n      if (visible !== true) {\n        visible = visible;\n        var left = visible.leftDiff < 0;\n        var top = visible.topDiff < 0;\n        computedProps.scrollToCell({\n          columnIndex: columnIndex,\n          rowIndex: scrollToRowIndex\n        }, {\n          top: top,\n          left: left\n        });\n      }\n      queue.commit();\n    } : null;\n  }, [listenOnCellEnter]);\n  var getContinuousSelectedRangeFor = function getContinuousSelectedRangeFor(selectionMap, cell) {\n    if (!cell) {\n      return [];\n    }\n    selectionMap = selectionMap || {};\n    var _cell = (0, _slicedToArray2.default)(cell, 2),\n      row = _cell[0],\n      col = _cell[1];\n    var key = getCellSelectionKey(row, col);\n    var range = [];\n    while (selectionMap[key]) {\n      range.push([row, col]);\n      key = getCellSelectionKey(row - 1, col - 1);\n      if (selectionMap[key]) {\n        row -= 1;\n        col -= 1;\n        continue;\n      }\n      if (!selectionMap[key]) {\n        key = getCellSelectionKey(row - 1, col);\n      }\n      if (selectionMap[key]) {\n        row -= 1;\n        continue;\n      }\n      if (!selectionMap[key]) {\n        key = getCellSelectionKey(row, col - 1);\n        col -= 1;\n      }\n    }\n    return range;\n  };\n  var toggleActiveCellSelection = (0, _react.useCallback)(function (fakeEvent) {\n    var computedProps = computedPropsRef.current;\n    if (!computedProps) {\n      return;\n    }\n    var computedActiveCell = computedProps.computedActiveCell;\n    if (!computedActiveCell) {\n      return;\n    }\n    var _computedActiveCell = (0, _slicedToArray2.default)(computedActiveCell, 2),\n      rowIndex = _computedActiveCell[0],\n      columnIndex = _computedActiveCell[1];\n    var column = computedProps.getColumnBy(columnIndex);\n    if (column && column.cellSelectable === false) {\n      return;\n    }\n    var selected = isCellSelected(rowIndex, columnIndex);\n    var event = fakeEvent || {\n      ctrlKey: selected\n    };\n    computedProps.onCellClickAction(event, {\n      rowIndex: rowIndex,\n      columnIndex: columnIndex\n    });\n  }, []);\n  var isCellSelected = (0, _react.useCallback)(function (row, col) {\n    if (row && (0, _typeof2.default)(row) === 'object') {\n      col = row.columnIndex;\n      row = row.rowIndex;\n    }\n    var computedProps = computedPropsRef.current;\n    if (!computedProps) {\n      return;\n    }\n    if (computedProps.computedCellSelection) {\n      var key = computedProps.getCellSelectionKey(row, col);\n      return !!computedProps.computedCellSelection[key];\n    }\n    return false;\n  }, []);\n  var _useState = (0, _react.useState)(null),\n    _useState2 = (0, _slicedToArray2.default)(_useState, 2),\n    cellDragStartRowIndex = _useState2[0],\n    setCellDragStartRowIndex = _useState2[1];\n  var cellSelectionRef = (0, _react.useRef)(cellSelection);\n  cellSelectionRef.current = cellSelection;\n  var onCellSelectionDraggerMouseDown = (0, _react.useMemo)(function () {\n    if (cellMultiSelectionEnabled && cellSelectionRef.current) {\n      var _onCellSelectionDraggerMouseDown = function _onCellSelectionDraggerMouseDown(event, _ref3, selectionFixedCell) {\n        var columnIndex = _ref3.columnIndex,\n          rowIndex = _ref3.rowIndex;\n        var computedProps = computedPropsRef.current;\n        if (!computedProps) {\n          return;\n        }\n        var column = computedProps.getColumnBy(columnIndex);\n        if (column && column.cellSelectable === false) {\n          return;\n        }\n        if (!selectionFixedCell) {\n          var currentCell = [rowIndex, columnIndex];\n          var groupBy = computedProps.computedGroupBy;\n          var hasGroupBy = groupBy && groupBy.length;\n          var currentRange = !hasGroupBy ? getContinuousSelectedRangeFor(computedProps.computedCellSelection, currentCell) : [];\n          selectionFixedCell = !hasGroupBy ? getFirstSelectedCell(currentRange.length ? currentRange : [currentCell]) : computedProps.computedActiveCell || computedProps.lastSelectedCell;\n        }\n        var fn = function fn() {\n          computedProps.setListenOnCellEnter(false, fn);\n          setCellDragStartRowIndex(null);\n          computedProps.setSelectionFixedCell(null);\n        };\n        var queue = (0, _batchUpdate.default)();\n        queue(function () {\n          setCellDragStartRowIndex(rowIndex);\n          if (selectionFixedCell === undefined) {\n            selectionFixedCell = null;\n          }\n          computedProps.setSelectionFixedCell(selectionFixedCell);\n          computedProps.setListenOnCellEnter(true, fn);\n        });\n        queue.commit();\n      };\n      return _onCellSelectionDraggerMouseDown;\n    }\n    return null;\n  }, [cellMultiSelectionEnabled]);\n  var cellContentRef = (0, _react.useRef)(null);\n  var computedCellBulkUpdateMouseDown = (0, _react.useCallback)(function (_event, _cellProps) {\n    var computedProps = computedPropsRef.current;\n    if (!computedProps) {\n      return;\n    }\n    if (!computedProps.enableCellBulkUpdate) {\n      return;\n    }\n    var computedActiveCell = computedProps.computedActiveCell,\n      data = computedProps.data;\n    if (!computedActiveCell) {\n      return;\n    }\n    setBulkUpdateMouseDown(true);\n    var _computedActiveCell2 = (0, _slicedToArray2.default)(computedActiveCell, 2),\n      activeRow = _computedActiveCell2[0],\n      activeColumn = _computedActiveCell2[1];\n    var row = data[activeRow];\n    var column = computedProps.getColumnBy(activeColumn);\n    var columnName = column.name;\n    var cellContent = columnName ? row[columnName] : null;\n    cellContentRef.current = cellContent;\n  }, []);\n  var computedCellBulkUpdateMouseUp = (0, _react.useCallback)(function (_event) {\n    setBulkUpdateMouseDown(false);\n    var computedProps = computedPropsRef.current;\n    if (!computedProps) {\n      return;\n    }\n    var cellContent = cellContentRef.current;\n    if (!cellContent) {\n      return;\n    }\n    if (!computedProps.enableCellBulkUpdate) {\n      return;\n    }\n    var cellSelectionMap = computedProps.computedCellSelection;\n    if (!cellSelectionMap) {\n      return;\n    }\n    var dataMap = {};\n    Object.keys(cellSelectionMap).map(function (key) {\n      var _key$split = key.split(','),\n        _key$split2 = (0, _slicedToArray2.default)(_key$split, 2),\n        rowId = _key$split2[0],\n        columnName = _key$split2[1];\n      if (!dataMap[rowId]) {\n        dataMap[rowId] = (0, _defineProperty2.default)({}, columnName, cellContent);\n      }\n      {\n        dataMap[rowId] = _objectSpread(_objectSpread({}, dataMap[rowId]), {}, (0, _defineProperty2.default)({}, columnName, cellContent));\n      }\n    });\n    var dataArray = Object.keys(dataMap).map(function (key) {\n      var index = -1;\n      index = computedProps.getItemIndexById(key);\n      if (index === -1) {\n        index = computedProps.getItemIndexById(Number(key));\n      }\n      if (index > -1) {\n        var item = computedProps.getItemAt(index);\n        var itemId = computedProps.getItemId(item);\n        return _objectSpread({\n          id: itemId\n        }, dataMap[key]);\n      }\n    });\n    computedProps.setItemsAt(dataArray, {\n      replace: false\n    });\n    cellContentRef.current = null;\n  }, []);\n  return {\n    onCellEnter: onCellEnter,\n    toggleActiveCellSelection: toggleActiveCellSelection,\n    cellDragStartRowIndex: cellDragStartRowIndex,\n    setCellDragStartRowIndex: setCellDragStartRowIndex,\n    onCellSelectionDraggerMouseDown: onCellSelectionDraggerMouseDown,\n    computedCellBulkUpdateMouseDown: computedCellBulkUpdateMouseDown,\n    bulkUpdateMouseDown: bulkUpdateMouseDown,\n    computedCellBulkUpdateMouseUp: computedCellBulkUpdateMouseUp,\n    getCellSelectionBetween: getCellSelectionBetween,\n    computedActiveCell: computedActiveCell,\n    incrementActiveCell: incrementActiveCell,\n    getCellSelectionIdKey: getCellSelectionIdKey,\n    setActiveCell: setActiveCell,\n    getCellSelectionKey: getCellSelectionKey,\n    cellSelectionEnabled: cellSelectionEnabled,\n    cellNavigationEnabled: cellNavigationEnabled,\n    cellMultiSelectionEnabled: cellMultiSelectionEnabled,\n    computedCellSelection: cellSelection,\n    setCellSelection: setCellSelection\n  };\n};\nexports.useCellSelection = useCellSelection;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script"}