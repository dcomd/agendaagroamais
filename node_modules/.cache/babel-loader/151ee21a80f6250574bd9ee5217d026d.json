{"ast":null,"code":"/** \n * Copyright Â© INOVUA TRADING.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\nvar _setColumnId = _interopRequireDefault(require(\"../setColumnId\"));\nvar _computeFlexWidths = _interopRequireDefault(require(\"../utils/flex/computeFlexWidths\"));\nvar _mapColumns = _interopRequireDefault(require(\"../mapColumns\"));\nvar _defaultCheckColumnId = require(\"./defaultCheckColumnId\");\nvar _defaultRowExpandColumnId = require(\"./defaultRowExpandColumnId\");\nvar _defaultRowIndexColumnId = require(\"./defaultRowIndexColumnId\");\nvar _defaultGroupColumnId = require(\"./defaultGroupColumnId\");\nvar _defaultRowReorderColumnId = require(\"./defaultRowReorderColumnId\");\nvar _setComputedColumnWidths = _interopRequireDefault(require(\"./setComputedColumnWidths\"));\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      (0, _defineProperty2.default)(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n  return target;\n}\nvar DEFAULT_COLUMN_PROPS = {\n  isColumn: true,\n  keepFlex: true\n};\nvar defaultPivotGrandSummaryColumn = {\n  sortable: false,\n  draggable: false,\n  filterable: false\n};\nvar defaultPivotSummaryColumn = defaultPivotGrandSummaryColumn;\nvar emptyArray = [];\nvar emptyObject = Object.freeze ? Object.freeze({}) : {};\nvar _default = function _default(_ref) {\n  var _ref$generatedColumns = _ref.generatedColumnsLength,\n    generatedColumnsLength = _ref$generatedColumns === void 0 ? 0 : _ref$generatedColumns,\n    columns = _ref.columns,\n    columnMinWidth = _ref.columnMinWidth,\n    columnMaxWidth = _ref.columnMaxWidth,\n    columnDefaultWidth = _ref.columnDefaultWidth,\n    columnWidth = _ref.columnWidth,\n    _ref$columnSizes = _ref.columnSizes,\n    columnSizes = _ref$columnSizes === void 0 ? emptyObject : _ref$columnSizes,\n    _ref$columnVisibility = _ref.columnVisibilityMap,\n    columnVisibilityMap = _ref$columnVisibility === void 0 ? emptyObject : _ref$columnVisibility,\n    _ref$columnFlexes = _ref.columnFlexes,\n    columnFlexes = _ref$columnFlexes === void 0 ? emptyObject : _ref$columnFlexes,\n    _ref$lockedColumnsSta = _ref.lockedColumnsState,\n    lockedColumnsState = _ref$lockedColumnsSta === void 0 ? emptyObject : _ref$lockedColumnsSta,\n    columnOrder = _ref.columnOrder,\n    computedPivotUniqueValuesPerColumn = _ref.computedPivotUniqueValuesPerColumn,\n    editable = _ref.editable,\n    pivot = _ref.pivot,\n    sortable = _ref.sortable,\n    filterable = _ref.filterable,\n    resizable = _ref.resizable,\n    pivotGrandSummaryColumn = _ref.pivotGrandSummaryColumn,\n    lockable = _ref.lockable,\n    checkboxColumn = _ref.checkboxColumn,\n    rowIndexColumn = _ref.rowIndexColumn,\n    filter = _ref.filter,\n    rtl = _ref.rtl,\n    filterValueMap = _ref.filterValueMap,\n    sortInfo = _ref.sortInfo,\n    showPivotSummaryColumns = _ref.showPivotSummaryColumns,\n    _ref$availableWidth = _ref.availableWidth,\n    availableWidth = _ref$availableWidth === void 0 ? 0 : _ref$availableWidth,\n    onRowReorder = _ref.onRowReorder,\n    rowReorderColumn = _ref.rowReorderColumn,\n    computedGroupColumn = _ref.groupColumn;\n  if (columnVisibilityMap) {\n    columnVisibilityMap = _objectSpread({}, columnVisibilityMap);\n  }\n  var groupColumnSummaryReducers = {};\n  var pivotColumnSummaryReducers = {};\n  var addSortInfo = function addSortInfo(col) {\n    col.computedSortable = (typeof col.sortable === 'boolean' ? col.sortable : sortable) || false;\n    col.computedSortInfo = null;\n    if (col.computedSortable && sortInfo) {\n      col.computedSortInfo = Array.isArray(sortInfo) ? sortInfo.filter(function (info) {\n        return info.name === col.id || info.id === col.id || info.name === col.sortName;\n      })[0] : sortInfo.name === col.id || sortInfo.id === col.id || sortInfo.name === col.sortName ? sortInfo : null;\n    }\n  };\n  var addFilterValue = function addFilterValue(col) {\n    col.computedFilterable = (typeof col.filterable === 'boolean' ? col.filterable : filterable) || undefined;\n    col.computedFilterValue = null;\n    if (col.computedFilterable && filterValueMap) {\n      col.computedFilterValue = filterValueMap[col.id];\n    }\n    if (col.computedFilterable === undefined && col.computedFilterValue) {\n      col.computedFilterable = true;\n    }\n    col.computedFilterable = !!col.computedFilterable;\n  };\n  var hasLockedStart = false;\n  var hasLockedEnd = false;\n  var hasValueSetter = false;\n  var rowExpandColumn;\n  var setComputedColumnWidthsParam = {\n    columnFlexes: columnFlexes,\n    columnSizes: columnSizes,\n    columnDefaultWidth: columnDefaultWidth,\n    columnWidth: columnWidth,\n    columnMinWidth: columnMinWidth,\n    columnMaxWidth: columnMaxWidth\n  };\n  var hasDedicatedGroupColumn = false;\n  var normalizedColumns = columns.map(function (column) {\n    return _objectSpread(_objectSpread({}, DEFAULT_COLUMN_PROPS), column);\n  }).map(_setColumnId.default).map(function (col, i) {\n    col.computedInitialIndex = i - generatedColumnsLength;\n    (0, _setComputedColumnWidths.default)(col, setComputedColumnWidthsParam);\n    col.computedVisible = col.visible !== undefined ? !!col.visible : columnVisibilityMap[col.id] === false ? false : true;\n    if (col.computedVisible && pivot && !col.groupSummaryReducer && col.id !== _defaultGroupColumnId.id) {\n      col.computedVisible = false;\n    }\n    if (col.computedVisible === false) {\n      columnVisibilityMap[col.id] = false;\n    } else {\n      delete columnVisibilityMap[col.id];\n      if (col.id === _defaultGroupColumnId.id) {\n        hasDedicatedGroupColumn = true;\n      }\n    }\n    col.computedHeader = col.header === undefined ? col.name || '' : col.header;\n    col.computedLocked = col.locked;\n    if (col.computedLocked === undefined && lockedColumnsState[col.id] !== undefined) {\n      col.computedLocked = lockedColumnsState[col.id];\n    }\n    if (col.computedLocked === undefined && col.defaultLocked !== undefined) {\n      col.computedLocked = col.defaultLocked;\n    }\n    if (!filter || filter(col)) {\n      if (col.computedLocked === true || col.computedLocked === 'start') {\n        col.computedLocked = 'start';\n        hasLockedStart = true;\n      }\n      if (col.computedLocked === 'end') {\n        hasLockedEnd = true;\n      }\n    }\n    col.computedLocked = col.computedLocked || false;\n    if (col.id === _defaultRowExpandColumnId.id) {\n      rowExpandColumn = col;\n    }\n    if (col.enableColumnHover != null) {\n      col.computedEnableColumnHover = col.enableColumnHover;\n      delete col.enableColumnHover;\n    }\n    if (col.setValue) {\n      hasValueSetter = true;\n    }\n    return col;\n  });\n  if (hasLockedStart) {\n    if (rowExpandColumn != null) {\n      rowExpandColumn.computedLocked = 'start';\n    }\n    if (checkboxColumn) {\n      var normalizedCheckboxColumn = normalizedColumns.filter(function (c) {\n        return c.checkboxColumn && c.id == _defaultCheckColumnId.id;\n      })[0];\n      if (normalizedCheckboxColumn) {\n        normalizedCheckboxColumn.computedLocked = 'start';\n      }\n    }\n    if (hasDedicatedGroupColumn) {\n      var normalizedGroupColumn = normalizedColumns.filter(function (c) {\n        return c.groupColumn && c.id == _defaultGroupColumnId.id;\n      })[0];\n      if (normalizedGroupColumn) {\n        normalizedGroupColumn.computedLocked = 'start';\n      }\n    }\n    var autoLockColumns = normalizedColumns.filter(function (c) {\n      return !!c.autoLock;\n    });\n    if (autoLockColumns.length) {\n      autoLockColumns.forEach(function (c) {\n        c.computedLocked = 'start';\n      });\n    }\n    if (rowReorderColumn || onRowReorder && (typeof onRowReorder === 'function' || typeof onRowReorder === 'boolean')) {\n      var normalizedRowReorderColumn = normalizedColumns.filter(function (c) {\n        return c.id === _defaultRowReorderColumnId.id;\n      })[0];\n      if (normalizedRowReorderColumn) {\n        normalizedRowReorderColumn.computedLocked = 'start';\n      }\n    }\n  }\n  var computedEnableRowspan = false;\n  normalizedColumns.forEach(function (col, index) {\n    col.computedAbsoluteIndex = index;\n    addSortInfo(col);\n    addFilterValue(col);\n    if (typeof col.rowspan === 'function') {\n      computedEnableRowspan = true;\n    }\n    col.computedResizable = (typeof col.resizable !== 'boolean' ? resizable : col.resizable) || false;\n    col.computedLockable = (typeof col.lockable !== 'boolean' ? lockable : col.lockable) || false;\n  });\n  var columnsMap = (0, _mapColumns.default)(normalizedColumns, {\n    showWarnings: true\n  });\n  var visibleColumns = normalizedColumns.filter(function (c) {\n    return c.computedVisible !== false;\n  });\n  if (columnOrder) {\n    if (checkboxColumn) {\n      var checkboxColumnIndex = columnOrder.indexOf(_defaultCheckColumnId.id);\n      if (checkboxColumnIndex == -1) {\n        columnOrder = [_defaultCheckColumnId.id].concat((0, _toConsumableArray2.default)(columnOrder));\n      }\n    }\n  }\n  if (rowExpandColumn) {\n    if (!columnOrder) {\n      columnOrder = visibleColumns.map(function (c) {\n        return c.id;\n      });\n    }\n    var rowExpandColumnIndex = columnOrder.indexOf(_defaultRowExpandColumnId.id);\n    if (rowExpandColumnIndex !== 0) {\n      columnOrder = [_defaultRowExpandColumnId.id].concat((0, _toConsumableArray2.default)(columnOrder.filter(function (id) {\n        return id != _defaultRowExpandColumnId.id;\n      })));\n    }\n  }\n  if (rowReorderColumn || onRowReorder && (typeof onRowReorder === 'function' || typeof onRowReorder === 'boolean')) {\n    if (!columnOrder) {\n      columnOrder = visibleColumns.map(function (c) {\n        return c.id;\n      });\n    }\n    var rowReorderColumnIndex = columnOrder.indexOf(_defaultRowReorderColumnId.id);\n    if (rowReorderColumnIndex !== 0) {\n      columnOrder = [_defaultRowReorderColumnId.id].concat((0, _toConsumableArray2.default)(columnOrder.filter(function (id) {\n        return id !== _defaultRowReorderColumnId.id;\n      })));\n    }\n  }\n  if (rowIndexColumn) {\n    if (!columnOrder) {\n      columnOrder = visibleColumns.map(function (c) {\n        return c.id;\n      });\n    }\n    var rowIndexColumnIndex = columnOrder.indexOf(_defaultRowIndexColumnId.id);\n    if (rowIndexColumnIndex != 0) {\n      columnOrder = [].concat((0, _toConsumableArray2.default)(columnOrder.filter(function (id) {\n        var col = columnsMap[id];\n        return col && col.groupSpacerColumn;\n      })), [_defaultRowIndexColumnId.id], (0, _toConsumableArray2.default)(columnOrder.filter(function (id) {\n        var col = columnsMap[id];\n        if (!col) {\n          return false;\n        }\n        return id != _defaultRowIndexColumnId.id && !col.groupSpacerColumn;\n      })));\n    }\n  }\n  if (generatedColumnsLength) {\n    if (!columnOrder) {\n      columnOrder = visibleColumns.map(function (c) {\n        return c.id;\n      });\n    }\n    var generatedColumns = visibleColumns.filter(function (c) {\n      return c.groupSpacerColumn;\n    });\n    var generatedColumnIds = generatedColumns.reduce(function (acc, col) {\n      acc[col.id] = true;\n      return acc;\n    }, {});\n    columnOrder = [].concat((0, _toConsumableArray2.default)(generatedColumns.map(function (c) {\n      return c.id;\n    })), (0, _toConsumableArray2.default)(columnOrder.filter(function (id) {\n      return !generatedColumnIds[id];\n    })));\n  }\n  if (columnOrder) {\n    var groupSpacerColumns = visibleColumns.filter(function (col) {\n      return col.groupSpacerColumn;\n    });\n    var _checkboxColumn = visibleColumns.filter(function (col) {\n      return col.checkboxColumn;\n    });\n    var groupColumns = visibleColumns.filter(function (col) {\n      return col.groupColumn && !col.groupSpacerColumn;\n    });\n    var ungroupColumns = visibleColumns.filter(function (col) {\n      if (computedGroupColumn) {\n        return !col.groupColumn && !col.groupSpacerColumn && !col.checkboxColumn;\n      } else {\n        return !col.groupColumn && !col.groupSpacerColumn;\n      }\n    });\n    visibleColumns = columnOrder.map(function (colId) {\n      return ungroupColumns.find(function (col) {\n        return col.id == colId;\n      });\n    }).filter(function (x) {\n      return !!x;\n    });\n    if (computedGroupColumn) {\n      visibleColumns = [].concat((0, _toConsumableArray2.default)(_checkboxColumn), (0, _toConsumableArray2.default)(groupSpacerColumns), (0, _toConsumableArray2.default)(groupColumns), (0, _toConsumableArray2.default)(visibleColumns));\n    } else {\n      visibleColumns = [].concat((0, _toConsumableArray2.default)(groupSpacerColumns), (0, _toConsumableArray2.default)(groupColumns), (0, _toConsumableArray2.default)(visibleColumns));\n    }\n  }\n  if (typeof filter == 'function') {\n    visibleColumns = visibleColumns.filter(filter);\n  }\n  normalizedColumns.forEach(function (col) {\n    if (col.groupSummaryReducer) {\n      groupColumnSummaryReducers[col.id] = col.groupSummaryReducer;\n      if (!col.groupSummaryReducer.reducer && col.groupSummaryReducer.reduce) {\n        groupColumnSummaryReducers[col.id].reducer = col.groupSummaryReducer.reduce;\n      }\n    }\n  });\n  var groupColumn = visibleColumns.filter(function (col) {\n    return !!col.groupColumn;\n  })[0];\n  if (pivot && computedPivotUniqueValuesPerColumn && groupColumn) {\n    var aggregateColumns = visibleColumns.filter(function (col) {\n      return !!col.groupSummaryReducer;\n    });\n    var newColumns = [groupColumn].concat((0, _toConsumableArray2.default)(getPivotColumns(aggregateColumns, computedPivotUniqueValuesPerColumn, columnSizes, pivot, pivotGrandSummaryColumn, showPivotSummaryColumns))).map(function (col) {\n      (0, _setComputedColumnWidths.default)(col, setComputedColumnWidthsParam);\n      col.computedResizable = (typeof col.resizable !== 'boolean' ? resizable : col.resizable) || false;\n      return col;\n    });\n    visibleColumns = newColumns;\n    columnsMap = _objectSpread(_objectSpread({}, columnsMap), (0, _mapColumns.default)(newColumns, {\n      showWarnings: true\n    }));\n  }\n  var flexes = [];\n  var maxWidths = [];\n  var minWidths = [];\n  var minColumnsSize = 0;\n  var availableWidthForFlex = availableWidth;\n  visibleColumns.forEach(function (col) {\n    if (col.computedFlex == null) {\n      availableWidthForFlex -= col.computedWidth || col.computedDefaultWidth || col.computedMinWidth || 0;\n    }\n    flexes.push(col.computedFlex || 0);\n    maxWidths.push(col.computedMaxWidth || null);\n    minWidths.push(col.computedMinWidth || null);\n  });\n  availableWidthForFlex = Math.max(availableWidthForFlex, 0);\n  var flexWidths = (0, _computeFlexWidths.default)({\n    flexes: flexes,\n    availableSize: availableWidthForFlex,\n    maxWidths: maxWidths,\n    minWidths: minWidths\n  });\n  var totalFlexColumnCount = 0;\n  visibleColumns.forEach(function (col, index) {\n    if (col.computedFlex != null) {\n      col.computedWidth = flexWidths[index] || 0;\n      totalFlexColumnCount++;\n      minColumnsSize += col.minWidth || 0;\n    } else {\n      minColumnsSize += col.computedWidth || 0;\n    }\n  });\n  var unlockedColumns = visibleColumns;\n  var lockedStartColumns = [];\n  var lockedEndColumns = [];\n  if (hasLockedStart || hasLockedEnd) {\n    unlockedColumns = groupColumn && hasLockedStart ? visibleColumns.filter(function (col) {\n      return !col.computedLocked && !col.groupColumn;\n    }) : visibleColumns.filter(function (col) {\n      return !col.computedLocked;\n    });\n    lockedStartColumns = hasLockedStart ? visibleColumns.filter(function (col) {\n      return col.computedLocked === 'start' || col.groupColumn;\n    }) : emptyArray;\n    lockedEndColumns = hasLockedEnd ? groupColumn && hasLockedStart ? visibleColumns.filter(function (col) {\n      return col.computedLocked === 'end' && !col.groupColumn;\n    }) : visibleColumns.filter(function (col) {\n      return col.computedLocked === 'end';\n    }) : emptyArray;\n    visibleColumns = [].concat((0, _toConsumableArray2.default)(lockedStartColumns), (0, _toConsumableArray2.default)(unlockedColumns), (0, _toConsumableArray2.default)(lockedEndColumns));\n  }\n  var visibleColumnsMap = (0, _mapColumns.default)(visibleColumns, {\n    showWarnings: true\n  });\n  var sumPrefixWidth = 0;\n  var totalLockedStartWidth = 0;\n  var totalLockedEndWidth = 0;\n  var totalUnlockedWidth = 0;\n  var columnWidthPrefixSums = [];\n  var computedHasColSpan = false;\n  visibleColumns.forEach(function (col, index, arr) {\n    col.computedVisibleIndex = index;\n    col.computedVisibleCount = arr.length;\n    if (col.colspan) {\n      computedHasColSpan = true;\n    }\n    col.computedOffset = sumPrefixWidth;\n    var computedLocked = col.computedLocked,\n      computedWidth = col.computedWidth;\n    if (computedLocked === 'start') {\n      totalLockedStartWidth += computedWidth || 0;\n    } else if (computedLocked === 'end') {\n      totalLockedEndWidth += computedWidth || 0;\n    } else {\n      totalUnlockedWidth += computedWidth || 0;\n    }\n    addSortInfo(col);\n    if (editable && col.editable === undefined) {\n      col.computedEditable = true;\n    }\n    if (col.editable !== undefined) {\n      col.computedEditable = col.editable;\n    }\n    columnWidthPrefixSums.push(col.computedOffset || 0);\n    sumPrefixWidth += computedWidth || 0;\n  });\n  if (pivot) {\n    pivot.forEach(function (pivotCol) {\n      if (typeof pivotCol !== 'string' && pivotCol.summaryReducer) {\n        pivotColumnSummaryReducers[pivotCol.name] = pivotCol.summaryReducer;\n      }\n    });\n  }\n  return {\n    pivotColumnSummaryReducers: pivotColumnSummaryReducers,\n    minColumnsSize: minColumnsSize,\n    totalFlexColumnCount: totalFlexColumnCount,\n    groupColumnSummaryReducers: Object.keys(groupColumnSummaryReducers).length ? groupColumnSummaryReducers : undefined,\n    totalComputedWidth: sumPrefixWidth,\n    totalLockedStartWidth: totalLockedStartWidth,\n    totalLockedEndWidth: totalLockedEndWidth,\n    totalUnlockedWidth: totalUnlockedWidth,\n    lockedStartColumns: lockedStartColumns,\n    lockedEndColumns: lockedEndColumns,\n    unlockedColumns: unlockedColumns,\n    columnWidthPrefixSums: columnWidthPrefixSums,\n    columnVisibilityMap: columnVisibilityMap,\n    computedEnableRowspan: computedEnableRowspan,\n    computedHasColSpan: computedHasColSpan,\n    visibleColumns: visibleColumns,\n    allColumns: normalizedColumns,\n    columnsMap: columnsMap,\n    visibleColumnsMap: visibleColumnsMap,\n    hasValueSetter: hasValueSetter\n  };\n};\nexports.default = _default;\nvar getPivotGroupColumnForPath = function getPivotGroupColumnForPath(columnConfig, _ref2) {\n  var pivot = _ref2.pivot,\n    pivotGrandSummaryColumn = _ref2.pivotGrandSummaryColumn;\n  var pivotMap = pivot.reduce(function (acc, p) {\n    if (!p.summaryReducer) {\n      return acc;\n    }\n    var col = p ? p.summaryColumn || {} : {};\n    acc[p.name || p] = col;\n    return acc;\n  }, {});\n  if (pivotGrandSummaryColumn === true) {\n    pivotGrandSummaryColumn = {};\n  }\n  if (pivotGrandSummaryColumn) {\n    pivotGrandSummaryColumn.pivotGrandSummaryColumn = true;\n    pivotGrandSummaryColumn = _objectSpread(_objectSpread({}, defaultPivotGrandSummaryColumn), pivotGrandSummaryColumn);\n  }\n  columnConfig = _objectSpread(_objectSpread({}, defaultPivotSummaryColumn), columnConfig);\n  var _columnConfig = columnConfig,\n    pivotSummaryPath = _columnConfig.pivotSummaryPath;\n  var lastItem = pivotSummaryPath[pivotSummaryPath.length - 1];\n  var name = lastItem ? lastItem.field : null;\n  var col = !lastItem ? pivotGrandSummaryColumn : pivotMap[name] || {};\n  var result = columnConfig;\n  if (lastItem) {\n    columnConfig.header = \"Summary for \".concat(lastItem.field, \" \").concat(lastItem.value);\n  }\n  if (!pivotGrandSummaryColumn && !pivotMap[name]) {\n    return null;\n  }\n  if (col) {\n    if (typeof col === 'function') {\n      result = _objectSpread(_objectSpread({}, columnConfig), col(columnConfig));\n    } else {\n      result = _objectSpread(_objectSpread({}, columnConfig), col);\n    }\n  }\n  return result;\n};\nvar getPivotColumns = function getPivotColumns(aggregateColumns, uniqueValuesRoot, columnSizes, pivot, pivotGrandSummaryColumn, showPivotSummaryColumns) {\n  var parentGroups = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : [];\n  var pivotColumnPath = arguments.length > 7 ? arguments[7] : undefined;\n  var newColumns = [];\n  var field = uniqueValuesRoot.field,\n    values = uniqueValuesRoot.values;\n  var parentGroup = parentGroups[parentGroups.length - 1];\n  if (field && values) {\n    Object.keys(values).forEach(function (value) {\n      var groupId = \"\".concat(parentGroup ? parentGroup.name + '_' : '').concat(field, \":\").concat(value);\n      var group = {\n        name: groupId,\n        header: \"\".concat(field, \"-\").concat(value),\n        pivotPath: [{\n          value: value,\n          field: field\n        }]\n      };\n      if (parentGroup) {\n        group.group = parentGroup.name;\n        group.pivotPath = [].concat((0, _toConsumableArray2.default)(parentGroup.pivotPath || []), (0, _toConsumableArray2.default)(group.pivotPath));\n      }\n      var nextRoot = values[value];\n      pivotColumnPath = pivotColumnPath || [];\n      newColumns.push.apply(newColumns, (0, _toConsumableArray2.default)(getPivotColumns(aggregateColumns, nextRoot, columnSizes, pivot, pivotGrandSummaryColumn, showPivotSummaryColumns, [].concat((0, _toConsumableArray2.default)(parentGroups), [{\n        name: groupId,\n        pivotPath: group.pivotPath,\n        depth: parentGroup ? parentGroup.depth + 1 : 0\n      }]), [].concat((0, _toConsumableArray2.default)(pivotColumnPath), [value]))));\n      if (!parentGroup && showPivotSummaryColumns) {\n        var summaryCol = getPivotGroupColumnForPath({\n          header: \"Summary for \".concat(group.header),\n          id: \"__summary_\".concat(group.name),\n          pivotSummaryColumn: true,\n          pivotSummaryPath: group.pivotPath\n        }, {\n          pivot: pivot\n        });\n        if (summaryCol) {\n          newColumns.push(summaryCol);\n        }\n      }\n    });\n  } else {\n    newColumns.push.apply(newColumns, (0, _toConsumableArray2.default)(aggregateColumns.map(function (col) {\n      var result = _objectSpread(_objectSpread({}, col), {}, {\n        sortable: false,\n        showInContextMenu: false,\n        draggable: false,\n        pivotColumn: true,\n        pivotColumnPath: [].concat((0, _toConsumableArray2.default)(pivotColumnPath || []), [col.pivotName || col.name || col.id]),\n        id: \"\".concat(parentGroup.name, \"-\").concat(col.id),\n        group: parentGroup.name\n      });\n      if (columnSizes[result.id]) {\n        result.computedWidth = columnSizes[result.id];\n      }\n      return result;\n    })));\n    var prevParentGroup = parentGroups[parentGroups.length - 2];\n    if (showPivotSummaryColumns && prevParentGroup) {\n      var summaryCol = getPivotGroupColumnForPath({\n        group: prevParentGroup ? prevParentGroup.name : undefined,\n        header: \"Summary for \".concat(parentGroup.name, \" - \").concat(prevParentGroup ? prevParentGroup.name : ''),\n        id: \"__summary__\".concat(parentGroup.name),\n        pivotSummaryPath: parentGroup.pivotPath,\n        pivotSummaryColumn: true\n      }, {\n        pivot: pivot\n      });\n      if (summaryCol) {\n        newColumns.push(summaryCol);\n      }\n    }\n  }\n  if (!parentGroup && pivotGrandSummaryColumn && showPivotSummaryColumns) {\n    newColumns.push(getPivotGroupColumnForPath({\n      header: \"Grand summary\",\n      id: \"__summary__grand\",\n      pivotSummaryColumn: true,\n      pivotSummaryPath: []\n    }, {\n      pivot: pivot,\n      pivotGrandSummaryColumn: pivotGrandSummaryColumn\n    }));\n  }\n  return newColumns;\n};","map":{"version":3,"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","default","_toConsumableArray2","_defineProperty2","_setColumnId","_computeFlexWidths","_mapColumns","_defaultCheckColumnId","_defaultRowExpandColumnId","_defaultRowIndexColumnId","_defaultGroupColumnId","_defaultRowReorderColumnId","_setComputedColumnWidths","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","getOwnPropertyDescriptors","defineProperties","DEFAULT_COLUMN_PROPS","isColumn","keepFlex","defaultPivotGrandSummaryColumn","sortable","draggable","filterable","defaultPivotSummaryColumn","emptyArray","emptyObject","freeze","_default","_ref","_ref$generatedColumns","generatedColumnsLength","columns","columnMinWidth","columnMaxWidth","columnDefaultWidth","columnWidth","_ref$columnSizes","columnSizes","_ref$columnVisibility","columnVisibilityMap","_ref$columnFlexes","columnFlexes","_ref$lockedColumnsSta","lockedColumnsState","columnOrder","computedPivotUniqueValuesPerColumn","editable","pivot","resizable","pivotGrandSummaryColumn","lockable","checkboxColumn","rowIndexColumn","rtl","filterValueMap","sortInfo","showPivotSummaryColumns","_ref$availableWidth","availableWidth","onRowReorder","rowReorderColumn","computedGroupColumn","groupColumn","groupColumnSummaryReducers","pivotColumnSummaryReducers","addSortInfo","col","computedSortable","computedSortInfo","Array","isArray","info","name","id","sortName","addFilterValue","computedFilterable","undefined","computedFilterValue","hasLockedStart","hasLockedEnd","hasValueSetter","rowExpandColumn","setComputedColumnWidthsParam","hasDedicatedGroupColumn","normalizedColumns","map","column","computedInitialIndex","computedVisible","visible","groupSummaryReducer","computedHeader","header","computedLocked","locked","defaultLocked","enableColumnHover","computedEnableColumnHover","setValue","normalizedCheckboxColumn","c","normalizedGroupColumn","autoLockColumns","autoLock","normalizedRowReorderColumn","computedEnableRowspan","index","computedAbsoluteIndex","rowspan","computedResizable","computedLockable","columnsMap","showWarnings","visibleColumns","checkboxColumnIndex","indexOf","concat","rowExpandColumnIndex","rowReorderColumnIndex","rowIndexColumnIndex","groupSpacerColumn","generatedColumns","generatedColumnIds","reduce","acc","groupSpacerColumns","_checkboxColumn","groupColumns","ungroupColumns","colId","find","x","reducer","aggregateColumns","newColumns","getPivotColumns","flexes","maxWidths","minWidths","minColumnsSize","availableWidthForFlex","computedFlex","computedWidth","computedDefaultWidth","computedMinWidth","computedMaxWidth","Math","max","flexWidths","availableSize","totalFlexColumnCount","minWidth","unlockedColumns","lockedStartColumns","lockedEndColumns","visibleColumnsMap","sumPrefixWidth","totalLockedStartWidth","totalLockedEndWidth","totalUnlockedWidth","columnWidthPrefixSums","computedHasColSpan","arr","computedVisibleIndex","computedVisibleCount","colspan","computedOffset","computedEditable","pivotCol","summaryReducer","totalComputedWidth","allColumns","getPivotGroupColumnForPath","columnConfig","_ref2","pivotMap","p","summaryColumn","_columnConfig","pivotSummaryPath","lastItem","field","result","uniqueValuesRoot","parentGroups","pivotColumnPath","values","parentGroup","groupId","group","pivotPath","nextRoot","depth","summaryCol","pivotSummaryColumn","showInContextMenu","pivotColumn","pivotName","prevParentGroup"],"sources":["/Users/alexandre.nepomuceno/Documents/agenda/node_modules/@inovua/reactdatagrid-community/normalizeColumns/index.js"],"sourcesContent":["/** \n * Copyright Â© INOVUA TRADING.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\nvar _setColumnId = _interopRequireDefault(require(\"../setColumnId\"));\nvar _computeFlexWidths = _interopRequireDefault(require(\"../utils/flex/computeFlexWidths\"));\nvar _mapColumns = _interopRequireDefault(require(\"../mapColumns\"));\nvar _defaultCheckColumnId = require(\"./defaultCheckColumnId\");\nvar _defaultRowExpandColumnId = require(\"./defaultRowExpandColumnId\");\nvar _defaultRowIndexColumnId = require(\"./defaultRowIndexColumnId\");\nvar _defaultGroupColumnId = require(\"./defaultGroupColumnId\");\nvar _defaultRowReorderColumnId = require(\"./defaultRowReorderColumnId\");\nvar _setComputedColumnWidths = _interopRequireDefault(require(\"./setComputedColumnWidths\"));\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nvar DEFAULT_COLUMN_PROPS = {\n  isColumn: true,\n  keepFlex: true\n};\nvar defaultPivotGrandSummaryColumn = {\n  sortable: false,\n  draggable: false,\n  filterable: false\n};\nvar defaultPivotSummaryColumn = defaultPivotGrandSummaryColumn;\nvar emptyArray = [];\nvar emptyObject = Object.freeze ? Object.freeze({}) : {};\nvar _default = function _default(_ref) {\n  var _ref$generatedColumns = _ref.generatedColumnsLength,\n    generatedColumnsLength = _ref$generatedColumns === void 0 ? 0 : _ref$generatedColumns,\n    columns = _ref.columns,\n    columnMinWidth = _ref.columnMinWidth,\n    columnMaxWidth = _ref.columnMaxWidth,\n    columnDefaultWidth = _ref.columnDefaultWidth,\n    columnWidth = _ref.columnWidth,\n    _ref$columnSizes = _ref.columnSizes,\n    columnSizes = _ref$columnSizes === void 0 ? emptyObject : _ref$columnSizes,\n    _ref$columnVisibility = _ref.columnVisibilityMap,\n    columnVisibilityMap = _ref$columnVisibility === void 0 ? emptyObject : _ref$columnVisibility,\n    _ref$columnFlexes = _ref.columnFlexes,\n    columnFlexes = _ref$columnFlexes === void 0 ? emptyObject : _ref$columnFlexes,\n    _ref$lockedColumnsSta = _ref.lockedColumnsState,\n    lockedColumnsState = _ref$lockedColumnsSta === void 0 ? emptyObject : _ref$lockedColumnsSta,\n    columnOrder = _ref.columnOrder,\n    computedPivotUniqueValuesPerColumn = _ref.computedPivotUniqueValuesPerColumn,\n    editable = _ref.editable,\n    pivot = _ref.pivot,\n    sortable = _ref.sortable,\n    filterable = _ref.filterable,\n    resizable = _ref.resizable,\n    pivotGrandSummaryColumn = _ref.pivotGrandSummaryColumn,\n    lockable = _ref.lockable,\n    checkboxColumn = _ref.checkboxColumn,\n    rowIndexColumn = _ref.rowIndexColumn,\n    filter = _ref.filter,\n    rtl = _ref.rtl,\n    filterValueMap = _ref.filterValueMap,\n    sortInfo = _ref.sortInfo,\n    showPivotSummaryColumns = _ref.showPivotSummaryColumns,\n    _ref$availableWidth = _ref.availableWidth,\n    availableWidth = _ref$availableWidth === void 0 ? 0 : _ref$availableWidth,\n    onRowReorder = _ref.onRowReorder,\n    rowReorderColumn = _ref.rowReorderColumn,\n    computedGroupColumn = _ref.groupColumn;\n  if (columnVisibilityMap) {\n    columnVisibilityMap = _objectSpread({}, columnVisibilityMap);\n  }\n  var groupColumnSummaryReducers = {};\n  var pivotColumnSummaryReducers = {};\n  var addSortInfo = function addSortInfo(col) {\n    col.computedSortable = (typeof col.sortable === 'boolean' ? col.sortable : sortable) || false;\n    col.computedSortInfo = null;\n    if (col.computedSortable && sortInfo) {\n      col.computedSortInfo = Array.isArray(sortInfo) ? sortInfo.filter(function (info) {\n        return info.name === col.id || info.id === col.id || info.name === col.sortName;\n      })[0] : sortInfo.name === col.id || sortInfo.id === col.id || sortInfo.name === col.sortName ? sortInfo : null;\n    }\n  };\n  var addFilterValue = function addFilterValue(col) {\n    col.computedFilterable = (typeof col.filterable === 'boolean' ? col.filterable : filterable) || undefined;\n    col.computedFilterValue = null;\n    if (col.computedFilterable && filterValueMap) {\n      col.computedFilterValue = filterValueMap[col.id];\n    }\n    if (col.computedFilterable === undefined && col.computedFilterValue) {\n      col.computedFilterable = true;\n    }\n    col.computedFilterable = !!col.computedFilterable;\n  };\n  var hasLockedStart = false;\n  var hasLockedEnd = false;\n  var hasValueSetter = false;\n  var rowExpandColumn;\n  var setComputedColumnWidthsParam = {\n    columnFlexes: columnFlexes,\n    columnSizes: columnSizes,\n    columnDefaultWidth: columnDefaultWidth,\n    columnWidth: columnWidth,\n    columnMinWidth: columnMinWidth,\n    columnMaxWidth: columnMaxWidth\n  };\n  var hasDedicatedGroupColumn = false;\n  var normalizedColumns = columns.map(function (column) {\n    return _objectSpread(_objectSpread({}, DEFAULT_COLUMN_PROPS), column);\n  }).map(_setColumnId.default).map(function (col, i) {\n    col.computedInitialIndex = i - generatedColumnsLength;\n    (0, _setComputedColumnWidths.default)(col, setComputedColumnWidthsParam);\n    col.computedVisible = col.visible !== undefined ? !!col.visible : columnVisibilityMap[col.id] === false ? false : true;\n    if (col.computedVisible && pivot && !col.groupSummaryReducer && col.id !== _defaultGroupColumnId.id) {\n      col.computedVisible = false;\n    }\n    if (col.computedVisible === false) {\n      columnVisibilityMap[col.id] = false;\n    } else {\n      delete columnVisibilityMap[col.id];\n      if (col.id === _defaultGroupColumnId.id) {\n        hasDedicatedGroupColumn = true;\n      }\n    }\n    col.computedHeader = col.header === undefined ? col.name || '' : col.header;\n    col.computedLocked = col.locked;\n    if (col.computedLocked === undefined && lockedColumnsState[col.id] !== undefined) {\n      col.computedLocked = lockedColumnsState[col.id];\n    }\n    if (col.computedLocked === undefined && col.defaultLocked !== undefined) {\n      col.computedLocked = col.defaultLocked;\n    }\n    if (!filter || filter(col)) {\n      if (col.computedLocked === true || col.computedLocked === 'start') {\n        col.computedLocked = 'start';\n        hasLockedStart = true;\n      }\n      if (col.computedLocked === 'end') {\n        hasLockedEnd = true;\n      }\n    }\n    col.computedLocked = col.computedLocked || false;\n    if (col.id === _defaultRowExpandColumnId.id) {\n      rowExpandColumn = col;\n    }\n    if (col.enableColumnHover != null) {\n      col.computedEnableColumnHover = col.enableColumnHover;\n      delete col.enableColumnHover;\n    }\n    if (col.setValue) {\n      hasValueSetter = true;\n    }\n    return col;\n  });\n  if (hasLockedStart) {\n    if (rowExpandColumn != null) {\n      rowExpandColumn.computedLocked = 'start';\n    }\n    if (checkboxColumn) {\n      var normalizedCheckboxColumn = normalizedColumns.filter(function (c) {\n        return c.checkboxColumn && c.id == _defaultCheckColumnId.id;\n      })[0];\n      if (normalizedCheckboxColumn) {\n        normalizedCheckboxColumn.computedLocked = 'start';\n      }\n    }\n    if (hasDedicatedGroupColumn) {\n      var normalizedGroupColumn = normalizedColumns.filter(function (c) {\n        return c.groupColumn && c.id == _defaultGroupColumnId.id;\n      })[0];\n      if (normalizedGroupColumn) {\n        normalizedGroupColumn.computedLocked = 'start';\n      }\n    }\n    var autoLockColumns = normalizedColumns.filter(function (c) {\n      return !!c.autoLock;\n    });\n    if (autoLockColumns.length) {\n      autoLockColumns.forEach(function (c) {\n        c.computedLocked = 'start';\n      });\n    }\n    if (rowReorderColumn || onRowReorder && (typeof onRowReorder === 'function' || typeof onRowReorder === 'boolean')) {\n      var normalizedRowReorderColumn = normalizedColumns.filter(function (c) {\n        return c.id === _defaultRowReorderColumnId.id;\n      })[0];\n      if (normalizedRowReorderColumn) {\n        normalizedRowReorderColumn.computedLocked = 'start';\n      }\n    }\n  }\n  var computedEnableRowspan = false;\n  normalizedColumns.forEach(function (col, index) {\n    col.computedAbsoluteIndex = index;\n    addSortInfo(col);\n    addFilterValue(col);\n    if (typeof col.rowspan === 'function') {\n      computedEnableRowspan = true;\n    }\n    col.computedResizable = (typeof col.resizable !== 'boolean' ? resizable : col.resizable) || false;\n    col.computedLockable = (typeof col.lockable !== 'boolean' ? lockable : col.lockable) || false;\n  });\n  var columnsMap = (0, _mapColumns.default)(normalizedColumns, {\n    showWarnings: true\n  });\n  var visibleColumns = normalizedColumns.filter(function (c) {\n    return c.computedVisible !== false;\n  });\n  if (columnOrder) {\n    if (checkboxColumn) {\n      var checkboxColumnIndex = columnOrder.indexOf(_defaultCheckColumnId.id);\n      if (checkboxColumnIndex == -1) {\n        columnOrder = [_defaultCheckColumnId.id].concat((0, _toConsumableArray2.default)(columnOrder));\n      }\n    }\n  }\n  if (rowExpandColumn) {\n    if (!columnOrder) {\n      columnOrder = visibleColumns.map(function (c) {\n        return c.id;\n      });\n    }\n    var rowExpandColumnIndex = columnOrder.indexOf(_defaultRowExpandColumnId.id);\n    if (rowExpandColumnIndex !== 0) {\n      columnOrder = [_defaultRowExpandColumnId.id].concat((0, _toConsumableArray2.default)(columnOrder.filter(function (id) {\n        return id != _defaultRowExpandColumnId.id;\n      })));\n    }\n  }\n  if (rowReorderColumn || onRowReorder && (typeof onRowReorder === 'function' || typeof onRowReorder === 'boolean')) {\n    if (!columnOrder) {\n      columnOrder = visibleColumns.map(function (c) {\n        return c.id;\n      });\n    }\n    var rowReorderColumnIndex = columnOrder.indexOf(_defaultRowReorderColumnId.id);\n    if (rowReorderColumnIndex !== 0) {\n      columnOrder = [_defaultRowReorderColumnId.id].concat((0, _toConsumableArray2.default)(columnOrder.filter(function (id) {\n        return id !== _defaultRowReorderColumnId.id;\n      })));\n    }\n  }\n  if (rowIndexColumn) {\n    if (!columnOrder) {\n      columnOrder = visibleColumns.map(function (c) {\n        return c.id;\n      });\n    }\n    var rowIndexColumnIndex = columnOrder.indexOf(_defaultRowIndexColumnId.id);\n    if (rowIndexColumnIndex != 0) {\n      columnOrder = [].concat((0, _toConsumableArray2.default)(columnOrder.filter(function (id) {\n        var col = columnsMap[id];\n        return col && col.groupSpacerColumn;\n      })), [_defaultRowIndexColumnId.id], (0, _toConsumableArray2.default)(columnOrder.filter(function (id) {\n        var col = columnsMap[id];\n        if (!col) {\n          return false;\n        }\n        return id != _defaultRowIndexColumnId.id && !col.groupSpacerColumn;\n      })));\n    }\n  }\n  if (generatedColumnsLength) {\n    if (!columnOrder) {\n      columnOrder = visibleColumns.map(function (c) {\n        return c.id;\n      });\n    }\n    var generatedColumns = visibleColumns.filter(function (c) {\n      return c.groupSpacerColumn;\n    });\n    var generatedColumnIds = generatedColumns.reduce(function (acc, col) {\n      acc[col.id] = true;\n      return acc;\n    }, {});\n    columnOrder = [].concat((0, _toConsumableArray2.default)(generatedColumns.map(function (c) {\n      return c.id;\n    })), (0, _toConsumableArray2.default)(columnOrder.filter(function (id) {\n      return !generatedColumnIds[id];\n    })));\n  }\n  if (columnOrder) {\n    var groupSpacerColumns = visibleColumns.filter(function (col) {\n      return col.groupSpacerColumn;\n    });\n    var _checkboxColumn = visibleColumns.filter(function (col) {\n      return col.checkboxColumn;\n    });\n    var groupColumns = visibleColumns.filter(function (col) {\n      return col.groupColumn && !col.groupSpacerColumn;\n    });\n    var ungroupColumns = visibleColumns.filter(function (col) {\n      if (computedGroupColumn) {\n        return !col.groupColumn && !col.groupSpacerColumn && !col.checkboxColumn;\n      } else {\n        return !col.groupColumn && !col.groupSpacerColumn;\n      }\n    });\n    visibleColumns = columnOrder.map(function (colId) {\n      return ungroupColumns.find(function (col) {\n        return col.id == colId;\n      });\n    }).filter(function (x) {\n      return !!x;\n    });\n    if (computedGroupColumn) {\n      visibleColumns = [].concat((0, _toConsumableArray2.default)(_checkboxColumn), (0, _toConsumableArray2.default)(groupSpacerColumns), (0, _toConsumableArray2.default)(groupColumns), (0, _toConsumableArray2.default)(visibleColumns));\n    } else {\n      visibleColumns = [].concat((0, _toConsumableArray2.default)(groupSpacerColumns), (0, _toConsumableArray2.default)(groupColumns), (0, _toConsumableArray2.default)(visibleColumns));\n    }\n  }\n  if (typeof filter == 'function') {\n    visibleColumns = visibleColumns.filter(filter);\n  }\n  normalizedColumns.forEach(function (col) {\n    if (col.groupSummaryReducer) {\n      groupColumnSummaryReducers[col.id] = col.groupSummaryReducer;\n      if (!col.groupSummaryReducer.reducer && col.groupSummaryReducer.reduce) {\n        groupColumnSummaryReducers[col.id].reducer = col.groupSummaryReducer.reduce;\n      }\n    }\n  });\n  var groupColumn = visibleColumns.filter(function (col) {\n    return !!col.groupColumn;\n  })[0];\n  if (pivot && computedPivotUniqueValuesPerColumn && groupColumn) {\n    var aggregateColumns = visibleColumns.filter(function (col) {\n      return !!col.groupSummaryReducer;\n    });\n    var newColumns = [groupColumn].concat((0, _toConsumableArray2.default)(getPivotColumns(aggregateColumns, computedPivotUniqueValuesPerColumn, columnSizes, pivot, pivotGrandSummaryColumn, showPivotSummaryColumns))).map(function (col) {\n      (0, _setComputedColumnWidths.default)(col, setComputedColumnWidthsParam);\n      col.computedResizable = (typeof col.resizable !== 'boolean' ? resizable : col.resizable) || false;\n      return col;\n    });\n    visibleColumns = newColumns;\n    columnsMap = _objectSpread(_objectSpread({}, columnsMap), (0, _mapColumns.default)(newColumns, {\n      showWarnings: true\n    }));\n  }\n  var flexes = [];\n  var maxWidths = [];\n  var minWidths = [];\n  var minColumnsSize = 0;\n  var availableWidthForFlex = availableWidth;\n  visibleColumns.forEach(function (col) {\n    if (col.computedFlex == null) {\n      availableWidthForFlex -= col.computedWidth || col.computedDefaultWidth || col.computedMinWidth || 0;\n    }\n    flexes.push(col.computedFlex || 0);\n    maxWidths.push(col.computedMaxWidth || null);\n    minWidths.push(col.computedMinWidth || null);\n  });\n  availableWidthForFlex = Math.max(availableWidthForFlex, 0);\n  var flexWidths = (0, _computeFlexWidths.default)({\n    flexes: flexes,\n    availableSize: availableWidthForFlex,\n    maxWidths: maxWidths,\n    minWidths: minWidths\n  });\n  var totalFlexColumnCount = 0;\n  visibleColumns.forEach(function (col, index) {\n    if (col.computedFlex != null) {\n      col.computedWidth = flexWidths[index] || 0;\n      totalFlexColumnCount++;\n      minColumnsSize += col.minWidth || 0;\n    } else {\n      minColumnsSize += col.computedWidth || 0;\n    }\n  });\n  var unlockedColumns = visibleColumns;\n  var lockedStartColumns = [];\n  var lockedEndColumns = [];\n  if (hasLockedStart || hasLockedEnd) {\n    unlockedColumns = groupColumn && hasLockedStart ? visibleColumns.filter(function (col) {\n      return !col.computedLocked && !col.groupColumn;\n    }) : visibleColumns.filter(function (col) {\n      return !col.computedLocked;\n    });\n    lockedStartColumns = hasLockedStart ? visibleColumns.filter(function (col) {\n      return col.computedLocked === 'start' || col.groupColumn;\n    }) : emptyArray;\n    lockedEndColumns = hasLockedEnd ? groupColumn && hasLockedStart ? visibleColumns.filter(function (col) {\n      return col.computedLocked === 'end' && !col.groupColumn;\n    }) : visibleColumns.filter(function (col) {\n      return col.computedLocked === 'end';\n    }) : emptyArray;\n    visibleColumns = [].concat((0, _toConsumableArray2.default)(lockedStartColumns), (0, _toConsumableArray2.default)(unlockedColumns), (0, _toConsumableArray2.default)(lockedEndColumns));\n  }\n  var visibleColumnsMap = (0, _mapColumns.default)(visibleColumns, {\n    showWarnings: true\n  });\n  var sumPrefixWidth = 0;\n  var totalLockedStartWidth = 0;\n  var totalLockedEndWidth = 0;\n  var totalUnlockedWidth = 0;\n  var columnWidthPrefixSums = [];\n  var computedHasColSpan = false;\n  visibleColumns.forEach(function (col, index, arr) {\n    col.computedVisibleIndex = index;\n    col.computedVisibleCount = arr.length;\n    if (col.colspan) {\n      computedHasColSpan = true;\n    }\n    col.computedOffset = sumPrefixWidth;\n    var computedLocked = col.computedLocked,\n      computedWidth = col.computedWidth;\n    if (computedLocked === 'start') {\n      totalLockedStartWidth += computedWidth || 0;\n    } else if (computedLocked === 'end') {\n      totalLockedEndWidth += computedWidth || 0;\n    } else {\n      totalUnlockedWidth += computedWidth || 0;\n    }\n    addSortInfo(col);\n    if (editable && col.editable === undefined) {\n      col.computedEditable = true;\n    }\n    if (col.editable !== undefined) {\n      col.computedEditable = col.editable;\n    }\n    columnWidthPrefixSums.push(col.computedOffset || 0);\n    sumPrefixWidth += computedWidth || 0;\n  });\n  if (pivot) {\n    pivot.forEach(function (pivotCol) {\n      if (typeof pivotCol !== 'string' && pivotCol.summaryReducer) {\n        pivotColumnSummaryReducers[pivotCol.name] = pivotCol.summaryReducer;\n      }\n    });\n  }\n  return {\n    pivotColumnSummaryReducers: pivotColumnSummaryReducers,\n    minColumnsSize: minColumnsSize,\n    totalFlexColumnCount: totalFlexColumnCount,\n    groupColumnSummaryReducers: Object.keys(groupColumnSummaryReducers).length ? groupColumnSummaryReducers : undefined,\n    totalComputedWidth: sumPrefixWidth,\n    totalLockedStartWidth: totalLockedStartWidth,\n    totalLockedEndWidth: totalLockedEndWidth,\n    totalUnlockedWidth: totalUnlockedWidth,\n    lockedStartColumns: lockedStartColumns,\n    lockedEndColumns: lockedEndColumns,\n    unlockedColumns: unlockedColumns,\n    columnWidthPrefixSums: columnWidthPrefixSums,\n    columnVisibilityMap: columnVisibilityMap,\n    computedEnableRowspan: computedEnableRowspan,\n    computedHasColSpan: computedHasColSpan,\n    visibleColumns: visibleColumns,\n    allColumns: normalizedColumns,\n    columnsMap: columnsMap,\n    visibleColumnsMap: visibleColumnsMap,\n    hasValueSetter: hasValueSetter\n  };\n};\nexports.default = _default;\nvar getPivotGroupColumnForPath = function getPivotGroupColumnForPath(columnConfig, _ref2) {\n  var pivot = _ref2.pivot,\n    pivotGrandSummaryColumn = _ref2.pivotGrandSummaryColumn;\n  var pivotMap = pivot.reduce(function (acc, p) {\n    if (!p.summaryReducer) {\n      return acc;\n    }\n    var col = p ? p.summaryColumn || {} : {};\n    acc[p.name || p] = col;\n    return acc;\n  }, {});\n  if (pivotGrandSummaryColumn === true) {\n    pivotGrandSummaryColumn = {};\n  }\n  if (pivotGrandSummaryColumn) {\n    pivotGrandSummaryColumn.pivotGrandSummaryColumn = true;\n    pivotGrandSummaryColumn = _objectSpread(_objectSpread({}, defaultPivotGrandSummaryColumn), pivotGrandSummaryColumn);\n  }\n  columnConfig = _objectSpread(_objectSpread({}, defaultPivotSummaryColumn), columnConfig);\n  var _columnConfig = columnConfig,\n    pivotSummaryPath = _columnConfig.pivotSummaryPath;\n  var lastItem = pivotSummaryPath[pivotSummaryPath.length - 1];\n  var name = lastItem ? lastItem.field : null;\n  var col = !lastItem ? pivotGrandSummaryColumn : pivotMap[name] || {};\n  var result = columnConfig;\n  if (lastItem) {\n    columnConfig.header = \"Summary for \".concat(lastItem.field, \" \").concat(lastItem.value);\n  }\n  if (!pivotGrandSummaryColumn && !pivotMap[name]) {\n    return null;\n  }\n  if (col) {\n    if (typeof col === 'function') {\n      result = _objectSpread(_objectSpread({}, columnConfig), col(columnConfig));\n    } else {\n      result = _objectSpread(_objectSpread({}, columnConfig), col);\n    }\n  }\n  return result;\n};\nvar getPivotColumns = function getPivotColumns(aggregateColumns, uniqueValuesRoot, columnSizes, pivot, pivotGrandSummaryColumn, showPivotSummaryColumns) {\n  var parentGroups = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : [];\n  var pivotColumnPath = arguments.length > 7 ? arguments[7] : undefined;\n  var newColumns = [];\n  var field = uniqueValuesRoot.field,\n    values = uniqueValuesRoot.values;\n  var parentGroup = parentGroups[parentGroups.length - 1];\n  if (field && values) {\n    Object.keys(values).forEach(function (value) {\n      var groupId = \"\".concat(parentGroup ? parentGroup.name + '_' : '').concat(field, \":\").concat(value);\n      var group = {\n        name: groupId,\n        header: \"\".concat(field, \"-\").concat(value),\n        pivotPath: [{\n          value: value,\n          field: field\n        }]\n      };\n      if (parentGroup) {\n        group.group = parentGroup.name;\n        group.pivotPath = [].concat((0, _toConsumableArray2.default)(parentGroup.pivotPath || []), (0, _toConsumableArray2.default)(group.pivotPath));\n      }\n      var nextRoot = values[value];\n      pivotColumnPath = pivotColumnPath || [];\n      newColumns.push.apply(newColumns, (0, _toConsumableArray2.default)(getPivotColumns(aggregateColumns, nextRoot, columnSizes, pivot, pivotGrandSummaryColumn, showPivotSummaryColumns, [].concat((0, _toConsumableArray2.default)(parentGroups), [{\n        name: groupId,\n        pivotPath: group.pivotPath,\n        depth: parentGroup ? parentGroup.depth + 1 : 0\n      }]), [].concat((0, _toConsumableArray2.default)(pivotColumnPath), [value]))));\n      if (!parentGroup && showPivotSummaryColumns) {\n        var summaryCol = getPivotGroupColumnForPath({\n          header: \"Summary for \".concat(group.header),\n          id: \"__summary_\".concat(group.name),\n          pivotSummaryColumn: true,\n          pivotSummaryPath: group.pivotPath\n        }, {\n          pivot: pivot\n        });\n        if (summaryCol) {\n          newColumns.push(summaryCol);\n        }\n      }\n    });\n  } else {\n    newColumns.push.apply(newColumns, (0, _toConsumableArray2.default)(aggregateColumns.map(function (col) {\n      var result = _objectSpread(_objectSpread({}, col), {}, {\n        sortable: false,\n        showInContextMenu: false,\n        draggable: false,\n        pivotColumn: true,\n        pivotColumnPath: [].concat((0, _toConsumableArray2.default)(pivotColumnPath || []), [col.pivotName || col.name || col.id]),\n        id: \"\".concat(parentGroup.name, \"-\").concat(col.id),\n        group: parentGroup.name\n      });\n      if (columnSizes[result.id]) {\n        result.computedWidth = columnSizes[result.id];\n      }\n      return result;\n    })));\n    var prevParentGroup = parentGroups[parentGroups.length - 2];\n    if (showPivotSummaryColumns && prevParentGroup) {\n      var summaryCol = getPivotGroupColumnForPath({\n        group: prevParentGroup ? prevParentGroup.name : undefined,\n        header: \"Summary for \".concat(parentGroup.name, \" - \").concat(prevParentGroup ? prevParentGroup.name : ''),\n        id: \"__summary__\".concat(parentGroup.name),\n        pivotSummaryPath: parentGroup.pivotPath,\n        pivotSummaryColumn: true\n      }, {\n        pivot: pivot\n      });\n      if (summaryCol) {\n        newColumns.push(summaryCol);\n      }\n    }\n  }\n  if (!parentGroup && pivotGrandSummaryColumn && showPivotSummaryColumns) {\n    newColumns.push(getPivotGroupColumnForPath({\n      header: \"Grand summary\",\n      id: \"__summary__grand\",\n      pivotSummaryColumn: true,\n      pivotSummaryPath: []\n    }, {\n      pivot: pivot,\n      pivotGrandSummaryColumn: pivotGrandSummaryColumn\n    }));\n  }\n  return newColumns;\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script"}