{"ast":null,"code":"/** \n * Copyright Â© INOVUA TRADING.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nvar _typeof = require(\"@babel/runtime/helpers/typeof\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\nvar _react = _interopRequireWildcard(require(\"react\"));\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\nvar _reactClass = _interopRequireDefault(require(\"../../../packages/react-class\"));\nvar _debounce = _interopRequireDefault(require(\"../../../packages/debounce\"));\nvar _contains = _interopRequireDefault(require(\"../../../packages/contains\"));\nvar _assignDefined2 = _interopRequireDefault(require(\"../../../packages/assign-defined\"));\nvar _region = _interopRequireDefault(require(\"../../../packages/region\"));\nvar _isMobile = _interopRequireDefault(require(\"../../../packages/isMobile\"));\nvar _getRangesForBoxes = _interopRequireDefault(require(\"./getRangesForBoxes\"));\nvar _getRangesForColumns = _interopRequireDefault(require(\"./getRangesForColumns\"));\nvar _setupColumnDrag = _interopRequireDefault(require(\"./setupColumnDrag\"));\nvar _moveXBeforeY = _interopRequireDefault(require(\"../../../utils/moveXBeforeY\"));\nvar _isFocusable = _interopRequireDefault(require(\"../../../utils/isFocusable\"));\nvar _getDropIndex2 = _interopRequireDefault(require(\"./getDropIndex\"));\nvar _getUndraggableSuccessiveCount = _interopRequireDefault(require(\"./getUndraggableSuccessiveCount\"));\nvar _DragCell = _interopRequireWildcard(require(\"./DragCell\"));\nvar _DragHeaderGroup = _interopRequireDefault(require(\"./DragHeaderGroup\"));\nvar _HeaderWrapper = _interopRequireDefault(require(\"./HeaderWrapper\"));\nvar _Header = require(\"./Header\");\nvar _getScrollbarWidth = _interopRequireDefault(require(\"../../../packages/getScrollbarWidth\"));\nvar _getGlobal = require(\"../../../getGlobal\");\nvar _join = _interopRequireDefault(require(\"@inovua/reactdatagrid-community/packages/join\"));\nfunction _getRequireWildcardCache(nodeInterop) {\n  if (typeof WeakMap !== \"function\") return null;\n  var cacheBabelInterop = new WeakMap();\n  var cacheNodeInterop = new WeakMap();\n  return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) {\n    return nodeInterop ? cacheNodeInterop : cacheBabelInterop;\n  })(nodeInterop);\n}\nfunction _interopRequireWildcard(obj, nodeInterop) {\n  if (!nodeInterop && obj && obj.__esModule) {\n    return obj;\n  }\n  if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") {\n    return {\n      default: obj\n    };\n  }\n  var cache = _getRequireWildcardCache(nodeInterop);\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n  for (var key in obj) {\n    if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n  newObj.default = obj;\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n  return newObj;\n}\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      (0, _defineProperty2.default)(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n  return target;\n}\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n  return function _createSuperInternal() {\n    var Super = (0, _getPrototypeOf2.default)(Derived),\n      result;\n    if (hasNativeReflectConstruct) {\n      var NewTarget = (0, _getPrototypeOf2.default)(this).constructor;\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n    return (0, _possibleConstructorReturn2.default)(this, result);\n  };\n}\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\nvar globalObject = (0, _getGlobal.getGlobal)();\nvar SCROLL_MARGIN = 40;\nvar DRAG_INFO = null;\nvar preventDefault = function preventDefault(e) {\n  return e.preventDefault();\n};\nvar getColumnOrder = function getColumnOrder(props, filter) {\n  var doFilter = function doFilter(c) {\n    return !c.groupColumn && filter ? filter(c) : true;\n  };\n  var order;\n  if (props.computedColumnOrder) {\n    order = props.computedColumnOrder.map(function (id) {\n      return props.columnsMap[id];\n    }).filter(Boolean);\n  } else {\n    order = props.allColumns;\n  }\n  var toId = function toId(c) {\n    return c.id;\n  };\n  order = (order || []).filter(doFilter).map(toId);\n  var lockedStart = props.lockedStartColumns.filter(doFilter).map(toId);\n  var lockedMap = lockedStart.reduce(function (acc, cId) {\n    acc[cId] = true;\n    return acc;\n  }, {});\n  var lockedEnd = props.lockedEndColumns.filter(doFilter).map(toId);\n  lockedEnd.reduce(function (acc, cId) {\n    acc[cId] = true;\n    return acc;\n  }, lockedMap);\n  return [].concat((0, _toConsumableArray2.default)(lockedStart), (0, _toConsumableArray2.default)(order.filter(function (cId) {\n    return !lockedMap[cId];\n  })), (0, _toConsumableArray2.default)(lockedEnd));\n};\nvar getParentsForColumns = function getParentsForColumns(columns, groups, maxDepth) {\n  var parentsForColumns = columns.map(function (col) {\n    var result = [col.id].concat((0, _toConsumableArray2.default)((0, _Header.getParentGroups)(col.group, groups, {\n      includeSelf: true\n    }).map(function (g) {\n      return g.name;\n    })));\n    while (result.length <= maxDepth + 1) {\n      result.splice(0, 0, result[0]);\n    }\n    return result;\n  });\n  return parentsForColumns;\n};\nvar getValidDropPositions = function getValidDropPositions(_ref) {\n  var dragTargetDepth = _ref.dragTargetDepth,\n    dragTargetIndex = _ref.dragTargetIndex,\n    dragTargetLength = _ref.dragTargetLength,\n    parentsForColumns = _ref.parentsForColumns,\n    lockedForColumns = _ref.lockedForColumns,\n    columns = _ref.columns,\n    allowGroupSplitOnReorder = _ref.allowGroupSplitOnReorder;\n  var getGroupsForColumn = function getGroupsForColumn(parents) {\n    parents = parents || [];\n    var initialName = parents[0];\n    var shouldCheck = true;\n    var groups = [];\n    parents.forEach(function (group) {\n      if (!shouldCheck) {\n        groups.push(group);\n        return;\n      }\n      if (shouldCheck && group !== initialName) {\n        shouldCheck = false;\n        groups.push(group);\n        return;\n      }\n      groups.push(null);\n    });\n    return groups;\n  };\n  var getGroupStartFor = function getGroupStartFor(parents, depth, index) {\n    var initialParent = parents[index].slice(-depth - 1)[0];\n    var initialLocked = lockedForColumns[index];\n    var itParents;\n    var currentParent;\n    var currentLocked;\n    do {\n      itParents = parents[index - 1];\n      if (!itParents) {\n        break;\n      }\n      currentParent = itParents.slice(-depth - 1)[0];\n      currentLocked = lockedForColumns[index];\n      if (currentParent !== initialParent || currentLocked !== initialLocked) {\n        break;\n      }\n      index--;\n    } while (index >= 0);\n    return index;\n  };\n  var getGroupEndFor = function getGroupEndFor(parents, depth, index) {\n    var initialParent = parents[index].slice(-depth - 1)[0];\n    var initialLocked = lockedForColumns[index];\n    var itParents;\n    var currentParent;\n    var currentLocked;\n    do {\n      index++;\n      itParents = parents[index];\n      if (!itParents) {\n        break;\n      }\n      currentParent = itParents.slice(-depth - 1)[0];\n      currentLocked = lockedForColumns[index];\n      if (currentParent !== initialParent || currentLocked !== initialLocked) {\n        break;\n      }\n    } while (index < parents.length);\n    return index;\n  };\n  var res = columns.reduce(function (acc, col, index) {\n    if (index > dragTargetIndex && index <= dragTargetIndex + dragTargetLength) {\n      return acc;\n    }\n    acc[index] = true;\n    return acc;\n  }, {});\n  res[columns.length] = true;\n  if (!allowGroupSplitOnReorder) {\n    var dragTargetParentGroups = getGroupsForColumn(parentsForColumns[dragTargetIndex]).filter(function (x) {\n      return x;\n    });\n    var isSingleColumn = !dragTargetParentGroups.length;\n    var usedDepth = isSingleColumn ? 0 : dragTargetDepth;\n    var parentGroupStartIndex = !usedDepth ? 0 : getGroupStartFor(parentsForColumns, usedDepth - 1, dragTargetIndex);\n    var parentGroupEndIndex = !usedDepth ? columns.length : getGroupEndFor(parentsForColumns, usedDepth - 1, dragTargetIndex);\n    var currentGroupEndIndex = getGroupEndFor(parentsForColumns, usedDepth, dragTargetIndex);\n    for (var i = 0; i <= columns.length; i++) {\n      delete res[i];\n    }\n    for (var _i = parentGroupStartIndex; _i < parentGroupEndIndex; _i++) {\n      var itGroupStartIndex = getGroupStartFor(parentsForColumns, usedDepth, _i);\n      var itGroupEndIndex = getGroupEndFor(parentsForColumns, usedDepth, _i);\n      res[itGroupStartIndex] = true;\n      res[itGroupEndIndex] = true;\n    }\n    var groupEndIsLastUnlocked = columns[currentGroupEndIndex] && columns[currentGroupEndIndex].computedLocked === 'end' && columns[currentGroupEndIndex - 1] && columns[currentGroupEndIndex - 1].computedLocked !== 'end';\n    if (!groupEndIsLastUnlocked) {\n      delete res[currentGroupEndIndex];\n    }\n  }\n  return res;\n};\nvar ReorderArrow = function (_React$Component) {\n  (0, _inherits2.default)(ReorderArrow, _React$Component);\n  var _super = _createSuper(ReorderArrow);\n  function ReorderArrow(props) {\n    var _this;\n    (0, _classCallCheck2.default)(this, ReorderArrow);\n    _this = _super.call(this, props);\n    _this.state = {\n      visible: false,\n      bottom: 0,\n      top: 0,\n      left: 0\n    };\n    return _this;\n  }\n  (0, _createClass2.default)(ReorderArrow, [{\n    key: \"set\",\n    value: function set(_ref2) {\n      var bottom = _ref2.bottom,\n        top = _ref2.top,\n        left = _ref2.left,\n        right = _ref2.right,\n        target = _ref2.target;\n      this.setState({\n        target: target,\n        bottom: bottom,\n        left: left,\n        top: top,\n        right: right\n      });\n    }\n  }, {\n    key: \"setVisible\",\n    value: function setVisible(visible) {\n      if (visible != this.state.visible) {\n        this.setState({\n          visible: visible\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var size = this.props.size;\n      var _this$state = this.state,\n        bottom = _this$state.bottom,\n        top = _this$state.top,\n        left = _this$state.left,\n        right = _this$state.right,\n        visible = _this$state.visible,\n        target = _this$state.target;\n      return _react.default.createElement(\"div\", {\n        ref: this.refReorderArrow,\n        style: {\n          position: 'absolute',\n          top: top,\n          left: left,\n          right: right,\n          width: size,\n          height: bottom - top,\n          bottom: bottom,\n          pointerEvents: 'none',\n          opacity: visible ? 1 : 0,\n          display: 'block'\n        },\n        className: \"InovuaReactDataGrid__column-reorder-arrow InovuaReactDataGrid__column-reorder-arrow--direction-\".concat(this.props.rtl ? 'rtl' : 'ltr')\n      }, _react.default.createElement(\"div\", {\n        className: \"InovuaReactDataGrid__column-reorder-arrow-fill InovuaReactDataGrid__column-reorder-arrow-fill--direction-\".concat(this.props.rtl ? 'rtl' : 'ltr', \" InovuaReactDataGrid__column-reorder-arrow-fill--target-\").concat(target || 'none')\n      }), this.props.renderReorderIndicator());\n    }\n  }]);\n  return ReorderArrow;\n}(_react.default.Component);\nReorderArrow.defaultProps = {\n  renderReorderIndicator: function renderReorderIndicator() {}\n};\nvar InovuaDataGridHeaderLayout = function (_Component) {\n  (0, _inherits2.default)(InovuaDataGridHeaderLayout, _Component);\n  var _super2 = _createSuper(InovuaDataGridHeaderLayout);\n  function InovuaDataGridHeaderLayout(props) {\n    var _this2;\n    (0, _classCallCheck2.default)(this, InovuaDataGridHeaderLayout);\n    _this2 = _super2.call(this, props);\n    _this2.state = {\n      draggingProps: null\n    };\n    _this2.refDragGroupItem = function (item) {\n      _this2.dragGroupItem = item;\n    };\n    _this2.refDragCell = function (cell) {\n      _this2.dragCell = cell;\n    };\n    _this2.refDragHeaderGroup = function (item) {\n      _this2.dragHeaderGroup = item;\n    };\n    _this2.groupToolbar = (0, _react.createRef)();\n    _this2.refHeader = function (h) {\n      _this2.headerNode = null;\n      if (h) {\n        _this2.headerNode = h.getDOMNode ? h.getDOMNode() : null;\n        if (!_this2.headerNode) {\n          throw 'Cannot find header node';\n        }\n        if (_isMobile.default) {\n          _this2.headerNode.addEventListener('touchmove', preventDefault);\n        }\n      } else {\n        if (_this2.headerNode && _isMobile.default) {\n          _this2.headerNode.removeEventListener('touchmove', preventDefault);\n        }\n        _this2.headerNode = null;\n      }\n      _this2.header = h;\n    };\n    _this2.headerWrapper = (0, _react.createRef)();\n    _this2.refReorderArrow = function (cmp) {\n      _this2.reorderArrow = cmp;\n    };\n    _this2.headerDomNode = (0, _react.createRef)();\n    _this2.lazyNotifyHeaderScrollLeftMax = (0, _debounce.default)(_this2.notifyHeaderScrollLeftMax, 150);\n    return _this2;\n  }\n  (0, _createClass2.default)(InovuaDataGridHeaderLayout, [{\n    key: \"notifyHeaderScrollLeftMax\",\n    value: function notifyHeaderScrollLeftMax(scrollLeftMax) {\n      if (this.header && this.props.lockedEndColumns) {\n        this.header.notifyScrollLeftMax(scrollLeftMax === undefined ? this.getScrollLeftMax() : scrollLeftMax);\n      }\n    }\n  }, {\n    key: \"onContainerScrollHorizontal\",\n    value: function onContainerScrollHorizontal(scrollLeft, scrollLeftMax) {\n      this.scrollLeft = scrollLeft;\n      if (this.header) {\n        this.header.setScrollLeft(scrollLeft, scrollLeftMax);\n        this.lazyNotifyHeaderScrollLeftMax();\n      }\n    }\n  }, {\n    key: \"setScrollLeft\",\n    value: function setScrollLeft(scrollLeft) {\n      this.props.setScrollLeft(scrollLeft);\n    }\n  }, {\n    key: \"getScrollLeft\",\n    value: function getScrollLeft() {\n      return this.scrollLeft || 0;\n    }\n  }, {\n    key: \"getScrollLeftMax\",\n    value: function getScrollLeftMax() {\n      return this.props.getScrollLeftMax();\n    }\n  }, {\n    key: \"setColumnRenderStartIndex\",\n    value: function setColumnRenderStartIndex(columnRenderStartIndex) {\n      if (this.header) {\n        this.header.setColumnRenderStartIndex(columnRenderStartIndex);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var className = (0, _join.default)('InovuaReactDataGrid__header-layout', this.props.stickyHeader && 'InovuaReactDataGrid__header-layout__sticky-header');\n      return _react.default.createElement(\"div\", {\n        ref: this.headerDomNode,\n        className: className\n      }, this.renderGroupToolbar(), this.renderHeaderWrapper(), this.renderDragCell(), this.renderDragGroupItem(), this.renderDragHeaderGroup(), this.renderReorderIndicator());\n    }\n  }, {\n    key: \"renderGroupToolbar\",\n    value: function renderGroupToolbar() {\n      var _this$props = this.props,\n        columnsMap = _this$props.columnsMap,\n        onGroupByChange = _this$props.onGroupByChange,\n        onHeaderSortClick = _this$props.onHeaderSortClick,\n        renderGroupItem = _this$props.renderGroupItem,\n        renderSortTool = _this$props.renderSortTool,\n        renderGroupToolbar = _this$props.renderGroupToolbar,\n        groupBy = _this$props.computedGroupBy,\n        disableGroupByToolbar = _this$props.disableGroupByToolbar,\n        i18n = _this$props.i18n,\n        rtl = _this$props.rtl,\n        theme = _this$props.theme;\n      if (!groupBy || !renderGroupToolbar) {\n        return null;\n      }\n      return renderGroupToolbar({\n        columnsMap: columnsMap,\n        groupBy: groupBy,\n        rtl: rtl,\n        theme: theme,\n        renderSortTool: renderSortTool,\n        onGroupByChange: onGroupByChange,\n        disableGroupByToolbar: disableGroupByToolbar,\n        renderGroupItem: renderGroupItem,\n        headerGroupPlaceholderText: i18n('dragHeaderToGroup'),\n        onItemMouseDown: this.onGroupItemMouseDown,\n        onSortClick: onHeaderSortClick,\n        ref: this.groupToolbar\n      });\n    }\n  }, {\n    key: \"renderHeaderWrapper\",\n    value: function renderHeaderWrapper() {\n      var props = this.props;\n      var computedShowHeader = props.computedShowHeader;\n      if (!computedShowHeader) {\n        return null;\n      }\n      var scrollLeft = (this.scrollLeft !== undefined ? this.scrollLeft : props.scrollLeft) || 0;\n      var groupBy = this.props.computedGroupBy && this.props.computedGroupBy.length ? this.props.computedGroupBy : null;\n      return _react.default.createElement(_HeaderWrapper.default, _objectSpread(_objectSpread({}, props), {}, {\n        groupBy: groupBy,\n        onHeaderGroupMouseDown: this.onHeaderGroupMouseDown,\n        onHeaderCellMouseDown: this.onHeaderCellMouseDown,\n        onHeaderCellTouchStart: this.onHeaderCellTouchStart,\n        ref: this.headerWrapper,\n        refHeader: this.refHeader,\n        scrollLeft: scrollLeft,\n        setScrollLeft: this.setScrollLeft\n      }));\n    }\n  }, {\n    key: \"renderDragCell\",\n    value: function renderDragCell() {\n      return _react.default.createElement(_DragCell.default, {\n        ref: this.refDragCell\n      });\n    }\n  }, {\n    key: \"renderDragGroupItem\",\n    value: function renderDragGroupItem() {\n      if (!this.props.renderDragGroupItem) {\n        return null;\n      }\n      return this.props.renderDragGroupItem(this.refDragGroupItem);\n    }\n  }, {\n    key: \"renderDragHeaderGroup\",\n    value: function renderDragHeaderGroup() {\n      if (!this.props.computedGroups) {\n        return;\n      }\n      return _react.default.createElement(_DragHeaderGroup.default, {\n        ref: this.refDragHeaderGroup\n      });\n    }\n  }, {\n    key: \"onGroupItemMouseDown\",\n    value: function onGroupItemMouseDown(column, index, event) {\n      this.onHeaderCellMouseDown(column, event, {\n        dragTarget: 'group',\n        dragIndex: index\n      });\n    }\n  }, {\n    key: \"getCellDOMNodeAt\",\n    value: function getCellDOMNodeAt(index) {\n      return this.header.getCellDOMNodeAt(index);\n    }\n  }, {\n    key: \"getHeader\",\n    value: function getHeader() {\n      return this.header;\n    }\n  }, {\n    key: \"onHeaderGroupMouseDown\",\n    value: function onHeaderGroupMouseDown(event, headerGroupProps, headerGroup) {\n      if (event.ctrlKey || event.metaKey) {\n        return;\n      }\n      if (this._dragIndex !== undefined) {\n        return;\n      }\n      if (headerGroupProps.group && headerGroupProps.group.draggable === false) {\n        return;\n      }\n      var dragTargetNode = headerGroup.domRef ? headerGroup.domRef.current : null;\n      var shouldStop = (0, _toConsumableArray2.default)(dragTargetNode.querySelectorAll('.InovuaReactDataGrid__column-header__filter-wrapper')).reduce(function (shouldStop, filterWrapperNode) {\n        if ((0, _contains.default)(filterWrapperNode, event.target) || filterWrapperNode === event.target) {\n          return true;\n        }\n        return shouldStop;\n      }, false);\n      if (shouldStop) {\n        return;\n      }\n      var groupColumns = headerGroupProps.columns.reduce(function (acc, colId) {\n        acc[colId] = true;\n        return acc;\n      }, {});\n      this.groupColumns = groupColumns;\n      var dragBoxes = this.header.getGroupsAndCells().filter(function (item) {\n        if (item === headerGroup) {\n          return true;\n        }\n        if (item.props.id in groupColumns) {\n          return false;\n        }\n        return !item.props.isHeaderGroup;\n      });\n      var dragIndex = dragBoxes.indexOf(headerGroup);\n      var dragTargetIndex = this.props.columnsMap[headerGroup.props.columns[0]].computedVisibleIndex;\n      var dragTargetDepth = headerGroup.props.depth;\n      var dragTargetLength = headerGroup.props.columns.length;\n      var parentsForColumns = getParentsForColumns(this.props.visibleColumns, this.props.computedGroupsMap, this.props.computedGroupsDepth);\n      this.maybeDragMouseDown(event, {\n        dragTarget: 'headergroup',\n        dragTargetIndex: dragTargetIndex,\n        dragTargetDepth: dragTargetDepth,\n        dragTargetLength: dragTargetLength,\n        parentsForColumns: parentsForColumns,\n        dragTargetNode: dragTargetNode,\n        dragIndex: dragIndex,\n        dragBoxes: dragBoxes,\n        allowTargetChange: false,\n        ranges: (0, _getRangesForBoxes.default)(dragBoxes, function (i) {\n          return i;\n        })\n      });\n    }\n  }, {\n    key: \"onHeaderCellTouchStart\",\n    value: function onHeaderCellTouchStart() {\n      return this.onHeaderCellMouseDown.apply(this, arguments);\n    }\n  }, {\n    key: \"onHeaderCellMouseDown\",\n    value: function onHeaderCellMouseDown(_ref3, event) {\n      var visibleIndex = _ref3.computedVisibleIndex;\n      var _ref4 = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {\n          dragTarget: 'header'\n        },\n        _ref4$dragTarget = _ref4.dragTarget,\n        dragTarget = _ref4$dragTarget === void 0 ? 'header' : _ref4$dragTarget,\n        dragIndex = _ref4.dragIndex;\n      if (this.props.reorderColumns === false) {\n        return;\n      }\n      if ((0, _isFocusable.default)(event.target)) {\n        return;\n      }\n      if (event.nativeEvent.which == 3 || event.metaKey || event.ctrlKey) {\n        return;\n      }\n      if (dragIndex === undefined) {\n        dragIndex = visibleIndex;\n      }\n      if (event.ctrlKey || event.metaKey) {\n        return;\n      }\n      var allowTargetChange = undefined;\n      var dragColumn;\n      var dragTargetNode = this.getCellDOMNodeAt(visibleIndex);\n      if (dragTarget == 'header') {\n        dragColumn = this.props.visibleColumns[visibleIndex];\n        if (!dragColumn || dragColumn.groupColumn || dragColumn.draggable === false) {\n          event.stopPropagation();\n          return;\n        }\n        if (this.props.computedGroupBy) {\n          if (this.props.computedGroupBy.indexOf(dragColumn.id) != -1 || this.props.computedGroupBy.indexOf(dragColumn.name) != -1) {\n            allowTargetChange = false;\n          }\n        }\n        if (dragColumn.draggable === false) {\n          return;\n        }\n        if (dragColumn.groupBy === false) {\n          allowTargetChange = false;\n        }\n      }\n      var dragTargetIndex = dragIndex;\n      var dragTargetDepth = dragColumn && dragColumn.group && this.props.computedGroupsMap && this.props.computedGroupsMap[dragColumn.group] ? this.props.computedGroupsMap[dragColumn.group].computedDepth + 1 : this.props.computedGroupsDepth + 1;\n      var parentsForColumns = getParentsForColumns(this.props.visibleColumns, this.props.computedGroupsMap, this.props.computedGroupsDepth);\n      this.maybeDragMouseDown(event, {\n        dragTarget: dragTarget,\n        dragIndex: dragIndex,\n        dragTargetNode: dragTargetNode,\n        parentsForColumns: parentsForColumns,\n        dragTargetIndex: dragTargetIndex,\n        dragTargetDepth: dragTargetDepth,\n        dragTargetLength: 1,\n        allowTargetChange: allowTargetChange\n      });\n    }\n  }, {\n    key: \"maybeDragMouseDown\",\n    value: function maybeDragMouseDown(event, _ref5) {\n      var _this3 = this;\n      var dragTarget = _ref5.dragTarget,\n        dragIndex = _ref5.dragIndex,\n        allowTargetChange = _ref5.allowTargetChange,\n        ranges = _ref5.ranges,\n        parentsForColumns = _ref5.parentsForColumns,\n        dragTargetIndex = _ref5.dragTargetIndex,\n        dragTargetDepth = _ref5.dragTargetDepth,\n        dragTargetNode = _ref5.dragTargetNode,\n        dragTargetLength = _ref5.dragTargetLength;\n      if (this.props.computedPivot) {\n        return;\n      }\n      this._dragIndex = dragIndex;\n      var _removeListeners;\n      var mouseMoveEventCount = 0;\n      var didSetupDrag = false;\n      var cleanup = function cleanup() {\n        delete _this3._dragIndex;\n        if (_removeListeners) {\n          _removeListeners();\n        }\n      };\n      var onMouseUp = cleanup;\n      var onMouseMove = function onMouseMove(event) {\n        if (didSetupDrag) {\n          return;\n        }\n        mouseMoveEventCount++;\n        if (mouseMoveEventCount > 1) {\n          didSetupDrag = true;\n          _removeListeners();\n          _this3.setupDrag({\n            dragTarget: dragTarget,\n            dragIndex: dragIndex,\n            allowTargetChange: allowTargetChange,\n            ranges: ranges,\n            parentsForColumns: parentsForColumns,\n            dragTargetIndex: dragTargetIndex,\n            dragTargetDepth: dragTargetDepth,\n            dragTargetLength: dragTargetLength,\n            dragTargetNode: dragTargetNode\n          }, event);\n        }\n      };\n      var mouseup = _isMobile.default ? 'touchend' : 'mouseup';\n      var mousemove = _isMobile.default ? 'touchmove' : 'mousemove';\n      _removeListeners = function removeListeners() {\n        _removeListeners = null;\n        globalObject.removeEventListener(mouseup, onMouseUp, false);\n        globalObject.removeEventListener(mousemove, onMouseMove, false);\n      };\n      if (_isMobile.default) {\n        setTimeout(function () {\n          onMouseUp();\n        }, 350);\n      }\n      globalObject.addEventListener(mouseup, onMouseUp, false);\n      globalObject.addEventListener(mousemove, onMouseMove, false);\n    }\n  }, {\n    key: \"renderReorderIndicator\",\n    value: function renderReorderIndicator() {\n      var size = this.props.reorderProxySize;\n      return _react.default.createElement(ReorderArrow, {\n        ref: this.refReorderArrow,\n        size: size,\n        rtl: this.props.rtl,\n        renderReorderIndicator: this.props.renderReorderIndicator\n      });\n    }\n  }, {\n    key: \"setReorderArrowAt\",\n    value: function setReorderArrowAt(index, ranges, target) {\n      var offset = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n      var visible = arguments.length > 4 ? arguments[4] : undefined;\n      visible = visible !== undefined ? visible : index != DRAG_INFO.dragIndex || target != DRAG_INFO.dragTarget;\n      if (offset) {\n        visible = true;\n      }\n      var rtl = this.props.rtl;\n      this.reorderArrow.setVisible(visible);\n      var last = index == ranges.length;\n      var box = ranges[index];\n      var _DRAG_INFO = DRAG_INFO,\n        headerRegion = _DRAG_INFO.headerRegion,\n        initialScrollLeft = _DRAG_INFO.initialScrollLeft;\n      if (!box && last) {\n        var _box;\n        var lastBox = ranges[ranges.length - 1] || {\n          left: headerRegion.left,\n          right: headerRegion.left\n        };\n        box = (_box = {}, (0, _defineProperty2.default)(_box, rtl ? 'right' : 'left', rtl ? lastBox.left : lastBox.right), (0, _defineProperty2.default)(_box, \"computedLocked\", lastBox.computedLocked), _box);\n      }\n      box = box || (rtl ? {\n        right: 0\n      } : {\n        left: 0\n      });\n      var boxPos = rtl ? box.right : box.left;\n      if (rtl && this.props.nativeScroll && this.props.scrollbars.vertical) {\n        boxPos -= (0, _getScrollbarWidth.default)();\n      }\n      return this.setReorderArrowPosition(rtl ? -boxPos + headerRegion.right - offset : boxPos - headerRegion.left + offset, target);\n    }\n  }, {\n    key: \"setReorderArrowPosition\",\n    value: function setReorderArrowPosition(pos, target) {\n      var rtl = this.props.rtl;\n      this.reorderArrowPosition = this.reorderArrowPosition || {};\n      (0, _assignDefined2.default)(this.reorderArrowPosition, (0, _defineProperty2.default)({}, rtl ? 'right' : 'left', pos));\n      this.reorderArrow.set(_objectSpread((0, _defineProperty2.default)({\n        target: target\n      }, rtl ? 'right' : 'left', rtl ? this.reorderArrowPosition.right : this.reorderArrowPosition.left), DRAG_INFO.reorderProxyPosition[target]));\n      return this;\n    }\n  }, {\n    key: \"setReorderArrowVisible\",\n    value: function setReorderArrowVisible(visible) {\n      this.reorderArrow.setVisible(visible);\n      return this;\n    }\n  }, {\n    key: \"getGroupToolbar\",\n    value: function getGroupToolbar() {\n      return this.groupToolbar.current;\n    }\n  }, {\n    key: \"getGroupByItems\",\n    value: function getGroupByItems() {\n      if (!this.groupToolbar.current) {\n        return null;\n      }\n      return this.groupToolbar.current.getSortedItemsInfo();\n    }\n  }, {\n    key: \"getHeaderCells\",\n    value: function getHeaderCells() {\n      return this.header.getCells();\n    }\n  }, {\n    key: \"getBoxesFor\",\n    value: function getBoxesFor(target) {\n      if (target == 'header') {\n        return this.header.getCells();\n      }\n      if (target == 'group' && this.groupToolbar.current) {\n        return this.groupToolbar.current.getCells();\n      }\n      if (target == 'headergroup') {\n        return this.header.getGroupsAndCells();\n      }\n      return [];\n    }\n  }, {\n    key: \"getDragBoxInstance\",\n    value: function getDragBoxInstance(dragIndex, dragTarget, dragTargetDepth, dragTargetLength) {\n      if (dragTarget === 'group') {\n        return this.getGroupToolbar() && this.getGroupToolbar().getCells()[dragIndex];\n      }\n      var dragCell = this.getHeaderCells()[dragIndex];\n      var dragBox = dragCell;\n      if (dragTargetLength) {\n        var cellProps = dragCell.getProps();\n        while (cellProps.depth > dragTargetDepth) {\n          if (cellProps.parent) {\n            dragBox = cellProps.parent;\n            cellProps = dragBox.props;\n          } else {\n            break;\n          }\n        }\n      }\n      return dragBox;\n    }\n  }, {\n    key: \"setupDrag\",\n    value: function setupDrag(_ref6, event) {\n      var _DRAG_INFO2;\n      var dragTarget = _ref6.dragTarget,\n        dragIndex = _ref6.dragIndex,\n        _ref6$allowTargetChan = _ref6.allowTargetChange,\n        allowTargetChange = _ref6$allowTargetChan === void 0 ? true : _ref6$allowTargetChan,\n        parentsForColumns = _ref6.parentsForColumns,\n        dragTargetIndex = _ref6.dragTargetIndex,\n        dragTargetDepth = _ref6.dragTargetDepth,\n        dragTargetLength = _ref6.dragTargetLength;\n      var columns = this.props.visibleColumns;\n      var rtl = this.props.rtl;\n      var headerRegion = _region.default.from(this.headerDomNode.current);\n      var dragBox = this.getDragBoxInstance(dragIndex, dragTarget, dragTargetDepth, dragTargetLength);\n      var initialScrollLeft = this.getScrollLeft();\n      var dragBoxProps = dragBox.getProps ? dragBox.getProps() : dragBox.props;\n      var rtlOffset = Math.max(this.props.totalComputedWidth - this.props.size.width, 0);\n      var columnRanges = (0, _getRangesForColumns.default)(columns, {\n        rtl: rtl,\n        rtlOffset: rtlOffset,\n        initialOffset: rtl ? headerRegion.right : headerRegion.left,\n        headerRegion: headerRegion,\n        initialScrollLeft: initialScrollLeft,\n        availableWidth: Math.min(this.props.availableWidth, this.props.totalComputedWidth),\n        totalLockedEndWidth: this.props.totalLockedEndWidth\n      });\n      var groupToolbarCells = this.getGroupToolbar() && this.getGroupToolbar().getCells();\n      var groupByRanges = this.props.computedGroupBy && this.props.computedGroupBy.length ? (0, _getRangesForBoxes.default)(groupToolbarCells) || [] : [];\n      var dragProxy = dragTarget == 'header' ? this.dragCell : dragTarget == 'group' ? this.dragGroupItem : this.dragHeaderGroup;\n      var dragColumn = dragTarget === 'group' ? dragBoxProps.column : columns[dragIndex];\n      var headerDragColumn = dragTarget == 'header' ? dragColumn : null;\n      var columnId = dragTarget == 'header' ? headerDragColumn.id : dragTarget == 'group' ? dragColumn.id : null;\n      var dragBoxNode = dragBox.getDOMNode ? dragBox.getDOMNode() : null;\n      var dragBoxInitialRegion = dragBox && dragBox.getProxyRegion ? dragBox.getProxyRegion() : _region.default.from(dragBoxNode);\n      if (_DragCell.MAX_WIDTH && dragBoxInitialRegion.getWidth() > _DragCell.MAX_WIDTH) {\n        dragBoxInitialRegion.setWidth(_DragCell.MAX_WIDTH);\n      }\n      if (_region.default.from(dragBoxNode).getWidth() > headerRegion.getWidth() / 2) {\n        if (rtl) {\n          dragBoxInitialRegion.shift({\n            right: event.pageX - dragBoxInitialRegion.right - this.props.columnReorderScrollByAmount\n          });\n        } else {\n          dragBoxInitialRegion.shift({\n            left: event.pageX - dragBoxInitialRegion.left - this.props.columnReorderScrollByAmount\n          });\n        }\n      }\n      var dragBoxOffsets = (0, _defineProperty2.default)({\n        top: headerRegion.top\n      }, rtl ? 'right' : 'left', rtl ? headerRegion.right : headerRegion.left);\n      var extendedDragBoxProps = _objectSpread({}, dragBoxProps);\n      if (this.props.renderColumnReorderProxy) {\n        Object.assign(extendedDragBoxProps, {\n          renderColumnReorderProxy: this.props.renderColumnReorderProxy\n        });\n      }\n      dragProxy.setProps(extendedDragBoxProps);\n      var dragProxyPosition = (0, _defineProperty2.default)({\n        top: dragBoxInitialRegion.top - dragBoxOffsets.top\n      }, rtl ? 'right' : 'left', rtl ? dragBoxOffsets.right - dragBoxInitialRegion.right : dragBoxInitialRegion.left - dragBoxOffsets.left);\n      dragProxy.setHeight(dragBoxInitialRegion.height);\n      dragProxy.setWidth(dragBoxInitialRegion.width);\n      dragProxy.setTop(dragProxyPosition.top);\n      if (rtl) {\n        dragProxy.setRight(dragProxyPosition.right);\n      } else {\n        dragProxy.setLeft(dragProxyPosition.left);\n      }\n      var maxHeaderIndex = columns.length - (0, _getUndraggableSuccessiveCount.default)((0, _toConsumableArray2.default)(columns).reverse());\n      var minHeaderIndex = (0, _getUndraggableSuccessiveCount.default)(columns);\n      var validDropPositions = columns.reduce(function (acc, col, i) {\n        acc[i] = true;\n        return acc;\n      }, {});\n      validDropPositions[columns.length] = true;\n      if (this.props.groups && this.props.groups.length && !this.props.allowGroupSplitOnReorder) {\n        validDropPositions = getValidDropPositions({\n          dragTargetDepth: dragTargetDepth,\n          dragTargetIndex: dragTargetIndex,\n          dragTargetLength: dragTargetLength,\n          parentsForColumns: parentsForColumns,\n          lockedForColumns: columns.map(function (c) {\n            return c.computedLocked;\n          }),\n          columns: columns,\n          allowGroupSplitOnReorder: this.props.allowGroupSplitOnReorder,\n          maxDepth: this.props.computedGroupsDepth + 1\n        });\n      }\n      if (validDropPositions && !validDropPositions[dragIndex] && dragTarget != 'group') {\n        validDropPositions[dragIndex] = true;\n      }\n      var wrapperNode = this.headerDomNode ? this.headerDomNode.current : null;\n      var filterRowHeight = 0;\n      if (this.props.computedFilterable) {\n        var filterWrapperNode = wrapperNode.querySelector('.InovuaReactDataGrid__column-header__filter-wrapper');\n        if (filterWrapperNode) {\n          filterRowHeight = filterWrapperNode.offsetHeight;\n        }\n      }\n      DRAG_INFO = (_DRAG_INFO2 = {\n        allowTargetChange: allowTargetChange,\n        columnId: columnId,\n        headerRegion: headerRegion,\n        headerDragColumn: headerDragColumn,\n        minHeaderIndex: minHeaderIndex,\n        maxHeaderIndex: maxHeaderIndex,\n        dragColumn: dragColumn,\n        dragColumnsIds: dragTarget == 'headergroup' ? dragBox.props.columns : null,\n        dragBox: dragBox,\n        dragBoxInitialRegion: dragBoxInitialRegion,\n        dragBoxRegion: dragBoxInitialRegion.clone(),\n        dragBoxProps: dragBoxProps,\n        dragBoxOffsets: dragBoxOffsets,\n        dragProxy: dragProxy,\n        dragProxyInitialPosition: dragProxyPosition,\n        dragTarget: dragTarget,\n        dropTarget: dragTarget,\n        dragIndex: dragIndex,\n        columnRanges: columnRanges,\n        groupByRanges: groupByRanges,\n        parentsForColumns: parentsForColumns,\n        dragTargetIndex: dragTargetIndex,\n        dragTargetDepth: dragTargetDepth,\n        dragTargetLength: dragTargetLength,\n        scrollLeftMax: this.props.getScrollLeftMax(),\n        initialScrollLeft: initialScrollLeft\n      }, (0, _defineProperty2.default)(_DRAG_INFO2, \"headerRegion\", headerRegion), (0, _defineProperty2.default)(_DRAG_INFO2, \"validDropPositions\", validDropPositions), _DRAG_INFO2);\n      var groupToolbarNode = this.groupToolbar.current ? this.groupToolbar.current.domRef ? this.groupToolbar.current.domRef.current : null : null;\n      var headerGroupTargetNode = wrapperNode;\n      var groupTargetNode = groupToolbarNode || this.headerDomNode.current;\n      var groupComputedStyle = getComputedStyle(groupTargetNode);\n      DRAG_INFO.reorderProxyPosition = {\n        group: {\n          top: parseInt(groupComputedStyle.paddingTop),\n          bottom: groupTargetNode.offsetHeight - parseInt(groupComputedStyle.paddingBottom)\n        },\n        header: {\n          top: this.props.computedGroupBy ? groupToolbarNode ? groupTargetNode.offsetHeight : this.headerDomNode.current.offsetTop : 0,\n          bottom: headerGroupTargetNode.offsetHeight - filterRowHeight\n        },\n        headergroup: {\n          top: this.props.computedGroupBy ? groupToolbarNode ? groupTargetNode.offsetHeight : this.headerDomNode.current.offsetTop : 0,\n          bottom: headerGroupTargetNode.offsetHeight - filterRowHeight\n        }\n      };\n      this.setReorderArrowAt(dragIndex, dragTarget === 'group' ? groupByRanges : columnRanges, dragTarget);\n      this.setReorderArrowPosition(undefined, dragTarget);\n      dragProxy.setDragging(true);\n      this.props.coverHandleRef.current.setActive(true);\n      this.props.coverHandleRef.current.setCursor('grabbing');\n      var headerNode = this.headerDomNode ? this.headerDomNode.current : null;\n      (0, _setupColumnDrag.default)({\n        constrainTo: this.props.constrainReorder ? _region.default.from(headerNode.parentNode) : undefined,\n        region: dragBoxInitialRegion\n      }, {\n        onDrag: this.onHeaderCellDrag,\n        onDrop: this.onHeaderCellDrop\n      }, event);\n    }\n  }, {\n    key: \"onHeaderCellDrop\",\n    value: function onHeaderCellDrop() {\n      var _this4 = this;\n      this.props.coverHandleRef.current.setActive(false);\n      delete this._dragIndex;\n      var dropIndex = this.dropIndex,\n        props = this.props;\n      if (dropIndex === undefined || !DRAG_INFO) {\n        if (DRAG_INFO) {\n          DRAG_INFO.dragProxy.setDragging(false);\n        }\n        this.setReorderArrowVisible(false);\n        DRAG_INFO = null;\n        return;\n      }\n      var _DRAG_INFO3 = DRAG_INFO,\n        dragColumn = _DRAG_INFO3.dragColumn,\n        columnId = _DRAG_INFO3.columnId,\n        dragColumnsIds = _DRAG_INFO3.dragColumnsIds,\n        dragTarget = _DRAG_INFO3.dragTarget,\n        dropTarget = _DRAG_INFO3.dropTarget,\n        dragProxy = _DRAG_INFO3.dragProxy,\n        newLocked = _DRAG_INFO3.newLocked;\n      var _DRAG_INFO4 = DRAG_INFO,\n        dragIndex = _DRAG_INFO4.dragIndex;\n      DRAG_INFO = null;\n      this.setReorderArrowVisible(false);\n      dragProxy.setDragging(false);\n      var columns = this.props.visibleColumns;\n      var currentLocked = columns[dragIndex].computedLocked;\n      if (dropIndex == dragIndex && newLocked === currentLocked && dragTarget == dropTarget) {\n        return;\n      }\n      if (this.props.virtualizeColumns) {\n        setTimeout(function () {\n          _this4.header.updateColumns();\n        }, 10);\n      }\n      if (dragTarget == 'headergroup') {\n        if (dropIndex == dragIndex && dragTarget == dropTarget && newLocked === currentLocked) {\n          return;\n        }\n        if (columns[dropIndex]) {\n          this.moveColumnsBeforeIndex(dragColumnsIds, columns[dropIndex].computedVisibleIndex, newLocked);\n        } else if (dropIndex == columns.length) {\n          var col = columns[columns.length - 1];\n          if (col) {\n            this.moveColumnsBeforeIndex(dragColumnsIds, col.computedVisibleIndex + 1, newLocked);\n          }\n        }\n        return;\n      }\n      var visibleColumns = props.visibleColumns,\n        groupBy = props.computedGroupBy;\n      if (dropTarget == dragTarget) {\n        if (dragTarget == 'group') {\n          this.setGroupBy((0, _moveXBeforeY.default)(groupBy, dragIndex, dropIndex));\n        }\n        if (dragTarget == 'header') {\n          this.moveColumnsBeforeIndex([columnId], dropIndex, newLocked);\n        }\n      }\n      if (dragTarget == 'header' && dropTarget == 'group') {\n        var groupByColumn = visibleColumns[dragIndex];\n        var newGroupBy = [].concat(groupBy);\n        newGroupBy.splice(dropIndex, 0, groupByColumn.id);\n        this.setGroupBy(newGroupBy);\n      }\n      if (dragTarget == 'group' && dropTarget == 'header') {\n        this.ungroupColumnToIndex(columnId, dropIndex);\n      }\n    }\n  }, {\n    key: \"ungroupColumnToIndex\",\n    value: function ungroupColumnToIndex(columnId, dropIndex) {\n      var props = this.props;\n      var allColumns = props.allColumns,\n        visibleColumns = props.visibleColumns;\n      var dragColumn = allColumns.filter(function (c) {\n        return c.id === columnId;\n      })[0];\n      var newGroupBy = [].concat(this.props.computedGroupBy).filter(function (g) {\n        return g != columnId;\n      });\n      var columnAtDropIndex = visibleColumns[dropIndex];\n      if (columnAtDropIndex && columnAtDropIndex.id === columnId) {\n        this.setGroupBy(newGroupBy);\n        return;\n      }\n      var order = getColumnOrder(props, function (c) {\n        return c.id !== columnId;\n      });\n      var insertIndex = columnAtDropIndex ? order.indexOf(columnAtDropIndex.id) : order.length;\n      order.splice(insertIndex, 0, columnId);\n      var columnAtDropIndexOrLast = columnAtDropIndex || visibleColumns[visibleColumns.length - 1];\n      if (columnAtDropIndexOrLast.computedLocked != dragColumn.computedLocked) {\n        this.props.setColumnLocked(columnId, columnAtDropIndexOrLast.computedLocked);\n      }\n      this.setGroupBy(newGroupBy);\n      this.setColumnOrder(order);\n    }\n  }, {\n    key: \"moveColumnsBeforeIndex\",\n    value: function moveColumnsBeforeIndex(columnsIds, dropIndex, newLocked) {\n      var _this5 = this;\n      var props = this.props;\n      var visibleColumns = props.visibleColumns,\n        columnVisibilityMap = props.columnVisibilityMap,\n        allowGroupSplitOnReorder = props.allowGroupSplitOnReorder;\n      var columnOrder = getColumnOrder(props);\n      var columns = visibleColumns.filter(function (col) {\n        return columnsIds.indexOf(col.id) != -1;\n      });\n      var dragColumnsIndexesInAllColumns = columnsIds.map(function (columnId) {\n        return columnOrder.indexOf(columnId);\n      });\n      var dropBeforeIndexInAllColumns = visibleColumns[dropIndex] ? columnOrder.indexOf(visibleColumns[dropIndex].id) : columnOrder.length;\n      var firstDragIndex = dragColumnsIndexesInAllColumns[0];\n      if (!allowGroupSplitOnReorder && firstDragIndex < dropBeforeIndexInAllColumns) {\n        while (true) {\n          var columnRightBefore = columnOrder[dropBeforeIndexInAllColumns - 1];\n          if (columnRightBefore && columnVisibilityMap[columnRightBefore] === false) {\n            dropBeforeIndexInAllColumns--;\n            continue;\n          }\n          break;\n        }\n      }\n      var targetColumn = visibleColumns[dropIndex] || visibleColumns[visibleColumns.length - 1];\n      columns.forEach(function (col) {\n        if (newLocked != col.computedLocked) {\n          _this5.props.setColumnLocked(col.id, newLocked);\n        }\n      });\n      var newColumnOrder = (0, _moveXBeforeY.default)(columnOrder, dragColumnsIndexesInAllColumns, dropBeforeIndexInAllColumns);\n      this.setColumnOrder(newColumnOrder);\n    }\n  }, {\n    key: \"onHeaderCellDrag\",\n    value: function onHeaderCellDrag(_ref7) {\n      var diffLeft = _ref7.left,\n        diffTop = _ref7.top;\n      if (!DRAG_INFO) {\n        return;\n      }\n      var _DRAG_INFO5 = DRAG_INFO,\n        allowTargetChange = _DRAG_INFO5.allowTargetChange,\n        dragTarget = _DRAG_INFO5.dragTarget,\n        dragIndex = _DRAG_INFO5.dragIndex,\n        dragProxy = _DRAG_INFO5.dragProxy,\n        dragColumn = _DRAG_INFO5.dragColumn,\n        dragBoxInitialRegion = _DRAG_INFO5.dragBoxInitialRegion,\n        dragBoxOffsets = _DRAG_INFO5.dragBoxOffsets,\n        dragBoxRegion = _DRAG_INFO5.dragBoxRegion,\n        groupByRanges = _DRAG_INFO5.groupByRanges,\n        theRanges = _DRAG_INFO5.columnRanges,\n        headerRegion = _DRAG_INFO5.headerRegion,\n        scrollLeftMax = _DRAG_INFO5.scrollLeftMax,\n        initialScrollLeft = _DRAG_INFO5.initialScrollLeft,\n        validDropPositions = _DRAG_INFO5.validDropPositions;\n      dragBoxRegion.set({\n        left: dragBoxInitialRegion.left,\n        top: dragBoxInitialRegion.top,\n        bottom: dragBoxInitialRegion.bottom,\n        right: dragBoxInitialRegion.right\n      });\n      var _DRAG_INFO6 = DRAG_INFO,\n        dropTarget = _DRAG_INFO6.dropTarget;\n      var _this$props2 = this.props,\n        columnReorderScrollByAmount = _this$props2.columnReorderScrollByAmount,\n        rtl = _this$props2.rtl;\n      var scrollLeft = this.getScrollLeft();\n      var scrollDiff = scrollLeft - initialScrollLeft;\n      var initialDiffLeft = diffLeft;\n      dragBoxRegion.shift({\n        top: diffTop,\n        left: diffLeft\n      });\n      diffLeft += scrollDiff;\n      var minScrollLeft = Math.max(headerRegion.left, 0);\n      var maxScrollRight = headerRegion.right;\n      var groupToolbarNode = this.groupToolbar && this.groupToolbar.current && this.groupToolbar.current.domRef ? this.groupToolbar.current.domRef.current : null;\n      if (this.groupToolbar.current && allowTargetChange) {\n        var groupToolbarRegion = _region.default.from(groupToolbarNode);\n        if (dragBoxRegion.top + dragBoxRegion.height / 2 < groupToolbarRegion.bottom) {\n          if (dropTarget !== 'group' && dragColumn.groupBy !== false) {\n            dropTarget = DRAG_INFO.dropTarget = 'group';\n          }\n        } else {\n          if (dropTarget != 'header') {\n            dropTarget = DRAG_INFO.dropTarget = 'header';\n          }\n        }\n      }\n      var scrollAdjust = 0;\n      var dragProxyAdjust = 0;\n      var dragComputedLocked = this.props.visibleColumns[dragIndex].computedLocked;\n      if (dropTarget == 'header' || dropTarget == 'headergroup') {\n        if (dragBoxInitialRegion.left + initialDiffLeft - this.props.totalLockedStartWidth < minScrollLeft + SCROLL_MARGIN && initialDiffLeft < 0) {\n          scrollAdjust = -columnReorderScrollByAmount;\n        } else if (dragBoxInitialRegion.right + initialDiffLeft > maxScrollRight - SCROLL_MARGIN - this.props.totalLockedEndWidth && initialDiffLeft > 0) {\n          scrollAdjust = columnReorderScrollByAmount;\n        }\n        if (scrollAdjust) {\n          if (scrollLeft + scrollAdjust < 0) {\n            scrollAdjust = -scrollLeft;\n          }\n          if (scrollLeft + scrollAdjust > scrollLeftMax) {\n            scrollAdjust = scrollLeftMax - scrollLeft;\n          }\n          if (scrollAdjust) {\n            this.setScrollLeft(scrollLeft + scrollAdjust);\n            dragProxyAdjust = scrollAdjust;\n          }\n        }\n      }\n      if (rtl) {\n        dragProxy.setRight(dragBoxOffsets.right + -initialDiffLeft - dragBoxInitialRegion.right - dragProxyAdjust);\n      } else {\n        dragProxy.setLeft(dragBoxInitialRegion.left + initialDiffLeft - dragBoxOffsets.left - dragProxyAdjust);\n      }\n      dragProxy.setTop(dragBoxRegion.top - dragBoxOffsets.top);\n      var dir = dropTarget == 'group' && dragTarget == 'group' ? initialDiffLeft < 0 ? -1 : 1 : dragTarget != dropTarget || diffLeft < 0 ? -1 : 1;\n      if (dragComputedLocked) {\n        dir = initialDiffLeft < 0 ? -1 : 1;\n      }\n      if (rtl) {\n        dir *= -1;\n      }\n      var mapRange = function mapRange(r) {\n        if (!r.computedLocked) {\n          return _objectSpread(_objectSpread({}, r), {}, {\n            left: r.left - scrollDiff,\n            right: r.right - scrollDiff\n          });\n        }\n        return r;\n      };\n      var currentRanges = dropTarget === 'group' ? groupByRanges : theRanges;\n      var ranges = currentRanges.map(mapRange);\n      var compareRanges = currentRanges.map(mapRange);\n      var dragMinIndex = dropTarget == 'header' ? DRAG_INFO.minHeaderIndex : undefined;\n      var dragMaxIndex = dropTarget == 'header' ? DRAG_INFO.maxHeaderIndex : undefined;\n      var dropIndex;\n      var _getDropIndex = (0, _getDropIndex2.default)({\n          dir: dir,\n          rtl: rtl,\n          dragMinIndex: dragMinIndex,\n          dragMaxIndex: dragMaxIndex,\n          dragTarget: dragTarget,\n          dropTarget: dropTarget,\n          dragRange: _objectSpread(_objectSpread({}, ranges[dragIndex]), {}, {\n            left: dragBoxRegion.left,\n            right: dragBoxRegion.right,\n            index: dragIndex\n          }),\n          dragIndex: dragIndex,\n          ranges: compareRanges,\n          validDropPositions: dropTarget === dragTarget ? validDropPositions : undefined\n        }),\n        newDropIndex = _getDropIndex.index,\n        locked = _getDropIndex.locked;\n      DRAG_INFO.newLocked = locked;\n      if (newDropIndex != undefined) {\n        dropIndex = newDropIndex;\n      }\n      var offset = 0;\n      var visible;\n      if (locked === 'start' && newDropIndex === this.props.firstUnlockedIndex) {\n        offset = (rtl ? -1 : 1) * -11;\n      }\n      if (newDropIndex === this.props.firstLockedEndIndex && dragIndex !== this.props.firstLockedEndIndex) {\n        if (locked === 'end') {\n          offset = (rtl ? -1 : 1) * 4;\n        } else if (!locked) {\n          offset = (rtl ? -1 : 1) * -6;\n        }\n      }\n      if (newDropIndex === this.props.visibleColumns.length) {\n        offset = rtl ? 6 : -6;\n      }\n      if (locked == null && dragComputedLocked === 'end' && newDropIndex === this.props.firstLockedEndIndex) {\n        visible = true;\n      }\n      this.dropIndex = dropIndex;\n      this.setReorderArrowPosition(undefined, dropTarget);\n      this.setReorderArrowAt(dropIndex, compareRanges, dropTarget, offset, visible);\n    }\n  }, {\n    key: \"setColumnOrder\",\n    value: function setColumnOrder(newColumnOrder) {\n      var columnOrder = getColumnOrder(this.props);\n      if (this.props.setColumnOrder && JSON.stringify(columnOrder) !== JSON.stringify(newColumnOrder)) {\n        this.props.setColumnOrder(newColumnOrder);\n      }\n    }\n  }, {\n    key: \"setGroupBy\",\n    value: function setGroupBy(groupBy) {\n      if (this.props.onGroupByChange && JSON.stringify(groupBy) !== JSON.stringify(this.props.computedGroupBy)) {\n        this.props.onGroupByChange(groupBy);\n      }\n    }\n  }, {\n    key: \"insertGroupBy\",\n    value: function insertGroupBy(at, column) {\n      var props = this.props;\n      var order = (0, _toConsumableArray2.default)(props.computedGroupBy);\n      order.splice(at, 0, column.id);\n      this.setGroupBy(order);\n    }\n  }]);\n  return InovuaDataGridHeaderLayout;\n}(_reactClass.default);\nexports.default = InovuaDataGridHeaderLayout;\nInovuaDataGridHeaderLayout.propTypes = {\n  i18n: _propTypes.default.func.isRequired,\n  renderGroupToolbar: _propTypes.default.func,\n  renderDragGroupItem: _propTypes.default.func,\n  getScrollLeftMax: _propTypes.default.func.isRequired,\n  setScrollLeft: _propTypes.default.func.isRequired,\n  renderColumnReorderProxy: _propTypes.default.func,\n  stickyHeader: _propTypes.default.bool\n};","map":{"version":3,"names":["_interopRequireDefault","require","_typeof","Object","defineProperty","exports","value","default","_defineProperty2","_classCallCheck2","_createClass2","_inherits2","_possibleConstructorReturn2","_getPrototypeOf2","_toConsumableArray2","_react","_interopRequireWildcard","_propTypes","_reactClass","_debounce","_contains","_assignDefined2","_region","_isMobile","_getRangesForBoxes","_getRangesForColumns","_setupColumnDrag","_moveXBeforeY","_isFocusable","_getDropIndex2","_getUndraggableSuccessiveCount","_DragCell","_DragHeaderGroup","_HeaderWrapper","_Header","_getScrollbarWidth","_getGlobal","_join","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","obj","__esModule","cache","has","get","newObj","hasPropertyDescriptor","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","getOwnPropertyDescriptors","defineProperties","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","_createSuperInternal","Super","result","NewTarget","constructor","Reflect","construct","sham","Proxy","Boolean","valueOf","e","globalObject","getGlobal","SCROLL_MARGIN","DRAG_INFO","preventDefault","getColumnOrder","props","doFilter","c","groupColumn","order","computedColumnOrder","map","id","columnsMap","allColumns","toId","lockedStart","lockedStartColumns","lockedMap","reduce","acc","cId","lockedEnd","lockedEndColumns","concat","getParentsForColumns","columns","groups","maxDepth","parentsForColumns","col","getParentGroups","group","includeSelf","g","name","splice","getValidDropPositions","_ref","dragTargetDepth","dragTargetIndex","dragTargetLength","lockedForColumns","allowGroupSplitOnReorder","getGroupsForColumn","parents","initialName","shouldCheck","getGroupStartFor","depth","index","initialParent","slice","initialLocked","itParents","currentParent","currentLocked","getGroupEndFor","res","dragTargetParentGroups","x","isSingleColumn","usedDepth","parentGroupStartIndex","parentGroupEndIndex","currentGroupEndIndex","_i","itGroupStartIndex","itGroupEndIndex","groupEndIsLastUnlocked","computedLocked","ReorderArrow","_React$Component","_super","_this","state","visible","bottom","top","left","_ref2","right","setState","setVisible","render","size","_this$state","createElement","ref","refReorderArrow","style","position","width","height","pointerEvents","opacity","display","className","rtl","renderReorderIndicator","Component","defaultProps","InovuaDataGridHeaderLayout","_Component","_super2","_this2","draggingProps","refDragGroupItem","item","dragGroupItem","refDragCell","cell","dragCell","refDragHeaderGroup","dragHeaderGroup","groupToolbar","createRef","refHeader","h","headerNode","getDOMNode","addEventListener","removeEventListener","header","headerWrapper","cmp","reorderArrow","headerDomNode","lazyNotifyHeaderScrollLeftMax","notifyHeaderScrollLeftMax","scrollLeftMax","notifyScrollLeftMax","undefined","getScrollLeftMax","onContainerScrollHorizontal","scrollLeft","setScrollLeft","getScrollLeft","setColumnRenderStartIndex","columnRenderStartIndex","stickyHeader","renderGroupToolbar","renderHeaderWrapper","renderDragCell","renderDragGroupItem","renderDragHeaderGroup","_this$props","onGroupByChange","onHeaderSortClick","renderGroupItem","renderSortTool","groupBy","computedGroupBy","disableGroupByToolbar","i18n","theme","headerGroupPlaceholderText","onItemMouseDown","onGroupItemMouseDown","onSortClick","computedShowHeader","onHeaderGroupMouseDown","onHeaderCellMouseDown","onHeaderCellTouchStart","computedGroups","column","event","dragTarget","dragIndex","getCellDOMNodeAt","getHeader","headerGroupProps","headerGroup","ctrlKey","metaKey","_dragIndex","draggable","dragTargetNode","domRef","current","shouldStop","querySelectorAll","filterWrapperNode","groupColumns","colId","dragBoxes","getGroupsAndCells","isHeaderGroup","indexOf","computedVisibleIndex","visibleColumns","computedGroupsMap","computedGroupsDepth","maybeDragMouseDown","allowTargetChange","ranges","_ref3","visibleIndex","_ref4","_ref4$dragTarget","reorderColumns","nativeEvent","which","dragColumn","stopPropagation","computedDepth","_ref5","_this3","computedPivot","_removeListeners","mouseMoveEventCount","didSetupDrag","cleanup","onMouseUp","onMouseMove","setupDrag","mouseup","mousemove","removeListeners","setTimeout","reorderProxySize","setReorderArrowAt","offset","last","box","_DRAG_INFO","headerRegion","initialScrollLeft","_box","lastBox","boxPos","nativeScroll","scrollbars","vertical","setReorderArrowPosition","pos","reorderArrowPosition","reorderProxyPosition","setReorderArrowVisible","getGroupToolbar","getGroupByItems","getSortedItemsInfo","getHeaderCells","getCells","getBoxesFor","getDragBoxInstance","dragBox","cellProps","getProps","parent","_ref6","_DRAG_INFO2","_ref6$allowTargetChan","from","dragBoxProps","rtlOffset","Math","max","totalComputedWidth","columnRanges","initialOffset","availableWidth","min","totalLockedEndWidth","groupToolbarCells","groupByRanges","dragProxy","headerDragColumn","columnId","dragBoxNode","dragBoxInitialRegion","getProxyRegion","MAX_WIDTH","getWidth","setWidth","shift","pageX","columnReorderScrollByAmount","dragBoxOffsets","extendedDragBoxProps","renderColumnReorderProxy","assign","setProps","dragProxyPosition","setHeight","setTop","setRight","setLeft","maxHeaderIndex","reverse","minHeaderIndex","validDropPositions","wrapperNode","filterRowHeight","computedFilterable","querySelector","offsetHeight","dragColumnsIds","dragBoxRegion","clone","dragProxyInitialPosition","dropTarget","groupToolbarNode","headerGroupTargetNode","groupTargetNode","groupComputedStyle","getComputedStyle","parseInt","paddingTop","paddingBottom","offsetTop","headergroup","setDragging","coverHandleRef","setActive","setCursor","constrainTo","constrainReorder","parentNode","region","onDrag","onHeaderCellDrag","onDrop","onHeaderCellDrop","_this4","dropIndex","_DRAG_INFO3","newLocked","_DRAG_INFO4","virtualizeColumns","updateColumns","moveColumnsBeforeIndex","setGroupBy","groupByColumn","newGroupBy","ungroupColumnToIndex","columnAtDropIndex","insertIndex","columnAtDropIndexOrLast","setColumnLocked","setColumnOrder","columnsIds","_this5","columnVisibilityMap","columnOrder","dragColumnsIndexesInAllColumns","dropBeforeIndexInAllColumns","firstDragIndex","columnRightBefore","targetColumn","newColumnOrder","_ref7","diffLeft","diffTop","_DRAG_INFO5","theRanges","_DRAG_INFO6","_this$props2","scrollDiff","initialDiffLeft","minScrollLeft","maxScrollRight","groupToolbarRegion","scrollAdjust","dragProxyAdjust","dragComputedLocked","totalLockedStartWidth","dir","mapRange","r","currentRanges","compareRanges","dragMinIndex","dragMaxIndex","_getDropIndex","dragRange","newDropIndex","locked","firstUnlockedIndex","firstLockedEndIndex","JSON","stringify","insertGroupBy","at","propTypes","func","isRequired","bool"],"sources":["/Users/alexandre.nepomuceno/Documents/agenda/node_modules/@inovua/reactdatagrid-community/Layout/ColumnLayout/HeaderLayout/index.js"],"sourcesContent":["/** \n * Copyright Â© INOVUA TRADING.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nvar _typeof = require(\"@babel/runtime/helpers/typeof\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\nvar _react = _interopRequireWildcard(require(\"react\"));\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\nvar _reactClass = _interopRequireDefault(require(\"../../../packages/react-class\"));\nvar _debounce = _interopRequireDefault(require(\"../../../packages/debounce\"));\nvar _contains = _interopRequireDefault(require(\"../../../packages/contains\"));\nvar _assignDefined2 = _interopRequireDefault(require(\"../../../packages/assign-defined\"));\nvar _region = _interopRequireDefault(require(\"../../../packages/region\"));\nvar _isMobile = _interopRequireDefault(require(\"../../../packages/isMobile\"));\nvar _getRangesForBoxes = _interopRequireDefault(require(\"./getRangesForBoxes\"));\nvar _getRangesForColumns = _interopRequireDefault(require(\"./getRangesForColumns\"));\nvar _setupColumnDrag = _interopRequireDefault(require(\"./setupColumnDrag\"));\nvar _moveXBeforeY = _interopRequireDefault(require(\"../../../utils/moveXBeforeY\"));\nvar _isFocusable = _interopRequireDefault(require(\"../../../utils/isFocusable\"));\nvar _getDropIndex2 = _interopRequireDefault(require(\"./getDropIndex\"));\nvar _getUndraggableSuccessiveCount = _interopRequireDefault(require(\"./getUndraggableSuccessiveCount\"));\nvar _DragCell = _interopRequireWildcard(require(\"./DragCell\"));\nvar _DragHeaderGroup = _interopRequireDefault(require(\"./DragHeaderGroup\"));\nvar _HeaderWrapper = _interopRequireDefault(require(\"./HeaderWrapper\"));\nvar _Header = require(\"./Header\");\nvar _getScrollbarWidth = _interopRequireDefault(require(\"../../../packages/getScrollbarWidth\"));\nvar _getGlobal = require(\"../../../getGlobal\");\nvar _join = _interopRequireDefault(require(\"@inovua/reactdatagrid-community/packages/join\"));\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nvar globalObject = (0, _getGlobal.getGlobal)();\nvar SCROLL_MARGIN = 40;\nvar DRAG_INFO = null;\nvar preventDefault = function preventDefault(e) {\n  return e.preventDefault();\n};\nvar getColumnOrder = function getColumnOrder(props, filter) {\n  var doFilter = function doFilter(c) {\n    return !c.groupColumn && filter ? filter(c) : true;\n  };\n  var order;\n  if (props.computedColumnOrder) {\n    order = props.computedColumnOrder.map(function (id) {\n      return props.columnsMap[id];\n    }).filter(Boolean);\n  } else {\n    order = props.allColumns;\n  }\n  var toId = function toId(c) {\n    return c.id;\n  };\n  order = (order || []).filter(doFilter).map(toId);\n  var lockedStart = props.lockedStartColumns.filter(doFilter).map(toId);\n  var lockedMap = lockedStart.reduce(function (acc, cId) {\n    acc[cId] = true;\n    return acc;\n  }, {});\n  var lockedEnd = props.lockedEndColumns.filter(doFilter).map(toId);\n  lockedEnd.reduce(function (acc, cId) {\n    acc[cId] = true;\n    return acc;\n  }, lockedMap);\n  return [].concat((0, _toConsumableArray2.default)(lockedStart), (0, _toConsumableArray2.default)(order.filter(function (cId) {\n    return !lockedMap[cId];\n  })), (0, _toConsumableArray2.default)(lockedEnd));\n};\nvar getParentsForColumns = function getParentsForColumns(columns, groups, maxDepth) {\n  var parentsForColumns = columns.map(function (col) {\n    var result = [col.id].concat((0, _toConsumableArray2.default)((0, _Header.getParentGroups)(col.group, groups, {\n      includeSelf: true\n    }).map(function (g) {\n      return g.name;\n    })));\n    while (result.length <= maxDepth + 1) {\n      result.splice(0, 0, result[0]);\n    }\n    return result;\n  });\n  return parentsForColumns;\n};\nvar getValidDropPositions = function getValidDropPositions(_ref) {\n  var dragTargetDepth = _ref.dragTargetDepth,\n    dragTargetIndex = _ref.dragTargetIndex,\n    dragTargetLength = _ref.dragTargetLength,\n    parentsForColumns = _ref.parentsForColumns,\n    lockedForColumns = _ref.lockedForColumns,\n    columns = _ref.columns,\n    allowGroupSplitOnReorder = _ref.allowGroupSplitOnReorder;\n  var getGroupsForColumn = function getGroupsForColumn(parents) {\n    parents = parents || [];\n    var initialName = parents[0];\n    var shouldCheck = true;\n    var groups = [];\n    parents.forEach(function (group) {\n      if (!shouldCheck) {\n        groups.push(group);\n        return;\n      }\n      if (shouldCheck && group !== initialName) {\n        shouldCheck = false;\n        groups.push(group);\n        return;\n      }\n      groups.push(null);\n    });\n    return groups;\n  };\n  var getGroupStartFor = function getGroupStartFor(parents, depth, index) {\n    var initialParent = parents[index].slice(-depth - 1)[0];\n    var initialLocked = lockedForColumns[index];\n    var itParents;\n    var currentParent;\n    var currentLocked;\n    do {\n      itParents = parents[index - 1];\n      if (!itParents) {\n        break;\n      }\n      currentParent = itParents.slice(-depth - 1)[0];\n      currentLocked = lockedForColumns[index];\n      if (currentParent !== initialParent || currentLocked !== initialLocked) {\n        break;\n      }\n      index--;\n    } while (index >= 0);\n    return index;\n  };\n  var getGroupEndFor = function getGroupEndFor(parents, depth, index) {\n    var initialParent = parents[index].slice(-depth - 1)[0];\n    var initialLocked = lockedForColumns[index];\n    var itParents;\n    var currentParent;\n    var currentLocked;\n    do {\n      index++;\n      itParents = parents[index];\n      if (!itParents) {\n        break;\n      }\n      currentParent = itParents.slice(-depth - 1)[0];\n      currentLocked = lockedForColumns[index];\n      if (currentParent !== initialParent || currentLocked !== initialLocked) {\n        break;\n      }\n    } while (index < parents.length);\n    return index;\n  };\n  var res = columns.reduce(function (acc, col, index) {\n    if (index > dragTargetIndex && index <= dragTargetIndex + dragTargetLength) {\n      return acc;\n    }\n    acc[index] = true;\n    return acc;\n  }, {});\n  res[columns.length] = true;\n  if (!allowGroupSplitOnReorder) {\n    var dragTargetParentGroups = getGroupsForColumn(parentsForColumns[dragTargetIndex]).filter(function (x) {\n      return x;\n    });\n    var isSingleColumn = !dragTargetParentGroups.length;\n    var usedDepth = isSingleColumn ? 0 : dragTargetDepth;\n    var parentGroupStartIndex = !usedDepth ? 0 : getGroupStartFor(parentsForColumns, usedDepth - 1, dragTargetIndex);\n    var parentGroupEndIndex = !usedDepth ? columns.length : getGroupEndFor(parentsForColumns, usedDepth - 1, dragTargetIndex);\n    var currentGroupEndIndex = getGroupEndFor(parentsForColumns, usedDepth, dragTargetIndex);\n    for (var i = 0; i <= columns.length; i++) {\n      delete res[i];\n    }\n    for (var _i = parentGroupStartIndex; _i < parentGroupEndIndex; _i++) {\n      var itGroupStartIndex = getGroupStartFor(parentsForColumns, usedDepth, _i);\n      var itGroupEndIndex = getGroupEndFor(parentsForColumns, usedDepth, _i);\n      res[itGroupStartIndex] = true;\n      res[itGroupEndIndex] = true;\n    }\n    var groupEndIsLastUnlocked = columns[currentGroupEndIndex] && columns[currentGroupEndIndex].computedLocked === 'end' && columns[currentGroupEndIndex - 1] && columns[currentGroupEndIndex - 1].computedLocked !== 'end';\n    if (!groupEndIsLastUnlocked) {\n      delete res[currentGroupEndIndex];\n    }\n  }\n  return res;\n};\nvar ReorderArrow = function (_React$Component) {\n  (0, _inherits2.default)(ReorderArrow, _React$Component);\n  var _super = _createSuper(ReorderArrow);\n  function ReorderArrow(props) {\n    var _this;\n    (0, _classCallCheck2.default)(this, ReorderArrow);\n    _this = _super.call(this, props);\n    _this.state = {\n      visible: false,\n      bottom: 0,\n      top: 0,\n      left: 0\n    };\n    return _this;\n  }\n  (0, _createClass2.default)(ReorderArrow, [{\n    key: \"set\",\n    value: function set(_ref2) {\n      var bottom = _ref2.bottom,\n        top = _ref2.top,\n        left = _ref2.left,\n        right = _ref2.right,\n        target = _ref2.target;\n      this.setState({\n        target: target,\n        bottom: bottom,\n        left: left,\n        top: top,\n        right: right\n      });\n    }\n  }, {\n    key: \"setVisible\",\n    value: function setVisible(visible) {\n      if (visible != this.state.visible) {\n        this.setState({\n          visible: visible\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var size = this.props.size;\n      var _this$state = this.state,\n        bottom = _this$state.bottom,\n        top = _this$state.top,\n        left = _this$state.left,\n        right = _this$state.right,\n        visible = _this$state.visible,\n        target = _this$state.target;\n      return _react.default.createElement(\"div\", {\n        ref: this.refReorderArrow,\n        style: {\n          position: 'absolute',\n          top: top,\n          left: left,\n          right: right,\n          width: size,\n          height: bottom - top,\n          bottom: bottom,\n          pointerEvents: 'none',\n          opacity: visible ? 1 : 0,\n          display: 'block'\n        },\n        className: \"InovuaReactDataGrid__column-reorder-arrow InovuaReactDataGrid__column-reorder-arrow--direction-\".concat(this.props.rtl ? 'rtl' : 'ltr')\n      }, _react.default.createElement(\"div\", {\n        className: \"InovuaReactDataGrid__column-reorder-arrow-fill InovuaReactDataGrid__column-reorder-arrow-fill--direction-\".concat(this.props.rtl ? 'rtl' : 'ltr', \" InovuaReactDataGrid__column-reorder-arrow-fill--target-\").concat(target || 'none')\n      }), this.props.renderReorderIndicator());\n    }\n  }]);\n  return ReorderArrow;\n}(_react.default.Component);\nReorderArrow.defaultProps = {\n  renderReorderIndicator: function renderReorderIndicator() {}\n};\nvar InovuaDataGridHeaderLayout = function (_Component) {\n  (0, _inherits2.default)(InovuaDataGridHeaderLayout, _Component);\n  var _super2 = _createSuper(InovuaDataGridHeaderLayout);\n  function InovuaDataGridHeaderLayout(props) {\n    var _this2;\n    (0, _classCallCheck2.default)(this, InovuaDataGridHeaderLayout);\n    _this2 = _super2.call(this, props);\n    _this2.state = {\n      draggingProps: null\n    };\n    _this2.refDragGroupItem = function (item) {\n      _this2.dragGroupItem = item;\n    };\n    _this2.refDragCell = function (cell) {\n      _this2.dragCell = cell;\n    };\n    _this2.refDragHeaderGroup = function (item) {\n      _this2.dragHeaderGroup = item;\n    };\n    _this2.groupToolbar = (0, _react.createRef)();\n    _this2.refHeader = function (h) {\n      _this2.headerNode = null;\n      if (h) {\n        _this2.headerNode = h.getDOMNode ? h.getDOMNode() : null;\n        if (!_this2.headerNode) {\n          throw 'Cannot find header node';\n        }\n        if (_isMobile.default) {\n          _this2.headerNode.addEventListener('touchmove', preventDefault);\n        }\n      } else {\n        if (_this2.headerNode && _isMobile.default) {\n          _this2.headerNode.removeEventListener('touchmove', preventDefault);\n        }\n        _this2.headerNode = null;\n      }\n      _this2.header = h;\n    };\n    _this2.headerWrapper = (0, _react.createRef)();\n    _this2.refReorderArrow = function (cmp) {\n      _this2.reorderArrow = cmp;\n    };\n    _this2.headerDomNode = (0, _react.createRef)();\n    _this2.lazyNotifyHeaderScrollLeftMax = (0, _debounce.default)(_this2.notifyHeaderScrollLeftMax, 150);\n    return _this2;\n  }\n  (0, _createClass2.default)(InovuaDataGridHeaderLayout, [{\n    key: \"notifyHeaderScrollLeftMax\",\n    value: function notifyHeaderScrollLeftMax(scrollLeftMax) {\n      if (this.header && this.props.lockedEndColumns) {\n        this.header.notifyScrollLeftMax(scrollLeftMax === undefined ? this.getScrollLeftMax() : scrollLeftMax);\n      }\n    }\n  }, {\n    key: \"onContainerScrollHorizontal\",\n    value: function onContainerScrollHorizontal(scrollLeft, scrollLeftMax) {\n      this.scrollLeft = scrollLeft;\n      if (this.header) {\n        this.header.setScrollLeft(scrollLeft, scrollLeftMax);\n        this.lazyNotifyHeaderScrollLeftMax();\n      }\n    }\n  }, {\n    key: \"setScrollLeft\",\n    value: function setScrollLeft(scrollLeft) {\n      this.props.setScrollLeft(scrollLeft);\n    }\n  }, {\n    key: \"getScrollLeft\",\n    value: function getScrollLeft() {\n      return this.scrollLeft || 0;\n    }\n  }, {\n    key: \"getScrollLeftMax\",\n    value: function getScrollLeftMax() {\n      return this.props.getScrollLeftMax();\n    }\n  }, {\n    key: \"setColumnRenderStartIndex\",\n    value: function setColumnRenderStartIndex(columnRenderStartIndex) {\n      if (this.header) {\n        this.header.setColumnRenderStartIndex(columnRenderStartIndex);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var className = (0, _join.default)('InovuaReactDataGrid__header-layout', this.props.stickyHeader && 'InovuaReactDataGrid__header-layout__sticky-header');\n      return _react.default.createElement(\"div\", {\n        ref: this.headerDomNode,\n        className: className\n      }, this.renderGroupToolbar(), this.renderHeaderWrapper(), this.renderDragCell(), this.renderDragGroupItem(), this.renderDragHeaderGroup(), this.renderReorderIndicator());\n    }\n  }, {\n    key: \"renderGroupToolbar\",\n    value: function renderGroupToolbar() {\n      var _this$props = this.props,\n        columnsMap = _this$props.columnsMap,\n        onGroupByChange = _this$props.onGroupByChange,\n        onHeaderSortClick = _this$props.onHeaderSortClick,\n        renderGroupItem = _this$props.renderGroupItem,\n        renderSortTool = _this$props.renderSortTool,\n        renderGroupToolbar = _this$props.renderGroupToolbar,\n        groupBy = _this$props.computedGroupBy,\n        disableGroupByToolbar = _this$props.disableGroupByToolbar,\n        i18n = _this$props.i18n,\n        rtl = _this$props.rtl,\n        theme = _this$props.theme;\n      if (!groupBy || !renderGroupToolbar) {\n        return null;\n      }\n      return renderGroupToolbar({\n        columnsMap: columnsMap,\n        groupBy: groupBy,\n        rtl: rtl,\n        theme: theme,\n        renderSortTool: renderSortTool,\n        onGroupByChange: onGroupByChange,\n        disableGroupByToolbar: disableGroupByToolbar,\n        renderGroupItem: renderGroupItem,\n        headerGroupPlaceholderText: i18n('dragHeaderToGroup'),\n        onItemMouseDown: this.onGroupItemMouseDown,\n        onSortClick: onHeaderSortClick,\n        ref: this.groupToolbar\n      });\n    }\n  }, {\n    key: \"renderHeaderWrapper\",\n    value: function renderHeaderWrapper() {\n      var props = this.props;\n      var computedShowHeader = props.computedShowHeader;\n      if (!computedShowHeader) {\n        return null;\n      }\n      var scrollLeft = (this.scrollLeft !== undefined ? this.scrollLeft : props.scrollLeft) || 0;\n      var groupBy = this.props.computedGroupBy && this.props.computedGroupBy.length ? this.props.computedGroupBy : null;\n      return _react.default.createElement(_HeaderWrapper.default, _objectSpread(_objectSpread({}, props), {}, {\n        groupBy: groupBy,\n        onHeaderGroupMouseDown: this.onHeaderGroupMouseDown,\n        onHeaderCellMouseDown: this.onHeaderCellMouseDown,\n        onHeaderCellTouchStart: this.onHeaderCellTouchStart,\n        ref: this.headerWrapper,\n        refHeader: this.refHeader,\n        scrollLeft: scrollLeft,\n        setScrollLeft: this.setScrollLeft\n      }));\n    }\n  }, {\n    key: \"renderDragCell\",\n    value: function renderDragCell() {\n      return _react.default.createElement(_DragCell.default, {\n        ref: this.refDragCell\n      });\n    }\n  }, {\n    key: \"renderDragGroupItem\",\n    value: function renderDragGroupItem() {\n      if (!this.props.renderDragGroupItem) {\n        return null;\n      }\n      return this.props.renderDragGroupItem(this.refDragGroupItem);\n    }\n  }, {\n    key: \"renderDragHeaderGroup\",\n    value: function renderDragHeaderGroup() {\n      if (!this.props.computedGroups) {\n        return;\n      }\n      return _react.default.createElement(_DragHeaderGroup.default, {\n        ref: this.refDragHeaderGroup\n      });\n    }\n  }, {\n    key: \"onGroupItemMouseDown\",\n    value: function onGroupItemMouseDown(column, index, event) {\n      this.onHeaderCellMouseDown(column, event, {\n        dragTarget: 'group',\n        dragIndex: index\n      });\n    }\n  }, {\n    key: \"getCellDOMNodeAt\",\n    value: function getCellDOMNodeAt(index) {\n      return this.header.getCellDOMNodeAt(index);\n    }\n  }, {\n    key: \"getHeader\",\n    value: function getHeader() {\n      return this.header;\n    }\n  }, {\n    key: \"onHeaderGroupMouseDown\",\n    value: function onHeaderGroupMouseDown(event, headerGroupProps, headerGroup) {\n      if (event.ctrlKey || event.metaKey) {\n        return;\n      }\n      if (this._dragIndex !== undefined) {\n        return;\n      }\n      if (headerGroupProps.group && headerGroupProps.group.draggable === false) {\n        return;\n      }\n      var dragTargetNode = headerGroup.domRef ? headerGroup.domRef.current : null;\n      var shouldStop = (0, _toConsumableArray2.default)(dragTargetNode.querySelectorAll('.InovuaReactDataGrid__column-header__filter-wrapper')).reduce(function (shouldStop, filterWrapperNode) {\n        if ((0, _contains.default)(filterWrapperNode, event.target) || filterWrapperNode === event.target) {\n          return true;\n        }\n        return shouldStop;\n      }, false);\n      if (shouldStop) {\n        return;\n      }\n      var groupColumns = headerGroupProps.columns.reduce(function (acc, colId) {\n        acc[colId] = true;\n        return acc;\n      }, {});\n      this.groupColumns = groupColumns;\n      var dragBoxes = this.header.getGroupsAndCells().filter(function (item) {\n        if (item === headerGroup) {\n          return true;\n        }\n        if (item.props.id in groupColumns) {\n          return false;\n        }\n        return !item.props.isHeaderGroup;\n      });\n      var dragIndex = dragBoxes.indexOf(headerGroup);\n      var dragTargetIndex = this.props.columnsMap[headerGroup.props.columns[0]].computedVisibleIndex;\n      var dragTargetDepth = headerGroup.props.depth;\n      var dragTargetLength = headerGroup.props.columns.length;\n      var parentsForColumns = getParentsForColumns(this.props.visibleColumns, this.props.computedGroupsMap, this.props.computedGroupsDepth);\n      this.maybeDragMouseDown(event, {\n        dragTarget: 'headergroup',\n        dragTargetIndex: dragTargetIndex,\n        dragTargetDepth: dragTargetDepth,\n        dragTargetLength: dragTargetLength,\n        parentsForColumns: parentsForColumns,\n        dragTargetNode: dragTargetNode,\n        dragIndex: dragIndex,\n        dragBoxes: dragBoxes,\n        allowTargetChange: false,\n        ranges: (0, _getRangesForBoxes.default)(dragBoxes, function (i) {\n          return i;\n        })\n      });\n    }\n  }, {\n    key: \"onHeaderCellTouchStart\",\n    value: function onHeaderCellTouchStart() {\n      return this.onHeaderCellMouseDown.apply(this, arguments);\n    }\n  }, {\n    key: \"onHeaderCellMouseDown\",\n    value: function onHeaderCellMouseDown(_ref3, event) {\n      var visibleIndex = _ref3.computedVisibleIndex;\n      var _ref4 = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {\n          dragTarget: 'header'\n        },\n        _ref4$dragTarget = _ref4.dragTarget,\n        dragTarget = _ref4$dragTarget === void 0 ? 'header' : _ref4$dragTarget,\n        dragIndex = _ref4.dragIndex;\n      if (this.props.reorderColumns === false) {\n        return;\n      }\n      if ((0, _isFocusable.default)(event.target)) {\n        return;\n      }\n      if (event.nativeEvent.which == 3 || event.metaKey || event.ctrlKey) {\n        return;\n      }\n      if (dragIndex === undefined) {\n        dragIndex = visibleIndex;\n      }\n      if (event.ctrlKey || event.metaKey) {\n        return;\n      }\n      var allowTargetChange = undefined;\n      var dragColumn;\n      var dragTargetNode = this.getCellDOMNodeAt(visibleIndex);\n      if (dragTarget == 'header') {\n        dragColumn = this.props.visibleColumns[visibleIndex];\n        if (!dragColumn || dragColumn.groupColumn || dragColumn.draggable === false) {\n          event.stopPropagation();\n          return;\n        }\n        if (this.props.computedGroupBy) {\n          if (this.props.computedGroupBy.indexOf(dragColumn.id) != -1 || this.props.computedGroupBy.indexOf(dragColumn.name) != -1) {\n            allowTargetChange = false;\n          }\n        }\n        if (dragColumn.draggable === false) {\n          return;\n        }\n        if (dragColumn.groupBy === false) {\n          allowTargetChange = false;\n        }\n      }\n      var dragTargetIndex = dragIndex;\n      var dragTargetDepth = dragColumn && dragColumn.group && this.props.computedGroupsMap && this.props.computedGroupsMap[dragColumn.group] ? this.props.computedGroupsMap[dragColumn.group].computedDepth + 1 : this.props.computedGroupsDepth + 1;\n      var parentsForColumns = getParentsForColumns(this.props.visibleColumns, this.props.computedGroupsMap, this.props.computedGroupsDepth);\n      this.maybeDragMouseDown(event, {\n        dragTarget: dragTarget,\n        dragIndex: dragIndex,\n        dragTargetNode: dragTargetNode,\n        parentsForColumns: parentsForColumns,\n        dragTargetIndex: dragTargetIndex,\n        dragTargetDepth: dragTargetDepth,\n        dragTargetLength: 1,\n        allowTargetChange: allowTargetChange\n      });\n    }\n  }, {\n    key: \"maybeDragMouseDown\",\n    value: function maybeDragMouseDown(event, _ref5) {\n      var _this3 = this;\n      var dragTarget = _ref5.dragTarget,\n        dragIndex = _ref5.dragIndex,\n        allowTargetChange = _ref5.allowTargetChange,\n        ranges = _ref5.ranges,\n        parentsForColumns = _ref5.parentsForColumns,\n        dragTargetIndex = _ref5.dragTargetIndex,\n        dragTargetDepth = _ref5.dragTargetDepth,\n        dragTargetNode = _ref5.dragTargetNode,\n        dragTargetLength = _ref5.dragTargetLength;\n      if (this.props.computedPivot) {\n        return;\n      }\n      this._dragIndex = dragIndex;\n      var _removeListeners;\n      var mouseMoveEventCount = 0;\n      var didSetupDrag = false;\n      var cleanup = function cleanup() {\n        delete _this3._dragIndex;\n        if (_removeListeners) {\n          _removeListeners();\n        }\n      };\n      var onMouseUp = cleanup;\n      var onMouseMove = function onMouseMove(event) {\n        if (didSetupDrag) {\n          return;\n        }\n        mouseMoveEventCount++;\n        if (mouseMoveEventCount > 1) {\n          didSetupDrag = true;\n          _removeListeners();\n          _this3.setupDrag({\n            dragTarget: dragTarget,\n            dragIndex: dragIndex,\n            allowTargetChange: allowTargetChange,\n            ranges: ranges,\n            parentsForColumns: parentsForColumns,\n            dragTargetIndex: dragTargetIndex,\n            dragTargetDepth: dragTargetDepth,\n            dragTargetLength: dragTargetLength,\n            dragTargetNode: dragTargetNode\n          }, event);\n        }\n      };\n      var mouseup = _isMobile.default ? 'touchend' : 'mouseup';\n      var mousemove = _isMobile.default ? 'touchmove' : 'mousemove';\n      _removeListeners = function removeListeners() {\n        _removeListeners = null;\n        globalObject.removeEventListener(mouseup, onMouseUp, false);\n        globalObject.removeEventListener(mousemove, onMouseMove, false);\n      };\n      if (_isMobile.default) {\n        setTimeout(function () {\n          onMouseUp();\n        }, 350);\n      }\n      globalObject.addEventListener(mouseup, onMouseUp, false);\n      globalObject.addEventListener(mousemove, onMouseMove, false);\n    }\n  }, {\n    key: \"renderReorderIndicator\",\n    value: function renderReorderIndicator() {\n      var size = this.props.reorderProxySize;\n      return _react.default.createElement(ReorderArrow, {\n        ref: this.refReorderArrow,\n        size: size,\n        rtl: this.props.rtl,\n        renderReorderIndicator: this.props.renderReorderIndicator\n      });\n    }\n  }, {\n    key: \"setReorderArrowAt\",\n    value: function setReorderArrowAt(index, ranges, target) {\n      var offset = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n      var visible = arguments.length > 4 ? arguments[4] : undefined;\n      visible = visible !== undefined ? visible : index != DRAG_INFO.dragIndex || target != DRAG_INFO.dragTarget;\n      if (offset) {\n        visible = true;\n      }\n      var rtl = this.props.rtl;\n      this.reorderArrow.setVisible(visible);\n      var last = index == ranges.length;\n      var box = ranges[index];\n      var _DRAG_INFO = DRAG_INFO,\n        headerRegion = _DRAG_INFO.headerRegion,\n        initialScrollLeft = _DRAG_INFO.initialScrollLeft;\n      if (!box && last) {\n        var _box;\n        var lastBox = ranges[ranges.length - 1] || {\n          left: headerRegion.left,\n          right: headerRegion.left\n        };\n        box = (_box = {}, (0, _defineProperty2.default)(_box, rtl ? 'right' : 'left', rtl ? lastBox.left : lastBox.right), (0, _defineProperty2.default)(_box, \"computedLocked\", lastBox.computedLocked), _box);\n      }\n      box = box || (rtl ? {\n        right: 0\n      } : {\n        left: 0\n      });\n      var boxPos = rtl ? box.right : box.left;\n      if (rtl && this.props.nativeScroll && this.props.scrollbars.vertical) {\n        boxPos -= (0, _getScrollbarWidth.default)();\n      }\n      return this.setReorderArrowPosition(rtl ? -boxPos + headerRegion.right - offset : boxPos - headerRegion.left + offset, target);\n    }\n  }, {\n    key: \"setReorderArrowPosition\",\n    value: function setReorderArrowPosition(pos, target) {\n      var rtl = this.props.rtl;\n      this.reorderArrowPosition = this.reorderArrowPosition || {};\n      (0, _assignDefined2.default)(this.reorderArrowPosition, (0, _defineProperty2.default)({}, rtl ? 'right' : 'left', pos));\n      this.reorderArrow.set(_objectSpread((0, _defineProperty2.default)({\n        target: target\n      }, rtl ? 'right' : 'left', rtl ? this.reorderArrowPosition.right : this.reorderArrowPosition.left), DRAG_INFO.reorderProxyPosition[target]));\n      return this;\n    }\n  }, {\n    key: \"setReorderArrowVisible\",\n    value: function setReorderArrowVisible(visible) {\n      this.reorderArrow.setVisible(visible);\n      return this;\n    }\n  }, {\n    key: \"getGroupToolbar\",\n    value: function getGroupToolbar() {\n      return this.groupToolbar.current;\n    }\n  }, {\n    key: \"getGroupByItems\",\n    value: function getGroupByItems() {\n      if (!this.groupToolbar.current) {\n        return null;\n      }\n      return this.groupToolbar.current.getSortedItemsInfo();\n    }\n  }, {\n    key: \"getHeaderCells\",\n    value: function getHeaderCells() {\n      return this.header.getCells();\n    }\n  }, {\n    key: \"getBoxesFor\",\n    value: function getBoxesFor(target) {\n      if (target == 'header') {\n        return this.header.getCells();\n      }\n      if (target == 'group' && this.groupToolbar.current) {\n        return this.groupToolbar.current.getCells();\n      }\n      if (target == 'headergroup') {\n        return this.header.getGroupsAndCells();\n      }\n      return [];\n    }\n  }, {\n    key: \"getDragBoxInstance\",\n    value: function getDragBoxInstance(dragIndex, dragTarget, dragTargetDepth, dragTargetLength) {\n      if (dragTarget === 'group') {\n        return this.getGroupToolbar() && this.getGroupToolbar().getCells()[dragIndex];\n      }\n      var dragCell = this.getHeaderCells()[dragIndex];\n      var dragBox = dragCell;\n      if (dragTargetLength) {\n        var cellProps = dragCell.getProps();\n        while (cellProps.depth > dragTargetDepth) {\n          if (cellProps.parent) {\n            dragBox = cellProps.parent;\n            cellProps = dragBox.props;\n          } else {\n            break;\n          }\n        }\n      }\n      return dragBox;\n    }\n  }, {\n    key: \"setupDrag\",\n    value: function setupDrag(_ref6, event) {\n      var _DRAG_INFO2;\n      var dragTarget = _ref6.dragTarget,\n        dragIndex = _ref6.dragIndex,\n        _ref6$allowTargetChan = _ref6.allowTargetChange,\n        allowTargetChange = _ref6$allowTargetChan === void 0 ? true : _ref6$allowTargetChan,\n        parentsForColumns = _ref6.parentsForColumns,\n        dragTargetIndex = _ref6.dragTargetIndex,\n        dragTargetDepth = _ref6.dragTargetDepth,\n        dragTargetLength = _ref6.dragTargetLength;\n      var columns = this.props.visibleColumns;\n      var rtl = this.props.rtl;\n      var headerRegion = _region.default.from(this.headerDomNode.current);\n      var dragBox = this.getDragBoxInstance(dragIndex, dragTarget, dragTargetDepth, dragTargetLength);\n      var initialScrollLeft = this.getScrollLeft();\n      var dragBoxProps = dragBox.getProps ? dragBox.getProps() : dragBox.props;\n      var rtlOffset = Math.max(this.props.totalComputedWidth - this.props.size.width, 0);\n      var columnRanges = (0, _getRangesForColumns.default)(columns, {\n        rtl: rtl,\n        rtlOffset: rtlOffset,\n        initialOffset: rtl ? headerRegion.right : headerRegion.left,\n        headerRegion: headerRegion,\n        initialScrollLeft: initialScrollLeft,\n        availableWidth: Math.min(this.props.availableWidth, this.props.totalComputedWidth),\n        totalLockedEndWidth: this.props.totalLockedEndWidth\n      });\n      var groupToolbarCells = this.getGroupToolbar() && this.getGroupToolbar().getCells();\n      var groupByRanges = this.props.computedGroupBy && this.props.computedGroupBy.length ? (0, _getRangesForBoxes.default)(groupToolbarCells) || [] : [];\n      var dragProxy = dragTarget == 'header' ? this.dragCell : dragTarget == 'group' ? this.dragGroupItem : this.dragHeaderGroup;\n      var dragColumn = dragTarget === 'group' ? dragBoxProps.column : columns[dragIndex];\n      var headerDragColumn = dragTarget == 'header' ? dragColumn : null;\n      var columnId = dragTarget == 'header' ? headerDragColumn.id : dragTarget == 'group' ? dragColumn.id : null;\n      var dragBoxNode = dragBox.getDOMNode ? dragBox.getDOMNode() : null;\n      var dragBoxInitialRegion = dragBox && dragBox.getProxyRegion ? dragBox.getProxyRegion() : _region.default.from(dragBoxNode);\n      if (_DragCell.MAX_WIDTH && dragBoxInitialRegion.getWidth() > _DragCell.MAX_WIDTH) {\n        dragBoxInitialRegion.setWidth(_DragCell.MAX_WIDTH);\n      }\n      if (_region.default.from(dragBoxNode).getWidth() > headerRegion.getWidth() / 2) {\n        if (rtl) {\n          dragBoxInitialRegion.shift({\n            right: event.pageX - dragBoxInitialRegion.right - this.props.columnReorderScrollByAmount\n          });\n        } else {\n          dragBoxInitialRegion.shift({\n            left: event.pageX - dragBoxInitialRegion.left - this.props.columnReorderScrollByAmount\n          });\n        }\n      }\n      var dragBoxOffsets = (0, _defineProperty2.default)({\n        top: headerRegion.top\n      }, rtl ? 'right' : 'left', rtl ? headerRegion.right : headerRegion.left);\n      var extendedDragBoxProps = _objectSpread({}, dragBoxProps);\n      if (this.props.renderColumnReorderProxy) {\n        Object.assign(extendedDragBoxProps, {\n          renderColumnReorderProxy: this.props.renderColumnReorderProxy\n        });\n      }\n      dragProxy.setProps(extendedDragBoxProps);\n      var dragProxyPosition = (0, _defineProperty2.default)({\n        top: dragBoxInitialRegion.top - dragBoxOffsets.top\n      }, rtl ? 'right' : 'left', rtl ? dragBoxOffsets.right - dragBoxInitialRegion.right : dragBoxInitialRegion.left - dragBoxOffsets.left);\n      dragProxy.setHeight(dragBoxInitialRegion.height);\n      dragProxy.setWidth(dragBoxInitialRegion.width);\n      dragProxy.setTop(dragProxyPosition.top);\n      if (rtl) {\n        dragProxy.setRight(dragProxyPosition.right);\n      } else {\n        dragProxy.setLeft(dragProxyPosition.left);\n      }\n      var maxHeaderIndex = columns.length - (0, _getUndraggableSuccessiveCount.default)((0, _toConsumableArray2.default)(columns).reverse());\n      var minHeaderIndex = (0, _getUndraggableSuccessiveCount.default)(columns);\n      var validDropPositions = columns.reduce(function (acc, col, i) {\n        acc[i] = true;\n        return acc;\n      }, {});\n      validDropPositions[columns.length] = true;\n      if (this.props.groups && this.props.groups.length && !this.props.allowGroupSplitOnReorder) {\n        validDropPositions = getValidDropPositions({\n          dragTargetDepth: dragTargetDepth,\n          dragTargetIndex: dragTargetIndex,\n          dragTargetLength: dragTargetLength,\n          parentsForColumns: parentsForColumns,\n          lockedForColumns: columns.map(function (c) {\n            return c.computedLocked;\n          }),\n          columns: columns,\n          allowGroupSplitOnReorder: this.props.allowGroupSplitOnReorder,\n          maxDepth: this.props.computedGroupsDepth + 1\n        });\n      }\n      if (validDropPositions && !validDropPositions[dragIndex] && dragTarget != 'group') {\n        validDropPositions[dragIndex] = true;\n      }\n      var wrapperNode = this.headerDomNode ? this.headerDomNode.current : null;\n      var filterRowHeight = 0;\n      if (this.props.computedFilterable) {\n        var filterWrapperNode = wrapperNode.querySelector('.InovuaReactDataGrid__column-header__filter-wrapper');\n        if (filterWrapperNode) {\n          filterRowHeight = filterWrapperNode.offsetHeight;\n        }\n      }\n      DRAG_INFO = (_DRAG_INFO2 = {\n        allowTargetChange: allowTargetChange,\n        columnId: columnId,\n        headerRegion: headerRegion,\n        headerDragColumn: headerDragColumn,\n        minHeaderIndex: minHeaderIndex,\n        maxHeaderIndex: maxHeaderIndex,\n        dragColumn: dragColumn,\n        dragColumnsIds: dragTarget == 'headergroup' ? dragBox.props.columns : null,\n        dragBox: dragBox,\n        dragBoxInitialRegion: dragBoxInitialRegion,\n        dragBoxRegion: dragBoxInitialRegion.clone(),\n        dragBoxProps: dragBoxProps,\n        dragBoxOffsets: dragBoxOffsets,\n        dragProxy: dragProxy,\n        dragProxyInitialPosition: dragProxyPosition,\n        dragTarget: dragTarget,\n        dropTarget: dragTarget,\n        dragIndex: dragIndex,\n        columnRanges: columnRanges,\n        groupByRanges: groupByRanges,\n        parentsForColumns: parentsForColumns,\n        dragTargetIndex: dragTargetIndex,\n        dragTargetDepth: dragTargetDepth,\n        dragTargetLength: dragTargetLength,\n        scrollLeftMax: this.props.getScrollLeftMax(),\n        initialScrollLeft: initialScrollLeft\n      }, (0, _defineProperty2.default)(_DRAG_INFO2, \"headerRegion\", headerRegion), (0, _defineProperty2.default)(_DRAG_INFO2, \"validDropPositions\", validDropPositions), _DRAG_INFO2);\n      var groupToolbarNode = this.groupToolbar.current ? this.groupToolbar.current.domRef ? this.groupToolbar.current.domRef.current : null : null;\n      var headerGroupTargetNode = wrapperNode;\n      var groupTargetNode = groupToolbarNode || this.headerDomNode.current;\n      var groupComputedStyle = getComputedStyle(groupTargetNode);\n      DRAG_INFO.reorderProxyPosition = {\n        group: {\n          top: parseInt(groupComputedStyle.paddingTop),\n          bottom: groupTargetNode.offsetHeight - parseInt(groupComputedStyle.paddingBottom)\n        },\n        header: {\n          top: this.props.computedGroupBy ? groupToolbarNode ? groupTargetNode.offsetHeight : this.headerDomNode.current.offsetTop : 0,\n          bottom: headerGroupTargetNode.offsetHeight - filterRowHeight\n        },\n        headergroup: {\n          top: this.props.computedGroupBy ? groupToolbarNode ? groupTargetNode.offsetHeight : this.headerDomNode.current.offsetTop : 0,\n          bottom: headerGroupTargetNode.offsetHeight - filterRowHeight\n        }\n      };\n      this.setReorderArrowAt(dragIndex, dragTarget === 'group' ? groupByRanges : columnRanges, dragTarget);\n      this.setReorderArrowPosition(undefined, dragTarget);\n      dragProxy.setDragging(true);\n      this.props.coverHandleRef.current.setActive(true);\n      this.props.coverHandleRef.current.setCursor('grabbing');\n      var headerNode = this.headerDomNode ? this.headerDomNode.current : null;\n      (0, _setupColumnDrag.default)({\n        constrainTo: this.props.constrainReorder ? _region.default.from(headerNode.parentNode) : undefined,\n        region: dragBoxInitialRegion\n      }, {\n        onDrag: this.onHeaderCellDrag,\n        onDrop: this.onHeaderCellDrop\n      }, event);\n    }\n  }, {\n    key: \"onHeaderCellDrop\",\n    value: function onHeaderCellDrop() {\n      var _this4 = this;\n      this.props.coverHandleRef.current.setActive(false);\n      delete this._dragIndex;\n      var dropIndex = this.dropIndex,\n        props = this.props;\n      if (dropIndex === undefined || !DRAG_INFO) {\n        if (DRAG_INFO) {\n          DRAG_INFO.dragProxy.setDragging(false);\n        }\n        this.setReorderArrowVisible(false);\n        DRAG_INFO = null;\n        return;\n      }\n      var _DRAG_INFO3 = DRAG_INFO,\n        dragColumn = _DRAG_INFO3.dragColumn,\n        columnId = _DRAG_INFO3.columnId,\n        dragColumnsIds = _DRAG_INFO3.dragColumnsIds,\n        dragTarget = _DRAG_INFO3.dragTarget,\n        dropTarget = _DRAG_INFO3.dropTarget,\n        dragProxy = _DRAG_INFO3.dragProxy,\n        newLocked = _DRAG_INFO3.newLocked;\n      var _DRAG_INFO4 = DRAG_INFO,\n        dragIndex = _DRAG_INFO4.dragIndex;\n      DRAG_INFO = null;\n      this.setReorderArrowVisible(false);\n      dragProxy.setDragging(false);\n      var columns = this.props.visibleColumns;\n      var currentLocked = columns[dragIndex].computedLocked;\n      if (dropIndex == dragIndex && newLocked === currentLocked && dragTarget == dropTarget) {\n        return;\n      }\n      if (this.props.virtualizeColumns) {\n        setTimeout(function () {\n          _this4.header.updateColumns();\n        }, 10);\n      }\n      if (dragTarget == 'headergroup') {\n        if (dropIndex == dragIndex && dragTarget == dropTarget && newLocked === currentLocked) {\n          return;\n        }\n        if (columns[dropIndex]) {\n          this.moveColumnsBeforeIndex(dragColumnsIds, columns[dropIndex].computedVisibleIndex, newLocked);\n        } else if (dropIndex == columns.length) {\n          var col = columns[columns.length - 1];\n          if (col) {\n            this.moveColumnsBeforeIndex(dragColumnsIds, col.computedVisibleIndex + 1, newLocked);\n          }\n        }\n        return;\n      }\n      var visibleColumns = props.visibleColumns,\n        groupBy = props.computedGroupBy;\n      if (dropTarget == dragTarget) {\n        if (dragTarget == 'group') {\n          this.setGroupBy((0, _moveXBeforeY.default)(groupBy, dragIndex, dropIndex));\n        }\n        if (dragTarget == 'header') {\n          this.moveColumnsBeforeIndex([columnId], dropIndex, newLocked);\n        }\n      }\n      if (dragTarget == 'header' && dropTarget == 'group') {\n        var groupByColumn = visibleColumns[dragIndex];\n        var newGroupBy = [].concat(groupBy);\n        newGroupBy.splice(dropIndex, 0, groupByColumn.id);\n        this.setGroupBy(newGroupBy);\n      }\n      if (dragTarget == 'group' && dropTarget == 'header') {\n        this.ungroupColumnToIndex(columnId, dropIndex);\n      }\n    }\n  }, {\n    key: \"ungroupColumnToIndex\",\n    value: function ungroupColumnToIndex(columnId, dropIndex) {\n      var props = this.props;\n      var allColumns = props.allColumns,\n        visibleColumns = props.visibleColumns;\n      var dragColumn = allColumns.filter(function (c) {\n        return c.id === columnId;\n      })[0];\n      var newGroupBy = [].concat(this.props.computedGroupBy).filter(function (g) {\n        return g != columnId;\n      });\n      var columnAtDropIndex = visibleColumns[dropIndex];\n      if (columnAtDropIndex && columnAtDropIndex.id === columnId) {\n        this.setGroupBy(newGroupBy);\n        return;\n      }\n      var order = getColumnOrder(props, function (c) {\n        return c.id !== columnId;\n      });\n      var insertIndex = columnAtDropIndex ? order.indexOf(columnAtDropIndex.id) : order.length;\n      order.splice(insertIndex, 0, columnId);\n      var columnAtDropIndexOrLast = columnAtDropIndex || visibleColumns[visibleColumns.length - 1];\n      if (columnAtDropIndexOrLast.computedLocked != dragColumn.computedLocked) {\n        this.props.setColumnLocked(columnId, columnAtDropIndexOrLast.computedLocked);\n      }\n      this.setGroupBy(newGroupBy);\n      this.setColumnOrder(order);\n    }\n  }, {\n    key: \"moveColumnsBeforeIndex\",\n    value: function moveColumnsBeforeIndex(columnsIds, dropIndex, newLocked) {\n      var _this5 = this;\n      var props = this.props;\n      var visibleColumns = props.visibleColumns,\n        columnVisibilityMap = props.columnVisibilityMap,\n        allowGroupSplitOnReorder = props.allowGroupSplitOnReorder;\n      var columnOrder = getColumnOrder(props);\n      var columns = visibleColumns.filter(function (col) {\n        return columnsIds.indexOf(col.id) != -1;\n      });\n      var dragColumnsIndexesInAllColumns = columnsIds.map(function (columnId) {\n        return columnOrder.indexOf(columnId);\n      });\n      var dropBeforeIndexInAllColumns = visibleColumns[dropIndex] ? columnOrder.indexOf(visibleColumns[dropIndex].id) : columnOrder.length;\n      var firstDragIndex = dragColumnsIndexesInAllColumns[0];\n      if (!allowGroupSplitOnReorder && firstDragIndex < dropBeforeIndexInAllColumns) {\n        while (true) {\n          var columnRightBefore = columnOrder[dropBeforeIndexInAllColumns - 1];\n          if (columnRightBefore && columnVisibilityMap[columnRightBefore] === false) {\n            dropBeforeIndexInAllColumns--;\n            continue;\n          }\n          break;\n        }\n      }\n      var targetColumn = visibleColumns[dropIndex] || visibleColumns[visibleColumns.length - 1];\n      columns.forEach(function (col) {\n        if (newLocked != col.computedLocked) {\n          _this5.props.setColumnLocked(col.id, newLocked);\n        }\n      });\n      var newColumnOrder = (0, _moveXBeforeY.default)(columnOrder, dragColumnsIndexesInAllColumns, dropBeforeIndexInAllColumns);\n      this.setColumnOrder(newColumnOrder);\n    }\n  }, {\n    key: \"onHeaderCellDrag\",\n    value: function onHeaderCellDrag(_ref7) {\n      var diffLeft = _ref7.left,\n        diffTop = _ref7.top;\n      if (!DRAG_INFO) {\n        return;\n      }\n      var _DRAG_INFO5 = DRAG_INFO,\n        allowTargetChange = _DRAG_INFO5.allowTargetChange,\n        dragTarget = _DRAG_INFO5.dragTarget,\n        dragIndex = _DRAG_INFO5.dragIndex,\n        dragProxy = _DRAG_INFO5.dragProxy,\n        dragColumn = _DRAG_INFO5.dragColumn,\n        dragBoxInitialRegion = _DRAG_INFO5.dragBoxInitialRegion,\n        dragBoxOffsets = _DRAG_INFO5.dragBoxOffsets,\n        dragBoxRegion = _DRAG_INFO5.dragBoxRegion,\n        groupByRanges = _DRAG_INFO5.groupByRanges,\n        theRanges = _DRAG_INFO5.columnRanges,\n        headerRegion = _DRAG_INFO5.headerRegion,\n        scrollLeftMax = _DRAG_INFO5.scrollLeftMax,\n        initialScrollLeft = _DRAG_INFO5.initialScrollLeft,\n        validDropPositions = _DRAG_INFO5.validDropPositions;\n      dragBoxRegion.set({\n        left: dragBoxInitialRegion.left,\n        top: dragBoxInitialRegion.top,\n        bottom: dragBoxInitialRegion.bottom,\n        right: dragBoxInitialRegion.right\n      });\n      var _DRAG_INFO6 = DRAG_INFO,\n        dropTarget = _DRAG_INFO6.dropTarget;\n      var _this$props2 = this.props,\n        columnReorderScrollByAmount = _this$props2.columnReorderScrollByAmount,\n        rtl = _this$props2.rtl;\n      var scrollLeft = this.getScrollLeft();\n      var scrollDiff = scrollLeft - initialScrollLeft;\n      var initialDiffLeft = diffLeft;\n      dragBoxRegion.shift({\n        top: diffTop,\n        left: diffLeft\n      });\n      diffLeft += scrollDiff;\n      var minScrollLeft = Math.max(headerRegion.left, 0);\n      var maxScrollRight = headerRegion.right;\n      var groupToolbarNode = this.groupToolbar && this.groupToolbar.current && this.groupToolbar.current.domRef ? this.groupToolbar.current.domRef.current : null;\n      if (this.groupToolbar.current && allowTargetChange) {\n        var groupToolbarRegion = _region.default.from(groupToolbarNode);\n        if (dragBoxRegion.top + dragBoxRegion.height / 2 < groupToolbarRegion.bottom) {\n          if (dropTarget !== 'group' && dragColumn.groupBy !== false) {\n            dropTarget = DRAG_INFO.dropTarget = 'group';\n          }\n        } else {\n          if (dropTarget != 'header') {\n            dropTarget = DRAG_INFO.dropTarget = 'header';\n          }\n        }\n      }\n      var scrollAdjust = 0;\n      var dragProxyAdjust = 0;\n      var dragComputedLocked = this.props.visibleColumns[dragIndex].computedLocked;\n      if (dropTarget == 'header' || dropTarget == 'headergroup') {\n        if (dragBoxInitialRegion.left + initialDiffLeft - this.props.totalLockedStartWidth < minScrollLeft + SCROLL_MARGIN && initialDiffLeft < 0) {\n          scrollAdjust = -columnReorderScrollByAmount;\n        } else if (dragBoxInitialRegion.right + initialDiffLeft > maxScrollRight - SCROLL_MARGIN - this.props.totalLockedEndWidth && initialDiffLeft > 0) {\n          scrollAdjust = columnReorderScrollByAmount;\n        }\n        if (scrollAdjust) {\n          if (scrollLeft + scrollAdjust < 0) {\n            scrollAdjust = -scrollLeft;\n          }\n          if (scrollLeft + scrollAdjust > scrollLeftMax) {\n            scrollAdjust = scrollLeftMax - scrollLeft;\n          }\n          if (scrollAdjust) {\n            this.setScrollLeft(scrollLeft + scrollAdjust);\n            dragProxyAdjust = scrollAdjust;\n          }\n        }\n      }\n      if (rtl) {\n        dragProxy.setRight(dragBoxOffsets.right + -initialDiffLeft - dragBoxInitialRegion.right - dragProxyAdjust);\n      } else {\n        dragProxy.setLeft(dragBoxInitialRegion.left + initialDiffLeft - dragBoxOffsets.left - dragProxyAdjust);\n      }\n      dragProxy.setTop(dragBoxRegion.top - dragBoxOffsets.top);\n      var dir = dropTarget == 'group' && dragTarget == 'group' ? initialDiffLeft < 0 ? -1 : 1 : dragTarget != dropTarget || diffLeft < 0 ? -1 : 1;\n      if (dragComputedLocked) {\n        dir = initialDiffLeft < 0 ? -1 : 1;\n      }\n      if (rtl) {\n        dir *= -1;\n      }\n      var mapRange = function mapRange(r) {\n        if (!r.computedLocked) {\n          return _objectSpread(_objectSpread({}, r), {}, {\n            left: r.left - scrollDiff,\n            right: r.right - scrollDiff\n          });\n        }\n        return r;\n      };\n      var currentRanges = dropTarget === 'group' ? groupByRanges : theRanges;\n      var ranges = currentRanges.map(mapRange);\n      var compareRanges = currentRanges.map(mapRange);\n      var dragMinIndex = dropTarget == 'header' ? DRAG_INFO.minHeaderIndex : undefined;\n      var dragMaxIndex = dropTarget == 'header' ? DRAG_INFO.maxHeaderIndex : undefined;\n      var dropIndex;\n      var _getDropIndex = (0, _getDropIndex2.default)({\n          dir: dir,\n          rtl: rtl,\n          dragMinIndex: dragMinIndex,\n          dragMaxIndex: dragMaxIndex,\n          dragTarget: dragTarget,\n          dropTarget: dropTarget,\n          dragRange: _objectSpread(_objectSpread({}, ranges[dragIndex]), {}, {\n            left: dragBoxRegion.left,\n            right: dragBoxRegion.right,\n            index: dragIndex\n          }),\n          dragIndex: dragIndex,\n          ranges: compareRanges,\n          validDropPositions: dropTarget === dragTarget ? validDropPositions : undefined\n        }),\n        newDropIndex = _getDropIndex.index,\n        locked = _getDropIndex.locked;\n      DRAG_INFO.newLocked = locked;\n      if (newDropIndex != undefined) {\n        dropIndex = newDropIndex;\n      }\n      var offset = 0;\n      var visible;\n      if (locked === 'start' && newDropIndex === this.props.firstUnlockedIndex) {\n        offset = (rtl ? -1 : 1) * -11;\n      }\n      if (newDropIndex === this.props.firstLockedEndIndex && dragIndex !== this.props.firstLockedEndIndex) {\n        if (locked === 'end') {\n          offset = (rtl ? -1 : 1) * 4;\n        } else if (!locked) {\n          offset = (rtl ? -1 : 1) * -6;\n        }\n      }\n      if (newDropIndex === this.props.visibleColumns.length) {\n        offset = rtl ? 6 : -6;\n      }\n      if (locked == null && dragComputedLocked === 'end' && newDropIndex === this.props.firstLockedEndIndex) {\n        visible = true;\n      }\n      this.dropIndex = dropIndex;\n      this.setReorderArrowPosition(undefined, dropTarget);\n      this.setReorderArrowAt(dropIndex, compareRanges, dropTarget, offset, visible);\n    }\n  }, {\n    key: \"setColumnOrder\",\n    value: function setColumnOrder(newColumnOrder) {\n      var columnOrder = getColumnOrder(this.props);\n      if (this.props.setColumnOrder && JSON.stringify(columnOrder) !== JSON.stringify(newColumnOrder)) {\n        this.props.setColumnOrder(newColumnOrder);\n      }\n    }\n  }, {\n    key: \"setGroupBy\",\n    value: function setGroupBy(groupBy) {\n      if (this.props.onGroupByChange && JSON.stringify(groupBy) !== JSON.stringify(this.props.computedGroupBy)) {\n        this.props.onGroupByChange(groupBy);\n      }\n    }\n  }, {\n    key: \"insertGroupBy\",\n    value: function insertGroupBy(at, column) {\n      var props = this.props;\n      var order = (0, _toConsumableArray2.default)(props.computedGroupBy);\n      order.splice(at, 0, column.id);\n      this.setGroupBy(order);\n    }\n  }]);\n  return InovuaDataGridHeaderLayout;\n}(_reactClass.default);\nexports.default = InovuaDataGridHeaderLayout;\nInovuaDataGridHeaderLayout.propTypes = {\n  i18n: _propTypes.default.func.isRequired,\n  renderGroupToolbar: _propTypes.default.func,\n  renderDragGroupItem: _propTypes.default.func,\n  getScrollLeftMax: _propTypes.default.func.isRequired,\n  setScrollLeft: _propTypes.default.func.isRequired,\n  renderColumnReorderProxy: _propTypes.default.func,\n  stickyHeader: _propTypes.default.bool\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script"}