{"ast":null,"code":"/** \n * Copyright © INOVUA TRADING.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _default = function _default(_ref) {\n  var size = _ref.size,\n    scrollTop = _ref.scrollTop,\n    count = _ref.count,\n    rowHeightManager = _ref.rowHeightManager,\n    naturalRowHeight = _ref.naturalRowHeight,\n    showEmptyRows = _ref.showEmptyRows;\n  var start = rowHeightManager.getRowAt(scrollTop);\n  var end = naturalRowHeight ? rowHeightManager.getRowAt(scrollTop + size.height) + 1 : start + Math.ceil(size.height / rowHeightManager.getDefaultRowHeight());\n  if (!showEmptyRows) {\n    end = Math.min(count - 1, end);\n  }\n  return {\n    start: start,\n    end: end\n  };\n};\nexports.default = _default;","map":{"version":3,"names":["Object","defineProperty","exports","value","default","_default","_ref","size","scrollTop","count","rowHeightManager","naturalRowHeight","showEmptyRows","start","getRowAt","end","height","Math","ceil","getDefaultRowHeight","min"],"sources":["/Users/alexandre.nepomuceno/Documents/agenda/node_modules/@inovua/reactdatagrid-community/packages/react-virtual-list-pro/src/getVisibleRange.js"],"sourcesContent":["/** \n * Copyright © INOVUA TRADING.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _default = function _default(_ref) {\n  var size = _ref.size,\n    scrollTop = _ref.scrollTop,\n    count = _ref.count,\n    rowHeightManager = _ref.rowHeightManager,\n    naturalRowHeight = _ref.naturalRowHeight,\n    showEmptyRows = _ref.showEmptyRows;\n  var start = rowHeightManager.getRowAt(scrollTop);\n  var end = naturalRowHeight ? rowHeightManager.getRowAt(scrollTop + size.height) + 1 : start + Math.ceil(size.height / rowHeightManager.getDefaultRowHeight());\n  if (!showEmptyRows) {\n    end = Math.min(count - 1, end);\n  }\n  return {\n    start: start,\n    end: end\n  };\n};\nexports.default = _default;"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;;AAEZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAC3CC,KAAK,EAAE;AACT,CAAC,CAAC;AACFD,OAAO,CAACE,OAAO,GAAG,KAAK,CAAC;AACxB,IAAIC,QAAQ,GAAG,SAASA,QAAQA,CAACC,IAAI,EAAE;EACrC,IAAIC,IAAI,GAAGD,IAAI,CAACC,IAAI;IAClBC,SAAS,GAAGF,IAAI,CAACE,SAAS;IAC1BC,KAAK,GAAGH,IAAI,CAACG,KAAK;IAClBC,gBAAgB,GAAGJ,IAAI,CAACI,gBAAgB;IACxCC,gBAAgB,GAAGL,IAAI,CAACK,gBAAgB;IACxCC,aAAa,GAAGN,IAAI,CAACM,aAAa;EACpC,IAAIC,KAAK,GAAGH,gBAAgB,CAACI,QAAQ,CAACN,SAAS,CAAC;EAChD,IAAIO,GAAG,GAAGJ,gBAAgB,GAAGD,gBAAgB,CAACI,QAAQ,CAACN,SAAS,GAAGD,IAAI,CAACS,MAAM,CAAC,GAAG,CAAC,GAAGH,KAAK,GAAGI,IAAI,CAACC,IAAI,CAACX,IAAI,CAACS,MAAM,GAAGN,gBAAgB,CAACS,mBAAmB,CAAC,CAAC,CAAC;EAC7J,IAAI,CAACP,aAAa,EAAE;IAClBG,GAAG,GAAGE,IAAI,CAACG,GAAG,CAACX,KAAK,GAAG,CAAC,EAAEM,GAAG,CAAC;EAChC;EACA,OAAO;IACLF,KAAK,EAAEA,KAAK;IACZE,GAAG,EAAEA;EACP,CAAC;AACH,CAAC;AACDb,OAAO,CAACE,OAAO,GAAGC,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"script"}