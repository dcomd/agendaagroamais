{"ast":null,"code":"/**\n * Copyright Â© INOVUA TRADING.\n *\n * This source code is licensed under the Commercial License found in the\n * LICENSE file in the root directory of this source tree.\n */\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar editedTreeData = function editedTreeData(editProps, computedPropsRef) {\n  var computedProps = computedPropsRef.current;\n  if (!computedProps) {\n    return null;\n  }\n  var originalData = computedProps.originalData;\n  var nodesName = computedProps.nodesProperty;\n  var rowIndex = editProps.rowIndex;\n  var columnId = editProps.columnId;\n  var value = editProps.value;\n  var clonedData = [].concat(originalData);\n  var computeData = function computeData(dataArray) {\n    var result = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n    var rowIdx = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n    var startIndex = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n    for (var i = 0; i < dataArray.length; i++) {\n      var item = dataArray[i];\n      if (item) {\n        var itemNodes = item[nodesName];\n        result.push(item);\n        rowIdx = startIndex + i;\n        if (rowIdx === rowIndex) {\n          item[columnId] = value;\n        }\n        if (Array.isArray(itemNodes)) {\n          var startFrom = result.length;\n          computeData(itemNodes, result, rowIdx, startFrom);\n          startIndex += result.length - startFrom;\n        }\n      }\n    }\n  };\n  computeData(clonedData);\n  return clonedData;\n};\nvar _default = editedTreeData;\nexports.default = _default;","map":{"version":3,"names":["Object","defineProperty","exports","value","default","editedTreeData","editProps","computedPropsRef","computedProps","current","originalData","nodesName","nodesProperty","rowIndex","columnId","clonedData","concat","computeData","dataArray","result","arguments","length","undefined","rowIdx","startIndex","i","item","itemNodes","push","Array","isArray","startFrom","_default"],"sources":["/Users/alexandre.nepomuceno/Documents/agenda/node_modules/@inovua/reactdatagrid-enterprise/plugins/tree/tree/editedTreeData.js"],"sourcesContent":["/**\n * Copyright Â© INOVUA TRADING.\n *\n * This source code is licensed under the Commercial License found in the\n * LICENSE file in the root directory of this source tree.\n */\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar editedTreeData = function editedTreeData(editProps, computedPropsRef) {\n  var computedProps = computedPropsRef.current;\n  if (!computedProps) {\n    return null;\n  }\n  var originalData = computedProps.originalData;\n  var nodesName = computedProps.nodesProperty;\n  var rowIndex = editProps.rowIndex;\n  var columnId = editProps.columnId;\n  var value = editProps.value;\n  var clonedData = [].concat(originalData);\n  var computeData = function computeData(dataArray) {\n    var result = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n    var rowIdx = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n    var startIndex = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n    for (var i = 0; i < dataArray.length; i++) {\n      var item = dataArray[i];\n      if (item) {\n        var itemNodes = item[nodesName];\n        result.push(item);\n        rowIdx = startIndex + i;\n        if (rowIdx === rowIndex) {\n          item[columnId] = value;\n        }\n        if (Array.isArray(itemNodes)) {\n          var startFrom = result.length;\n          computeData(itemNodes, result, rowIdx, startFrom);\n          startIndex += result.length - startFrom;\n        }\n      }\n    }\n  };\n  computeData(clonedData);\n  return clonedData;\n};\nvar _default = editedTreeData;\nexports.default = _default;"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;;AAEZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAC3CC,KAAK,EAAE;AACT,CAAC,CAAC;AACFD,OAAO,CAACE,OAAO,GAAG,KAAK,CAAC;AACxB,IAAIC,cAAc,GAAG,SAASA,cAAcA,CAACC,SAAS,EAAEC,gBAAgB,EAAE;EACxE,IAAIC,aAAa,GAAGD,gBAAgB,CAACE,OAAO;EAC5C,IAAI,CAACD,aAAa,EAAE;IAClB,OAAO,IAAI;EACb;EACA,IAAIE,YAAY,GAAGF,aAAa,CAACE,YAAY;EAC7C,IAAIC,SAAS,GAAGH,aAAa,CAACI,aAAa;EAC3C,IAAIC,QAAQ,GAAGP,SAAS,CAACO,QAAQ;EACjC,IAAIC,QAAQ,GAAGR,SAAS,CAACQ,QAAQ;EACjC,IAAIX,KAAK,GAAGG,SAAS,CAACH,KAAK;EAC3B,IAAIY,UAAU,GAAG,EAAE,CAACC,MAAM,CAACN,YAAY,CAAC;EACxC,IAAIO,WAAW,GAAG,SAASA,WAAWA,CAACC,SAAS,EAAE;IAChD,IAAIC,MAAM,GAAGC,SAAS,CAACC,MAAM,GAAG,CAAC,IAAID,SAAS,CAAC,CAAC,CAAC,KAAKE,SAAS,GAAGF,SAAS,CAAC,CAAC,CAAC,GAAG,EAAE;IACnF,IAAIG,MAAM,GAAGH,SAAS,CAACC,MAAM,GAAG,CAAC,IAAID,SAAS,CAAC,CAAC,CAAC,KAAKE,SAAS,GAAGF,SAAS,CAAC,CAAC,CAAC,GAAG,CAAC;IAClF,IAAII,UAAU,GAAGJ,SAAS,CAACC,MAAM,GAAG,CAAC,IAAID,SAAS,CAAC,CAAC,CAAC,KAAKE,SAAS,GAAGF,SAAS,CAAC,CAAC,CAAC,GAAG,CAAC;IACtF,KAAK,IAAIK,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGP,SAAS,CAACG,MAAM,EAAEI,CAAC,EAAE,EAAE;MACzC,IAAIC,IAAI,GAAGR,SAAS,CAACO,CAAC,CAAC;MACvB,IAAIC,IAAI,EAAE;QACR,IAAIC,SAAS,GAAGD,IAAI,CAACf,SAAS,CAAC;QAC/BQ,MAAM,CAACS,IAAI,CAACF,IAAI,CAAC;QACjBH,MAAM,GAAGC,UAAU,GAAGC,CAAC;QACvB,IAAIF,MAAM,KAAKV,QAAQ,EAAE;UACvBa,IAAI,CAACZ,QAAQ,CAAC,GAAGX,KAAK;QACxB;QACA,IAAI0B,KAAK,CAACC,OAAO,CAACH,SAAS,CAAC,EAAE;UAC5B,IAAII,SAAS,GAAGZ,MAAM,CAACE,MAAM;UAC7BJ,WAAW,CAACU,SAAS,EAAER,MAAM,EAAEI,MAAM,EAAEQ,SAAS,CAAC;UACjDP,UAAU,IAAIL,MAAM,CAACE,MAAM,GAAGU,SAAS;QACzC;MACF;IACF;EACF,CAAC;EACDd,WAAW,CAACF,UAAU,CAAC;EACvB,OAAOA,UAAU;AACnB,CAAC;AACD,IAAIiB,QAAQ,GAAG3B,cAAc;AAC7BH,OAAO,CAACE,OAAO,GAAG4B,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"script"}