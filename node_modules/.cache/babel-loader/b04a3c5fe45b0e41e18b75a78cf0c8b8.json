{"ast":null,"code":"/** \n * Copyright © INOVUA TRADING.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar emptyObject = {};\nvar _default = function _default(columns) {\n  var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : emptyObject,\n    showWarnings = _ref.showWarnings;\n  return columns.reduce(function (acc, col) {\n    if (col.id) {\n      if (showWarnings && acc[col.id]) {\n        console.error(\"Duplicate column with id \\\"\".concat(col.id, \"\\\" found!\"));\n      }\n      acc[col.id] = col;\n    }\n    if (col.name && col.name != col.id) {\n      if (showWarnings && !col.id && acc[col.name]) {\n        console.error(\"Duplicate column with name \\\"\".concat(col.name, \"\\\" found!\"));\n      }\n      if (!col.id) {\n        acc[col.name] = col;\n      }\n    }\n    if (typeof col.groupBy == 'string' || col.groupByName) {\n      var key = col.groupBy || col.groupByName;\n      acc[key] = col;\n    }\n    return acc;\n  }, {});\n};\nexports.default = _default;","map":{"version":3,"names":["Object","defineProperty","exports","value","default","emptyObject","_default","columns","_ref","arguments","length","undefined","showWarnings","reduce","acc","col","id","console","error","concat","name","groupBy","groupByName","key"],"sources":["/Users/alexandre.nepomuceno/Documents/agenda/node_modules/@inovua/reactdatagrid-community/mapColumns.js"],"sourcesContent":["/** \n * Copyright © INOVUA TRADING.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar emptyObject = {};\nvar _default = function _default(columns) {\n  var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : emptyObject,\n    showWarnings = _ref.showWarnings;\n  return columns.reduce(function (acc, col) {\n    if (col.id) {\n      if (showWarnings && acc[col.id]) {\n        console.error(\"Duplicate column with id \\\"\".concat(col.id, \"\\\" found!\"));\n      }\n      acc[col.id] = col;\n    }\n    if (col.name && col.name != col.id) {\n      if (showWarnings && !col.id && acc[col.name]) {\n        console.error(\"Duplicate column with name \\\"\".concat(col.name, \"\\\" found!\"));\n      }\n      if (!col.id) {\n        acc[col.name] = col;\n      }\n    }\n    if (typeof col.groupBy == 'string' || col.groupByName) {\n      var key = col.groupBy || col.groupByName;\n      acc[key] = col;\n    }\n    return acc;\n  }, {});\n};\nexports.default = _default;"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;;AAEZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAC3CC,KAAK,EAAE;AACT,CAAC,CAAC;AACFD,OAAO,CAACE,OAAO,GAAG,KAAK,CAAC;AACxB,IAAIC,WAAW,GAAG,CAAC,CAAC;AACpB,IAAIC,QAAQ,GAAG,SAASA,QAAQA,CAACC,OAAO,EAAE;EACxC,IAAIC,IAAI,GAAGC,SAAS,CAACC,MAAM,GAAG,CAAC,IAAID,SAAS,CAAC,CAAC,CAAC,KAAKE,SAAS,GAAGF,SAAS,CAAC,CAAC,CAAC,GAAGJ,WAAW;IACxFO,YAAY,GAAGJ,IAAI,CAACI,YAAY;EAClC,OAAOL,OAAO,CAACM,MAAM,CAAC,UAAUC,GAAG,EAAEC,GAAG,EAAE;IACxC,IAAIA,GAAG,CAACC,EAAE,EAAE;MACV,IAAIJ,YAAY,IAAIE,GAAG,CAACC,GAAG,CAACC,EAAE,CAAC,EAAE;QAC/BC,OAAO,CAACC,KAAK,CAAC,6BAA6B,CAACC,MAAM,CAACJ,GAAG,CAACC,EAAE,EAAE,WAAW,CAAC,CAAC;MAC1E;MACAF,GAAG,CAACC,GAAG,CAACC,EAAE,CAAC,GAAGD,GAAG;IACnB;IACA,IAAIA,GAAG,CAACK,IAAI,IAAIL,GAAG,CAACK,IAAI,IAAIL,GAAG,CAACC,EAAE,EAAE;MAClC,IAAIJ,YAAY,IAAI,CAACG,GAAG,CAACC,EAAE,IAAIF,GAAG,CAACC,GAAG,CAACK,IAAI,CAAC,EAAE;QAC5CH,OAAO,CAACC,KAAK,CAAC,+BAA+B,CAACC,MAAM,CAACJ,GAAG,CAACK,IAAI,EAAE,WAAW,CAAC,CAAC;MAC9E;MACA,IAAI,CAACL,GAAG,CAACC,EAAE,EAAE;QACXF,GAAG,CAACC,GAAG,CAACK,IAAI,CAAC,GAAGL,GAAG;MACrB;IACF;IACA,IAAI,OAAOA,GAAG,CAACM,OAAO,IAAI,QAAQ,IAAIN,GAAG,CAACO,WAAW,EAAE;MACrD,IAAIC,GAAG,GAAGR,GAAG,CAACM,OAAO,IAAIN,GAAG,CAACO,WAAW;MACxCR,GAAG,CAACS,GAAG,CAAC,GAAGR,GAAG;IAChB;IACA,OAAOD,GAAG;EACZ,CAAC,EAAE,CAAC,CAAC,CAAC;AACR,CAAC;AACDZ,OAAO,CAACE,OAAO,GAAGE,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"script"}