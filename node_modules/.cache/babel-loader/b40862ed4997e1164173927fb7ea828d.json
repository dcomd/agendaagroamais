{"ast":null,"code":"/** \n * Copyright © INOVUA TRADING.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\nvar _default = function _default(_ref) {\n  var visibleColumns = _ref.visibleColumns,\n    availableWidth = _ref.availableWidth,\n    lockedStartColumns = _ref.lockedStartColumns,\n    lockedEndColumns = _ref.lockedEndColumns,\n    virtualizeColumns = _ref.virtualizeColumns;\n  if (virtualizeColumns === false) {\n    return visibleColumns.length;\n  }\n  var columns = (0, _toConsumableArray2.default)(visibleColumns).sort(function (a, b) {\n    return a.computedWidth - b.computedWidth;\n  });\n  var columnWidthPrefixSums = [];\n  var widthSum = 0;\n  var accumulateWidth = 0;\n  var columnRenderCount = 0;\n  columns.forEach(function (col) {\n    columnWidthPrefixSums.push(widthSum);\n    widthSum += col.computedWidth;\n    if (accumulateWidth <= availableWidth) {\n      columnRenderCount++;\n      accumulateWidth += col.computedWidth;\n    }\n  });\n  columnRenderCount += 1;\n  if (lockedStartColumns && lockedStartColumns.length) {\n    columnRenderCount -= lockedStartColumns.length;\n  }\n  if (lockedEndColumns && lockedEndColumns.length) {\n    columnRenderCount -= lockedEndColumns.length;\n  }\n  return columnRenderCount;\n};\nexports.default = _default;","map":{"version":3,"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","default","_toConsumableArray2","_default","_ref","visibleColumns","availableWidth","lockedStartColumns","lockedEndColumns","virtualizeColumns","length","columns","sort","a","b","computedWidth","columnWidthPrefixSums","widthSum","accumulateWidth","columnRenderCount","forEach","col","push"],"sources":["/Users/alexandre.nepomuceno/Documents/agenda/node_modules/@inovua/reactdatagrid-community/getColumnRenderCount.js"],"sourcesContent":["/** \n * Copyright © INOVUA TRADING.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\nvar _default = function _default(_ref) {\n  var visibleColumns = _ref.visibleColumns,\n    availableWidth = _ref.availableWidth,\n    lockedStartColumns = _ref.lockedStartColumns,\n    lockedEndColumns = _ref.lockedEndColumns,\n    virtualizeColumns = _ref.virtualizeColumns;\n  if (virtualizeColumns === false) {\n    return visibleColumns.length;\n  }\n  var columns = (0, _toConsumableArray2.default)(visibleColumns).sort(function (a, b) {\n    return a.computedWidth - b.computedWidth;\n  });\n  var columnWidthPrefixSums = [];\n  var widthSum = 0;\n  var accumulateWidth = 0;\n  var columnRenderCount = 0;\n  columns.forEach(function (col) {\n    columnWidthPrefixSums.push(widthSum);\n    widthSum += col.computedWidth;\n    if (accumulateWidth <= availableWidth) {\n      columnRenderCount++;\n      accumulateWidth += col.computedWidth;\n    }\n  });\n  columnRenderCount += 1;\n  if (lockedStartColumns && lockedStartColumns.length) {\n    columnRenderCount -= lockedStartColumns.length;\n  }\n  if (lockedEndColumns && lockedEndColumns.length) {\n    columnRenderCount -= lockedEndColumns.length;\n  }\n  return columnRenderCount;\n};\nexports.default = _default;"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;;AAEZ,IAAIA,sBAAsB,GAAGC,OAAO,CAAC,8CAA8C,CAAC;AACpFC,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAC3CC,KAAK,EAAE;AACT,CAAC,CAAC;AACFD,OAAO,CAACE,OAAO,GAAG,KAAK,CAAC;AACxB,IAAIC,mBAAmB,GAAGP,sBAAsB,CAACC,OAAO,CAAC,0CAA0C,CAAC,CAAC;AACrG,IAAIO,QAAQ,GAAG,SAASA,QAAQA,CAACC,IAAI,EAAE;EACrC,IAAIC,cAAc,GAAGD,IAAI,CAACC,cAAc;IACtCC,cAAc,GAAGF,IAAI,CAACE,cAAc;IACpCC,kBAAkB,GAAGH,IAAI,CAACG,kBAAkB;IAC5CC,gBAAgB,GAAGJ,IAAI,CAACI,gBAAgB;IACxCC,iBAAiB,GAAGL,IAAI,CAACK,iBAAiB;EAC5C,IAAIA,iBAAiB,KAAK,KAAK,EAAE;IAC/B,OAAOJ,cAAc,CAACK,MAAM;EAC9B;EACA,IAAIC,OAAO,GAAG,CAAC,CAAC,EAAET,mBAAmB,CAACD,OAAO,EAAEI,cAAc,CAAC,CAACO,IAAI,CAAC,UAAUC,CAAC,EAAEC,CAAC,EAAE;IAClF,OAAOD,CAAC,CAACE,aAAa,GAAGD,CAAC,CAACC,aAAa;EAC1C,CAAC,CAAC;EACF,IAAIC,qBAAqB,GAAG,EAAE;EAC9B,IAAIC,QAAQ,GAAG,CAAC;EAChB,IAAIC,eAAe,GAAG,CAAC;EACvB,IAAIC,iBAAiB,GAAG,CAAC;EACzBR,OAAO,CAACS,OAAO,CAAC,UAAUC,GAAG,EAAE;IAC7BL,qBAAqB,CAACM,IAAI,CAACL,QAAQ,CAAC;IACpCA,QAAQ,IAAII,GAAG,CAACN,aAAa;IAC7B,IAAIG,eAAe,IAAIZ,cAAc,EAAE;MACrCa,iBAAiB,EAAE;MACnBD,eAAe,IAAIG,GAAG,CAACN,aAAa;IACtC;EACF,CAAC,CAAC;EACFI,iBAAiB,IAAI,CAAC;EACtB,IAAIZ,kBAAkB,IAAIA,kBAAkB,CAACG,MAAM,EAAE;IACnDS,iBAAiB,IAAIZ,kBAAkB,CAACG,MAAM;EAChD;EACA,IAAIF,gBAAgB,IAAIA,gBAAgB,CAACE,MAAM,EAAE;IAC/CS,iBAAiB,IAAIX,gBAAgB,CAACE,MAAM;EAC9C;EACA,OAAOS,iBAAiB;AAC1B,CAAC;AACDpB,OAAO,CAACE,OAAO,GAAGE,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"script"}