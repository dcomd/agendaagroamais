{"ast":null,"code":"/** \n * Copyright © INOVUA TRADING.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _default = function _default(rowProps) {\n  var rowSpans = {};\n  var data = rowProps.data,\n    rowIndex = rowProps.realIndex,\n    remoteRowIndex = rowProps.remoteRowIndex,\n    columns = rowProps.columns,\n    empty = rowProps.empty,\n    dataSourceArray = rowProps.dataSourceArray;\n  columns === null || columns === void 0 ? void 0 : columns.forEach(function (column) {\n    var name = column.name;\n    var rowspan = column.rowspan;\n    var value = data && name ? data[name] : null;\n    var computedRowspan = 1;\n    if (typeof rowspan === 'function') {\n      computedRowspan = rowspan({\n        dataSourceArray: dataSourceArray,\n        data: data,\n        value: value,\n        remoteRowIndex: remoteRowIndex,\n        rowIndex: rowIndex,\n        column: column,\n        columns: columns,\n        empty: empty\n      });\n      rowSpans[column.id] = computedRowspan;\n    }\n  });\n  return rowSpans;\n};\nexports.default = _default;","map":{"version":3,"names":["Object","defineProperty","exports","value","default","_default","rowProps","rowSpans","data","rowIndex","realIndex","remoteRowIndex","columns","empty","dataSourceArray","forEach","column","name","rowspan","computedRowspan","id"],"sources":["/Users/alexandre.nepomuceno/Documents/agendaagroamais/node_modules/@inovua/reactdatagrid-community/Layout/ColumnLayout/Content/getRowSpans.js"],"sourcesContent":["/** \n * Copyright © INOVUA TRADING.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _default = function _default(rowProps) {\n  var rowSpans = {};\n  var data = rowProps.data,\n    rowIndex = rowProps.realIndex,\n    remoteRowIndex = rowProps.remoteRowIndex,\n    columns = rowProps.columns,\n    empty = rowProps.empty,\n    dataSourceArray = rowProps.dataSourceArray;\n  columns === null || columns === void 0 ? void 0 : columns.forEach(function (column) {\n    var name = column.name;\n    var rowspan = column.rowspan;\n    var value = data && name ? data[name] : null;\n    var computedRowspan = 1;\n    if (typeof rowspan === 'function') {\n      computedRowspan = rowspan({\n        dataSourceArray: dataSourceArray,\n        data: data,\n        value: value,\n        remoteRowIndex: remoteRowIndex,\n        rowIndex: rowIndex,\n        column: column,\n        columns: columns,\n        empty: empty\n      });\n      rowSpans[column.id] = computedRowspan;\n    }\n  });\n  return rowSpans;\n};\nexports.default = _default;"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;;AAEZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAC3CC,KAAK,EAAE;AACT,CAAC,CAAC;AACFD,OAAO,CAACE,OAAO,GAAG,KAAK,CAAC;AACxB,IAAIC,QAAQ,GAAG,SAASA,QAAQA,CAACC,QAAQ,EAAE;EACzC,IAAIC,QAAQ,GAAG,CAAC,CAAC;EACjB,IAAIC,IAAI,GAAGF,QAAQ,CAACE,IAAI;IACtBC,QAAQ,GAAGH,QAAQ,CAACI,SAAS;IAC7BC,cAAc,GAAGL,QAAQ,CAACK,cAAc;IACxCC,OAAO,GAAGN,QAAQ,CAACM,OAAO;IAC1BC,KAAK,GAAGP,QAAQ,CAACO,KAAK;IACtBC,eAAe,GAAGR,QAAQ,CAACQ,eAAe;EAC5CF,OAAO,KAAK,IAAI,IAAIA,OAAO,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,OAAO,CAACG,OAAO,CAAC,UAAUC,MAAM,EAAE;IAClF,IAAIC,IAAI,GAAGD,MAAM,CAACC,IAAI;IACtB,IAAIC,OAAO,GAAGF,MAAM,CAACE,OAAO;IAC5B,IAAIf,KAAK,GAAGK,IAAI,IAAIS,IAAI,GAAGT,IAAI,CAACS,IAAI,CAAC,GAAG,IAAI;IAC5C,IAAIE,eAAe,GAAG,CAAC;IACvB,IAAI,OAAOD,OAAO,KAAK,UAAU,EAAE;MACjCC,eAAe,GAAGD,OAAO,CAAC;QACxBJ,eAAe,EAAEA,eAAe;QAChCN,IAAI,EAAEA,IAAI;QACVL,KAAK,EAAEA,KAAK;QACZQ,cAAc,EAAEA,cAAc;QAC9BF,QAAQ,EAAEA,QAAQ;QAClBO,MAAM,EAAEA,MAAM;QACdJ,OAAO,EAAEA,OAAO;QAChBC,KAAK,EAAEA;MACT,CAAC,CAAC;MACFN,QAAQ,CAACS,MAAM,CAACI,EAAE,CAAC,GAAGD,eAAe;IACvC;EACF,CAAC,CAAC;EACF,OAAOZ,QAAQ;AACjB,CAAC;AACDL,OAAO,CAACE,OAAO,GAAGC,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"script"}