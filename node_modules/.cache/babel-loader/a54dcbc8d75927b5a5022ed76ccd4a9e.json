{"ast":null,"code":"/** \n * Copyright Â© INOVUA TRADING.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\nvar _useProperty3 = _interopRequireDefault(require(\"@inovua/reactdatagrid-community/hooks/useProperty\"));\nvar _react = require(\"react\");\nvar _clamp = _interopRequireDefault(require(\"@inovua/reactdatagrid-community/utils/clamp\"));\nvar _usePrevious = _interopRequireDefault(require(\"@inovua/reactdatagrid-community/hooks/usePrevious\"));\nvar _batchUpdate = _interopRequireDefault(require(\"@inovua/reactdatagrid-community/utils/batchUpdate\"));\nvar _throttle = _interopRequireDefault(require(\"@inovua/reactdatagrid-community/packages/throttle\"));\nvar useActiveCell = function useActiveCell(props, computedPropsRef) {\n  var _useProperty = (0, _useProperty3.default)(props, 'activeCell'),\n    _useProperty2 = (0, _slicedToArray2.default)(_useProperty, 2),\n    computedActiveCell = _useProperty2[0],\n    doSetActiveCell = _useProperty2[1];\n  if (!props.enableKeyboardNavigation) {\n    computedActiveCell = undefined;\n  }\n  var setActiveCell = (0, _react.useCallback)(function (activeCell, queue) {\n    var computedProps = computedPropsRef.current;\n    if (!computedProps || !computedProps.computedCellNavigationEnabled) {\n      return;\n    }\n    var computedActiveCell = computedProps.computedActiveCell,\n      data = computedProps.data,\n      visibleColumns = computedProps.visibleColumns;\n    var shouldCommit = !queue;\n    queue = queue || (0, _batchUpdate.default)();\n    if (activeCell) {\n      var _activeCell = activeCell,\n        _activeCell2 = (0, _slicedToArray2.default)(_activeCell, 2),\n        activeCellRowIndex = _activeCell2[0],\n        activeCellColumnIndex = _activeCell2[1];\n      activeCellRowIndex = (0, _clamp.default)(activeCellRowIndex, 0, data.length - 1);\n      activeCellColumnIndex = (0, _clamp.default)(activeCellColumnIndex, 0, visibleColumns.length - 1);\n      var col = computedProps.getColumnBy(activeCellColumnIndex);\n      if (col && col.cellSelectable === false) {\n        return;\n      }\n      if (!data || data.__group || activeCellRowIndex == null || activeCellColumnIndex == null) {\n        queue(function () {\n          doSetActiveCell(null);\n          computedProps.setLastCellInRange('');\n        });\n        if (shouldCommit) {\n          queue.commit();\n        }\n        return;\n      }\n      activeCell = [activeCellRowIndex, activeCellColumnIndex];\n      if (activeCell === computedActiveCell || computedActiveCell && activeCell && computedActiveCell[0] === activeCell[0] && computedActiveCell[1] === activeCell[1]) {\n        return;\n      }\n    }\n    queue(function () {\n      doSetActiveCell(activeCell);\n      computedProps.setLastCellInRange('');\n    });\n    if (shouldCommit) {\n      queue.commit();\n    }\n  }, []);\n  var oldActiveCell = (0, _usePrevious.default)(computedActiveCell, null);\n  (0, _react.useLayoutEffect)(function () {\n    var computedProps = computedPropsRef.current;\n    if (!computedProps) {\n      return;\n    }\n    if (oldActiveCell !== computedActiveCell && computedActiveCell) {\n      var _computedActiveCell = computedActiveCell,\n        _computedActiveCell2 = (0, _slicedToArray2.default)(_computedActiveCell, 2),\n        rowIndex = _computedActiveCell2[0],\n        columnIndex = _computedActiveCell2[1];\n      if (rowIndex == null || columnIndex == null) {\n        return;\n      }\n      var top = !oldActiveCell || rowIndex < oldActiveCell[0];\n      var right = !oldActiveCell || columnIndex > oldActiveCell[1];\n      var scrollToColumnIndex = (0, _clamp.default)(columnIndex + (right ? 0 : -0), 0, computedProps.visibleColumns.length - 1);\n      computedProps.scrollToCell({\n        rowIndex: rowIndex,\n        columnIndex: scrollToColumnIndex\n      }, {\n        top: top,\n        right: right\n      });\n    }\n  }, [computedActiveCell, oldActiveCell]);\n  var getCellSelectionBetween = (0, _react.useCallback)(function (start, end) {\n    var computedProps = computedPropsRef.current;\n    if (!start || !end || !computedProps) {\n      return {};\n    }\n    var startRow = Math.min(start[0], end[0]);\n    var startCol = Math.min(start[1], end[1]);\n    var endRow = Math.max(start[0], end[0]);\n    var endCol = Math.max(start[1], end[1]);\n    var range = {};\n    var groupBy = computedProps.computedGroupBy;\n    var dataSource = groupBy ? computedProps.data : [];\n    var current;\n    for (var row = startRow; row <= endRow; row++) {\n      if (groupBy) {\n        current = dataSource[row];\n        if (!current) {\n          break;\n        }\n        if (current.__group) {\n          continue;\n        }\n      }\n      for (var col = startCol; col <= endCol; col++) {\n        range[getCellSelectionKey(row, col)] = true;\n      }\n    }\n    return range;\n  }, []);\n  var getCellSelectionKey = (0, _react.useCallback)(function (cellProps, col) {\n    var computedProps = computedPropsRef.current;\n    if (!computedProps) {\n      return -1;\n    }\n    var rowKey;\n    var colKey;\n    if (typeof cellProps === 'string') {\n      return cellProps;\n    }\n    if (typeof cellProps === 'number' && typeof col === 'number') {\n      rowKey = cellProps;\n      colKey = col;\n    } else {\n      if (cellProps) {\n        rowKey = cellProps.rowIndex;\n        colKey = cellProps.columnIndex;\n      }\n    }\n    if (!computedProps.cellSelectionByIndex) {\n      return computedProps.getCellSelectionIdKey(rowKey, colKey);\n    }\n    return \"\".concat([rowKey, colKey]);\n  }, [computedPropsRef, props.columns]);\n  var getCellSelectionIdKey = (0, _react.useCallback)(function (rowIndex, columnIndex) {\n    var computedProps = computedPropsRef.current;\n    if (!computedProps) {\n      return -1;\n    }\n    var col = computedProps.getColumnBy(columnIndex);\n    if (!col) {\n      return -1;\n    }\n    var colId = col.id || col.name;\n    var item = computedProps.getItemAt(rowIndex);\n    if (!item) {\n      return '';\n    }\n    var rowId = computedProps.getItemId(item);\n    return \"\".concat([rowId, colId]);\n  }, []);\n  var incrementActiveCell = (0, _react.useCallback)(function (direction) {\n    var computedProps = computedPropsRef.current;\n    if (!computedProps) {\n      return;\n    }\n    var computedActiveCell = computedProps.computedActiveCell;\n    if (!computedActiveCell) {\n      computedActiveCell = [0, 0];\n    }\n    var _direction = (0, _slicedToArray2.default)(direction, 2),\n      row = _direction[0],\n      col = _direction[1];\n    var data = computedProps.data,\n      visibleColumns = computedProps.visibleColumns,\n      computedGroupBy = computedProps.computedGroupBy,\n      groupColumn = computedProps.groupColumn;\n    var maxRow = data.length - 1;\n    var columns = visibleColumns;\n    var maxCol = columns.length - 1;\n    var groupBy = computedGroupBy;\n    var minCol = groupBy && !groupColumn ? groupBy.length : 0;\n    var rowIndex = computedActiveCell[0];\n    var colIndex = computedActiveCell[1];\n    if (row) {\n      var rowSign = row < 0 ? -1 : 1;\n      var rowAdd = row;\n      while (data[rowIndex + rowAdd] && data[rowIndex + rowAdd].__group) {\n        rowIndex += rowAdd;\n        rowAdd = rowSign;\n      }\n      rowIndex += rowAdd;\n    }\n    if (col) {\n      var colSign = col < 0 ? -1 : 1;\n      var colAdd = col;\n      while (columns[colIndex + colAdd] && columns[colIndex + colAdd].cellSelectable === false) {\n        colIndex += colSign;\n        colAdd = colSign;\n      }\n      colIndex += colAdd;\n    }\n    rowIndex = (0, _clamp.default)(rowIndex, 0, maxRow);\n    colIndex = (0, _clamp.default)(colIndex, minCol, maxCol);\n    if (computedProps.activeCellThrottle) {\n      (0, _throttle.default)(function () {\n        return computedProps.setActiveCell([rowIndex, colIndex]);\n      }, computedProps.activeCellThrottle, {\n        trailing: true,\n        leading: false\n      });\n    } else {\n      computedProps.setActiveCell([rowIndex, colIndex]);\n    }\n  }, []);\n  return {\n    getCellSelectionBetween: getCellSelectionBetween,\n    getCellSelectionIdKey: getCellSelectionIdKey,\n    computedActiveCell: computedActiveCell,\n    setActiveCell: setActiveCell,\n    getCellSelectionKey: getCellSelectionKey,\n    incrementActiveCell: incrementActiveCell\n  };\n};\nvar _default = useActiveCell;\nexports.default = _default;","map":{"version":3,"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","default","_slicedToArray2","_useProperty3","_react","_clamp","_usePrevious","_batchUpdate","_throttle","useActiveCell","props","computedPropsRef","_useProperty","_useProperty2","computedActiveCell","doSetActiveCell","enableKeyboardNavigation","undefined","setActiveCell","useCallback","activeCell","queue","computedProps","current","computedCellNavigationEnabled","data","visibleColumns","shouldCommit","_activeCell","_activeCell2","activeCellRowIndex","activeCellColumnIndex","length","col","getColumnBy","cellSelectable","__group","setLastCellInRange","commit","oldActiveCell","useLayoutEffect","_computedActiveCell","_computedActiveCell2","rowIndex","columnIndex","top","right","scrollToColumnIndex","scrollToCell","getCellSelectionBetween","start","end","startRow","Math","min","startCol","endRow","max","endCol","range","groupBy","computedGroupBy","dataSource","row","getCellSelectionKey","cellProps","rowKey","colKey","cellSelectionByIndex","getCellSelectionIdKey","concat","columns","colId","id","name","item","getItemAt","rowId","getItemId","incrementActiveCell","direction","_direction","groupColumn","maxRow","maxCol","minCol","colIndex","rowSign","rowAdd","colSign","colAdd","activeCellThrottle","trailing","leading","_default"],"sources":["/Users/alexandre.nepomuceno/Documents/agenda/node_modules/@inovua/reactdatagrid-community/plugins/cell-selection/useActiveCell.js"],"sourcesContent":["/** \n * Copyright Â© INOVUA TRADING.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\nvar _useProperty3 = _interopRequireDefault(require(\"@inovua/reactdatagrid-community/hooks/useProperty\"));\nvar _react = require(\"react\");\nvar _clamp = _interopRequireDefault(require(\"@inovua/reactdatagrid-community/utils/clamp\"));\nvar _usePrevious = _interopRequireDefault(require(\"@inovua/reactdatagrid-community/hooks/usePrevious\"));\nvar _batchUpdate = _interopRequireDefault(require(\"@inovua/reactdatagrid-community/utils/batchUpdate\"));\nvar _throttle = _interopRequireDefault(require(\"@inovua/reactdatagrid-community/packages/throttle\"));\nvar useActiveCell = function useActiveCell(props, computedPropsRef) {\n  var _useProperty = (0, _useProperty3.default)(props, 'activeCell'),\n    _useProperty2 = (0, _slicedToArray2.default)(_useProperty, 2),\n    computedActiveCell = _useProperty2[0],\n    doSetActiveCell = _useProperty2[1];\n  if (!props.enableKeyboardNavigation) {\n    computedActiveCell = undefined;\n  }\n  var setActiveCell = (0, _react.useCallback)(function (activeCell, queue) {\n    var computedProps = computedPropsRef.current;\n    if (!computedProps || !computedProps.computedCellNavigationEnabled) {\n      return;\n    }\n    var computedActiveCell = computedProps.computedActiveCell,\n      data = computedProps.data,\n      visibleColumns = computedProps.visibleColumns;\n    var shouldCommit = !queue;\n    queue = queue || (0, _batchUpdate.default)();\n    if (activeCell) {\n      var _activeCell = activeCell,\n        _activeCell2 = (0, _slicedToArray2.default)(_activeCell, 2),\n        activeCellRowIndex = _activeCell2[0],\n        activeCellColumnIndex = _activeCell2[1];\n      activeCellRowIndex = (0, _clamp.default)(activeCellRowIndex, 0, data.length - 1);\n      activeCellColumnIndex = (0, _clamp.default)(activeCellColumnIndex, 0, visibleColumns.length - 1);\n      var col = computedProps.getColumnBy(activeCellColumnIndex);\n      if (col && col.cellSelectable === false) {\n        return;\n      }\n      if (!data || data.__group || activeCellRowIndex == null || activeCellColumnIndex == null) {\n        queue(function () {\n          doSetActiveCell(null);\n          computedProps.setLastCellInRange('');\n        });\n        if (shouldCommit) {\n          queue.commit();\n        }\n        return;\n      }\n      activeCell = [activeCellRowIndex, activeCellColumnIndex];\n      if (activeCell === computedActiveCell || computedActiveCell && activeCell && computedActiveCell[0] === activeCell[0] && computedActiveCell[1] === activeCell[1]) {\n        return;\n      }\n    }\n    queue(function () {\n      doSetActiveCell(activeCell);\n      computedProps.setLastCellInRange('');\n    });\n    if (shouldCommit) {\n      queue.commit();\n    }\n  }, []);\n  var oldActiveCell = (0, _usePrevious.default)(computedActiveCell, null);\n  (0, _react.useLayoutEffect)(function () {\n    var computedProps = computedPropsRef.current;\n    if (!computedProps) {\n      return;\n    }\n    if (oldActiveCell !== computedActiveCell && computedActiveCell) {\n      var _computedActiveCell = computedActiveCell,\n        _computedActiveCell2 = (0, _slicedToArray2.default)(_computedActiveCell, 2),\n        rowIndex = _computedActiveCell2[0],\n        columnIndex = _computedActiveCell2[1];\n      if (rowIndex == null || columnIndex == null) {\n        return;\n      }\n      var top = !oldActiveCell || rowIndex < oldActiveCell[0];\n      var right = !oldActiveCell || columnIndex > oldActiveCell[1];\n      var scrollToColumnIndex = (0, _clamp.default)(columnIndex + (right ? 0 : -0), 0, computedProps.visibleColumns.length - 1);\n      computedProps.scrollToCell({\n        rowIndex: rowIndex,\n        columnIndex: scrollToColumnIndex\n      }, {\n        top: top,\n        right: right\n      });\n    }\n  }, [computedActiveCell, oldActiveCell]);\n  var getCellSelectionBetween = (0, _react.useCallback)(function (start, end) {\n    var computedProps = computedPropsRef.current;\n    if (!start || !end || !computedProps) {\n      return {};\n    }\n    var startRow = Math.min(start[0], end[0]);\n    var startCol = Math.min(start[1], end[1]);\n    var endRow = Math.max(start[0], end[0]);\n    var endCol = Math.max(start[1], end[1]);\n    var range = {};\n    var groupBy = computedProps.computedGroupBy;\n    var dataSource = groupBy ? computedProps.data : [];\n    var current;\n    for (var row = startRow; row <= endRow; row++) {\n      if (groupBy) {\n        current = dataSource[row];\n        if (!current) {\n          break;\n        }\n        if (current.__group) {\n          continue;\n        }\n      }\n      for (var col = startCol; col <= endCol; col++) {\n        range[getCellSelectionKey(row, col)] = true;\n      }\n    }\n    return range;\n  }, []);\n  var getCellSelectionKey = (0, _react.useCallback)(function (cellProps, col) {\n    var computedProps = computedPropsRef.current;\n    if (!computedProps) {\n      return -1;\n    }\n    var rowKey;\n    var colKey;\n    if (typeof cellProps === 'string') {\n      return cellProps;\n    }\n    if (typeof cellProps === 'number' && typeof col === 'number') {\n      rowKey = cellProps;\n      colKey = col;\n    } else {\n      if (cellProps) {\n        rowKey = cellProps.rowIndex;\n        colKey = cellProps.columnIndex;\n      }\n    }\n    if (!computedProps.cellSelectionByIndex) {\n      return computedProps.getCellSelectionIdKey(rowKey, colKey);\n    }\n    return \"\".concat([rowKey, colKey]);\n  }, [computedPropsRef, props.columns]);\n  var getCellSelectionIdKey = (0, _react.useCallback)(function (rowIndex, columnIndex) {\n    var computedProps = computedPropsRef.current;\n    if (!computedProps) {\n      return -1;\n    }\n    var col = computedProps.getColumnBy(columnIndex);\n    if (!col) {\n      return -1;\n    }\n    var colId = col.id || col.name;\n    var item = computedProps.getItemAt(rowIndex);\n    if (!item) {\n      return '';\n    }\n    var rowId = computedProps.getItemId(item);\n    return \"\".concat([rowId, colId]);\n  }, []);\n  var incrementActiveCell = (0, _react.useCallback)(function (direction) {\n    var computedProps = computedPropsRef.current;\n    if (!computedProps) {\n      return;\n    }\n    var computedActiveCell = computedProps.computedActiveCell;\n    if (!computedActiveCell) {\n      computedActiveCell = [0, 0];\n    }\n    var _direction = (0, _slicedToArray2.default)(direction, 2),\n      row = _direction[0],\n      col = _direction[1];\n    var data = computedProps.data,\n      visibleColumns = computedProps.visibleColumns,\n      computedGroupBy = computedProps.computedGroupBy,\n      groupColumn = computedProps.groupColumn;\n    var maxRow = data.length - 1;\n    var columns = visibleColumns;\n    var maxCol = columns.length - 1;\n    var groupBy = computedGroupBy;\n    var minCol = groupBy && !groupColumn ? groupBy.length : 0;\n    var rowIndex = computedActiveCell[0];\n    var colIndex = computedActiveCell[1];\n    if (row) {\n      var rowSign = row < 0 ? -1 : 1;\n      var rowAdd = row;\n      while (data[rowIndex + rowAdd] && data[rowIndex + rowAdd].__group) {\n        rowIndex += rowAdd;\n        rowAdd = rowSign;\n      }\n      rowIndex += rowAdd;\n    }\n    if (col) {\n      var colSign = col < 0 ? -1 : 1;\n      var colAdd = col;\n      while (columns[colIndex + colAdd] && columns[colIndex + colAdd].cellSelectable === false) {\n        colIndex += colSign;\n        colAdd = colSign;\n      }\n      colIndex += colAdd;\n    }\n    rowIndex = (0, _clamp.default)(rowIndex, 0, maxRow);\n    colIndex = (0, _clamp.default)(colIndex, minCol, maxCol);\n    if (computedProps.activeCellThrottle) {\n      (0, _throttle.default)(function () {\n        return computedProps.setActiveCell([rowIndex, colIndex]);\n      }, computedProps.activeCellThrottle, {\n        trailing: true,\n        leading: false\n      });\n    } else {\n      computedProps.setActiveCell([rowIndex, colIndex]);\n    }\n  }, []);\n  return {\n    getCellSelectionBetween: getCellSelectionBetween,\n    getCellSelectionIdKey: getCellSelectionIdKey,\n    computedActiveCell: computedActiveCell,\n    setActiveCell: setActiveCell,\n    getCellSelectionKey: getCellSelectionKey,\n    incrementActiveCell: incrementActiveCell\n  };\n};\nvar _default = useActiveCell;\nexports.default = _default;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script"}