{"ast":null,"code":"/** \n * Copyright © INOVUA TRADING.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _default = function _default(array, from, to) {\n  if (!Array.isArray(array)) {\n    array = [];\n  }\n  var result = [].concat(array);\n  var len = array.length;\n  if (from === to || !len || from == null || to == null || from >= len || to > len) {\n    return result;\n  }\n  from = Array.isArray(from) ? from : [from];\n  var lessThanCount = from.reduce(function (acc, index) {\n    return acc + (index < to ? 1 : 0);\n  }, 0);\n  var values = from.map(function (index) {\n    return array[index];\n  }).reverse();\n  var emptyArray = [];\n  emptyArray.concat(from).sort(function (a, b) {\n    return b - a;\n  }).forEach(function (index) {\n    result.splice(index, 1);\n  });\n  from.reverse().forEach(function (_, i) {\n    result.splice(to - lessThanCount, 0, values[i]);\n  });\n  return result;\n};\nexports.default = _default;","map":{"version":3,"names":["Object","defineProperty","exports","value","default","_default","array","from","to","Array","isArray","result","concat","len","length","lessThanCount","reduce","acc","index","values","map","reverse","emptyArray","sort","a","b","forEach","splice","_","i"],"sources":["/Users/alexandre.nepomuceno/Documents/agenda/node_modules/@inovua/reactdatagrid-community/utils/moveXBeforeY.js"],"sourcesContent":["/** \n * Copyright © INOVUA TRADING.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _default = function _default(array, from, to) {\n  if (!Array.isArray(array)) {\n    array = [];\n  }\n  var result = [].concat(array);\n  var len = array.length;\n  if (from === to || !len || from == null || to == null || from >= len || to > len) {\n    return result;\n  }\n  from = Array.isArray(from) ? from : [from];\n  var lessThanCount = from.reduce(function (acc, index) {\n    return acc + (index < to ? 1 : 0);\n  }, 0);\n  var values = from.map(function (index) {\n    return array[index];\n  }).reverse();\n  var emptyArray = [];\n  emptyArray.concat(from).sort(function (a, b) {\n    return b - a;\n  }).forEach(function (index) {\n    result.splice(index, 1);\n  });\n  from.reverse().forEach(function (_, i) {\n    result.splice(to - lessThanCount, 0, values[i]);\n  });\n  return result;\n};\nexports.default = _default;"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;;AAEZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAC3CC,KAAK,EAAE;AACT,CAAC,CAAC;AACFD,OAAO,CAACE,OAAO,GAAG,KAAK,CAAC;AACxB,IAAIC,QAAQ,GAAG,SAASA,QAAQA,CAACC,KAAK,EAAEC,IAAI,EAAEC,EAAE,EAAE;EAChD,IAAI,CAACC,KAAK,CAACC,OAAO,CAACJ,KAAK,CAAC,EAAE;IACzBA,KAAK,GAAG,EAAE;EACZ;EACA,IAAIK,MAAM,GAAG,EAAE,CAACC,MAAM,CAACN,KAAK,CAAC;EAC7B,IAAIO,GAAG,GAAGP,KAAK,CAACQ,MAAM;EACtB,IAAIP,IAAI,KAAKC,EAAE,IAAI,CAACK,GAAG,IAAIN,IAAI,IAAI,IAAI,IAAIC,EAAE,IAAI,IAAI,IAAID,IAAI,IAAIM,GAAG,IAAIL,EAAE,GAAGK,GAAG,EAAE;IAChF,OAAOF,MAAM;EACf;EACAJ,IAAI,GAAGE,KAAK,CAACC,OAAO,CAACH,IAAI,CAAC,GAAGA,IAAI,GAAG,CAACA,IAAI,CAAC;EAC1C,IAAIQ,aAAa,GAAGR,IAAI,CAACS,MAAM,CAAC,UAAUC,GAAG,EAAEC,KAAK,EAAE;IACpD,OAAOD,GAAG,IAAIC,KAAK,GAAGV,EAAE,GAAG,CAAC,GAAG,CAAC,CAAC;EACnC,CAAC,EAAE,CAAC,CAAC;EACL,IAAIW,MAAM,GAAGZ,IAAI,CAACa,GAAG,CAAC,UAAUF,KAAK,EAAE;IACrC,OAAOZ,KAAK,CAACY,KAAK,CAAC;EACrB,CAAC,CAAC,CAACG,OAAO,CAAC,CAAC;EACZ,IAAIC,UAAU,GAAG,EAAE;EACnBA,UAAU,CAACV,MAAM,CAACL,IAAI,CAAC,CAACgB,IAAI,CAAC,UAAUC,CAAC,EAAEC,CAAC,EAAE;IAC3C,OAAOA,CAAC,GAAGD,CAAC;EACd,CAAC,CAAC,CAACE,OAAO,CAAC,UAAUR,KAAK,EAAE;IAC1BP,MAAM,CAACgB,MAAM,CAACT,KAAK,EAAE,CAAC,CAAC;EACzB,CAAC,CAAC;EACFX,IAAI,CAACc,OAAO,CAAC,CAAC,CAACK,OAAO,CAAC,UAAUE,CAAC,EAAEC,CAAC,EAAE;IACrClB,MAAM,CAACgB,MAAM,CAACnB,EAAE,GAAGO,aAAa,EAAE,CAAC,EAAEI,MAAM,CAACU,CAAC,CAAC,CAAC;EACjD,CAAC,CAAC;EACF,OAAOlB,MAAM;AACf,CAAC;AACDT,OAAO,CAACE,OAAO,GAAGC,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"script"}