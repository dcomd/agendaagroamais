{"ast":null,"code":"/** \n * Copyright Â© INOVUA TRADING.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\nvar _react = _interopRequireDefault(require(\"react\"));\nvar _Row = _interopRequireDefault(require(\"./Row\"));\nvar _getRowSpans = _interopRequireDefault(require(\"./getRowSpans\"));\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      (0, _defineProperty2.default)(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n  return target;\n}\nvar emptyObject = Object.freeze ? Object.freeze({}) : {};\nvar renderRows = function renderRows(_ref, _ref2) {\n  var from = _ref.from,\n    to = _ref.to,\n    empty = _ref.empty,\n    renderIndex = _ref.renderIndex,\n    editRowIndex = _ref.editRowIndex,\n    editValue = _ref.editValue,\n    editColumnIndex = _ref.editColumnIndex,\n    editColumnId = _ref.editColumnId,\n    setRowSpan = _ref.setRowSpan,\n    sticky = _ref.sticky,\n    rowHeight = _ref.rowHeight,\n    tryNextRowEdit = _ref.tryNextRowEdit,\n    onEditStop = _ref.onEditStop,\n    onEditStart = _ref.onEditStart,\n    onEditValueChange = _ref.onEditValueChange,\n    scrollLeft = _ref.scrollLeft,\n    columnRenderCount = _ref.columnRenderCount,\n    columnRenderStartIndex = _ref.columnRenderStartIndex,\n    memorizedScrollLeft = _ref.memorizedScrollLeft;\n  var availableWidth = _ref2.availableWidth,\n    data = _ref2.data,\n    onTransitionEnd = _ref2.onTransitionEnd,\n    columns = _ref2.columns,\n    computedPivot = _ref2.computedPivot,\n    groupColumn = _ref2.groupColumn,\n    activeRowRef = _ref2.activeRowRef,\n    columnsMap = _ref2.columnsMap,\n    renderLockedStartCells = _ref2.renderLockedStartCells,\n    renderLockedEndCells = _ref2.renderLockedEndCells,\n    computedOnCellMouseDown = _ref2.computedOnCellMouseDown,\n    computedEnableRowspan = _ref2.computedEnableRowspan,\n    lockedStartColumns = _ref2.lockedStartColumns,\n    lockedEndColumns = _ref2.lockedEndColumns,\n    renderDetailsGrid = _ref2.renderDetailsGrid,\n    editable = _ref2.editable,\n    rowDetailsWidth = _ref2.rowDetailsWidth,\n    scrollbars = _ref2.scrollbars,\n    scrollToColumn = _ref2.scrollToColumn,\n    scrollToIndexIfNeeded = _ref2.scrollToIndexIfNeeded,\n    hasLockedStart = _ref2.hasLockedStart,\n    hasLockedEnd = _ref2.hasLockedEnd,\n    computedShowEmptyRows = _ref2.computedShowEmptyRows,\n    setRowSelected = _ref2.setRowSelected,\n    setRowExpanded = _ref2.setRowExpanded,\n    toggleRowExpand = _ref2.toggleRowExpand,\n    toggleNodeExpand = _ref2.toggleNodeExpand,\n    expandOnMouseDown = _ref2.expandOnMouseDown,\n    loadNodeAsync = _ref2.loadNodeAsync,\n    computedTreeEnabled = _ref2.computedTreeEnabled,\n    computedActiveCell = _ref2.computedActiveCell,\n    rtl = _ref2.rtl,\n    naturalRowHeight = _ref2.naturalRowHeight,\n    lastCellInRange = _ref2.lastCellInRange,\n    getCellSelectionKey = _ref2.getCellSelectionKey,\n    onRowContextMenu = _ref2.onRowContextMenu,\n    columnUserSelect = _ref2.columnUserSelect,\n    selectAll = _ref2.selectAll,\n    deselectAll = _ref2.deselectAll,\n    expandGroupTitle = _ref2.expandGroupTitle,\n    expandColumn = _ref2.expandColumn,\n    computedCellSelection = _ref2.computedCellSelection,\n    lastLockedStartIndex = _ref2.lastLockedStartIndex,\n    lastLockedEndIndex = _ref2.lastLockedEndIndex,\n    lastUnlockedIndex = _ref2.lastUnlockedIndex,\n    computedGroupBy = _ref2.computedGroupBy,\n    computedIndexesInGroups = _ref2.computedIndexesInGroups,\n    edition = _ref2.edition,\n    computedLicenseValid = _ref2.computedLicenseValid,\n    computedGroupCounts = _ref2.computedGroupCounts,\n    rowHeightManager = _ref2.rowHeightManager,\n    maxRowHeight = _ref2.maxRowHeight,\n    minRowHeight = _ref2.minRowHeight,\n    editStartEvent = _ref2.editStartEvent,\n    getItemId = _ref2.getItemId,\n    firstUnlockedIndex = _ref2.firstUnlockedIndex,\n    firstLockedStartIndex = _ref2.firstLockedStartIndex,\n    firstLockedEndIndex = _ref2.firstLockedEndIndex,\n    maxVisibleRows = _ref2.maxVisibleRows,\n    onRowMouseEnter = _ref2.onRowMouseEnter,\n    onRowMouseLeave = _ref2.onRowMouseLeave,\n    computedOnRowClick = _ref2.computedOnRowClick,\n    computedRowDoubleClick = _ref2.computedRowDoubleClick,\n    onCellClick = _ref2.onCellClick,\n    computedCellDoubleClick = _ref2.computedCellDoubleClick,\n    onCellSelectionDraggerMouseDown = _ref2.onCellSelectionDraggerMouseDown,\n    onCellEnter = _ref2.onCellEnter,\n    onColumnMouseEnter = _ref2.onColumnMouseEnter,\n    onColumnMouseLeave = _ref2.onColumnMouseLeave,\n    columnIndexHovered = _ref2.columnIndexHovered,\n    onEditCancel = _ref2.onEditCancel,\n    onEditComplete = _ref2.onEditComplete,\n    computedCellMultiSelectionEnabled = _ref2.computedCellMultiSelectionEnabled,\n    nativeScroll = _ref2.nativeScroll,\n    renderRow = _ref2.renderRow,\n    onRenderRow = _ref2.onRenderRow,\n    rowClassName = _ref2.rowClassName,\n    rowStyle = _ref2.rowStyle,\n    rowFactory = _ref2.rowFactory,\n    _ref2$rowProps = _ref2.rowProps,\n    passedProps = _ref2$rowProps === void 0 ? emptyObject : _ref2$rowProps,\n    rowKey = _ref2.rowKey,\n    cellFactory = _ref2.cellFactory,\n    computedSelected = _ref2.computedSelected,\n    computedUnselected = _ref2.computedUnselected,\n    treeColumn = _ref2.treeColumn,\n    renderNodeTool = _ref2.renderNodeTool,\n    renderTreeCollapseTool = _ref2.renderTreeCollapseTool,\n    renderTreeExpandTool = _ref2.renderTreeExpandTool,\n    renderGroupCollapseTool = _ref2.renderGroupCollapseTool,\n    renderGroupExpandTool = _ref2.renderGroupExpandTool,\n    renderTreeLoadingTool = _ref2.renderTreeLoadingTool,\n    rowExpandHeight = _ref2.rowExpandHeight,\n    isRowExpandedById = _ref2.isRowExpandedById,\n    computedRenderRowDetails = _ref2.computedRenderRowDetails,\n    isRowExpandableAt = _ref2.isRowExpandableAt,\n    computedRowExpandEnabled = _ref2.computedRowExpandEnabled,\n    computedRowMultiSelectionEnabled = _ref2.computedRowMultiSelectionEnabled,\n    computedRowSelectionEnabled = _ref2.computedRowSelectionEnabled,\n    computedActiveIndex = _ref2.computedActiveIndex,\n    computedSkip = _ref2.computedSkip,\n    computedShowZebraRows = _ref2.computedShowZebraRows,\n    computedHasColSpan = _ref2.computedHasColSpan,\n    initialRowHeight = _ref2.rowHeight,\n    totalColumnCount = _ref2.totalColumnCount,\n    totalComputedWidth = _ref2.totalComputedWidth,\n    totalLockedStartWidth = _ref2.totalLockedStartWidth,\n    totalLockedEndWidth = _ref2.totalLockedEndWidth,\n    totalUnlockedWidth = _ref2.totalUnlockedWidth,\n    currentDataSourceCount = _ref2.currentDataSourceCount,\n    computedShowCellBorders = _ref2.computedShowCellBorders,\n    emptyScrollOffset = _ref2.emptyScrollOffset,\n    showHorizontalCellBorders = _ref2.showHorizontalCellBorders,\n    showVerticalCellBorders = _ref2.showVerticalCellBorders,\n    getScrollLeftMax = _ref2.getScrollLeftMax,\n    shouldRenderCollapsedRowDetails = _ref2.shouldRenderCollapsedRowDetails,\n    rowDetailsStyle = _ref2.rowDetailsStyle,\n    minRowWidth = _ref2.minRowWidth,\n    maxWidth = _ref2.maxWidth,\n    _ref2$startIndex = _ref2.startIndex,\n    startIndex = _ref2$startIndex === void 0 ? 0 : _ref2$startIndex,\n    groupNestingSize = _ref2.groupNestingSize,\n    treeNestingSize = _ref2.treeNestingSize,\n    onGroupToggle = _ref2.onGroupToggle,\n    computedCollapsedGroups = _ref2.computedCollapsedGroups,\n    computedExpandedGroups = _ref2.computedExpandedGroups,\n    groupPathSeparator = _ref2.groupPathSeparator,\n    renderGroupTitle = _ref2.renderGroupTitle,\n    renderGroupTool = _ref2.renderGroupTool,\n    renderLockedEndGroupTitle = _ref2.renderLockedEndGroupTitle,\n    renderUnlockedGroupTitle = _ref2.renderUnlockedGroupTitle,\n    virtualizeColumns = _ref2.virtualizeColumns,\n    computedLivePagination = _ref2.computedLivePagination,\n    onRowReorder = _ref2.onRowReorder,\n    onDragRowMouseDown = _ref2.onDragRowMouseDown,\n    theme = _ref2.theme,\n    onContextMenu = _ref2.onContextMenu,\n    setActiveIndex = _ref2.setActiveIndex,\n    currentEditCompletePromise = _ref2.currentEditCompletePromise,\n    enableColumnAutosize = _ref2.enableColumnAutosize,\n    columnHoverClassName = _ref2.columnHoverClassName,\n    computedEnableColumnHover = _ref2.computedEnableColumnHover,\n    renderRowDetailsExpandIcon = _ref2.renderRowDetailsExpandIcon,\n    renderRowDetailsCollapsedIcon = _ref2.renderRowDetailsCollapsedIcon,\n    computedOnRowMouseDown = _ref2.computedOnRowMouseDown,\n    disabledRows = _ref2.disabledRows,\n    rowFocusClassName = _ref2.rowFocusClassName,\n    computedCellBulkUpdateMouseDown = _ref2.computedCellBulkUpdateMouseDown,\n    computedCellBulkUpdateMouseUp = _ref2.computedCellBulkUpdateMouseUp,\n    bulkUpdateMouseDown = _ref2.bulkUpdateMouseDown;\n  var remoteOffset = computedLivePagination ? 0 : computedSkip || 0;\n  var totalCount = data.length;\n  var dataArray = data.slice(from, to);\n  var isGrouped = computedGroupBy && computedGroupBy.length;\n  var defaultRowHeight = rowHeightManager.getDefaultRowHeight();\n  if (computedShowEmptyRows && !dataArray.length) {\n    dataArray = [null];\n  }\n  var depth = null;\n  if (isGrouped) {\n    depth = computedGroupBy.length;\n  }\n  return dataArray.map(function (rowData, i) {\n    var index = i + startIndex;\n    var id = rowData ? getItemId(rowData) : i;\n    var realIndex = index + from;\n    var active = computedActiveIndex === realIndex;\n    var focusedRow = computedActiveIndex === realIndex;\n    var indexInGroup = isGrouped ? computedIndexesInGroups[realIndex] : null;\n    if (empty) {\n      indexInGroup = realIndex + (totalCount % 2 - 1);\n    }\n    var keyIndex = rowKey === 'realIndex' ? realIndex : index;\n    var key = \"row-\".concat(keyIndex);\n    var isSelected = !empty && computedRowSelectionEnabled && (computedRowMultiSelectionEnabled ? computedSelected === true ? computedUnselected ? computedUnselected[id] === undefined : true : computedSelected.hasOwnProperty(id) : computedSelected == id);\n    var rowExpanded = isRowExpandedById(id);\n    var rowProps = {\n      rowspanZIndex: totalCount - realIndex,\n      availableWidth: availableWidth,\n      computedGroupBy: computedGroupBy,\n      expandGroupTitle: expandGroupTitle,\n      expandColumn: expandColumn,\n      getCellSelectionKey: getCellSelectionKey,\n      id: id,\n      depth: depth,\n      columns: columns,\n      columnsMap: columnsMap,\n      computedHasColSpan: computedHasColSpan,\n      lockedStartColumns: lockedStartColumns,\n      lockedEndColumns: lockedEndColumns,\n      hasLockedStart: hasLockedStart,\n      rowDetailsWidth: rowDetailsWidth,\n      hasLockedEnd: hasLockedEnd,\n      columnUserSelect: columnUserSelect,\n      minWidth: minRowWidth,\n      width: totalComputedWidth,\n      active: active,\n      activeRowRef: activeRowRef,\n      emptyScrollOffset: emptyScrollOffset,\n      empty: empty,\n      editable: editable,\n      key: key,\n      scrollLeft: scrollLeft,\n      getScrollLeftMax: getScrollLeftMax,\n      groupColumn: groupColumn,\n      renderRow: renderRow,\n      onRenderRow: onRenderRow,\n      cellFactory: cellFactory,\n      computedActiveCell: computedActiveCell,\n      computedShowZebraRows: computedShowZebraRows,\n      lastCellInRange: lastCellInRange,\n      groupNestingSize: groupNestingSize,\n      treeNestingSize: treeNestingSize,\n      columnRenderCount: columnRenderCount,\n      rowStyle: rowStyle,\n      rowClassName: rowClassName,\n      onTransitionEnd: onTransitionEnd,\n      onRowContextMenu: onRowContextMenu,\n      renderNodeTool: renderNodeTool,\n      indexInGroup: isGrouped ? indexInGroup : null,\n      groupCount: isGrouped && computedGroupCounts ? computedGroupCounts[realIndex] : 0,\n      editStartEvent: editStartEvent,\n      virtualizeColumns: virtualizeColumns,\n      firstUnlockedIndex: firstUnlockedIndex,\n      firstLockedStartIndex: firstLockedStartIndex,\n      columnRenderStartIndex: columnRenderStartIndex,\n      firstLockedEndIndex: firstLockedEndIndex,\n      tryNextRowEdit: tryNextRowEdit,\n      totalComputedWidth: totalComputedWidth,\n      totalLockedStartWidth: totalLockedStartWidth,\n      totalLockedEndWidth: totalLockedEndWidth,\n      totalUnlockedWidth: totalUnlockedWidth,\n      sticky: sticky,\n      computedCellSelection: computedCellSelection,\n      computedCellMultiSelectionEnabled: computedCellMultiSelectionEnabled,\n      shouldRenderCollapsedRowDetails: shouldRenderCollapsedRowDetails,\n      rowDetailsStyle: rowDetailsStyle,\n      renderDetailsGrid: renderDetailsGrid,\n      renderIndex: renderIndex,\n      realIndex: realIndex,\n      rowIndex: realIndex,\n      remoteRowIndex: remoteOffset + realIndex,\n      maxVisibleRows: maxVisibleRows,\n      last: !computedShowEmptyRows ? realIndex == totalCount - 1 : !!(maxVisibleRows && realIndex >= maxVisibleRows - 1 && realIndex == totalCount - 1),\n      lastNonEmpty: realIndex === totalCount - 1,\n      totalDataCount: totalCount,\n      rowHeight: rowHeight,\n      defaultRowHeight: defaultRowHeight,\n      rowExpandHeight: rowExpandHeight,\n      initialRowHeight: initialRowHeight,\n      setRowSpan: setRowSpan,\n      maxRowHeight: maxRowHeight,\n      minRowHeight: minRowHeight,\n      getItemId: getItemId,\n      computedShowCellBorders: computedShowCellBorders,\n      showHorizontalCellBorders: showHorizontalCellBorders,\n      showVerticalCellBorders: showVerticalCellBorders,\n      passedProps: passedProps,\n      setRowSelected: setRowSelected,\n      setRowExpanded: setRowExpanded,\n      renderLockedStartCells: renderLockedStartCells,\n      renderLockedEndCells: renderLockedEndCells,\n      computedRowExpandEnabled: computedRowExpandEnabled,\n      computedRenderRowDetails: computedRenderRowDetails,\n      isRowExpandableAt: isRowExpandableAt,\n      treeColumn: treeColumn,\n      rtl: rtl,\n      toggleRowExpand: toggleRowExpand,\n      toggleNodeExpand: toggleNodeExpand,\n      expandOnMouseDown: expandOnMouseDown,\n      loadNodeAsync: loadNodeAsync,\n      edition: edition,\n      computedLicenseValid: computedLicenseValid,\n      computedEnableRowspan: computedEnableRowspan,\n      computedTreeEnabled: computedTreeEnabled,\n      naturalRowHeight: naturalRowHeight,\n      selectAll: selectAll,\n      deselectAll: deselectAll,\n      totalColumnCount: totalColumnCount,\n      computedPivot: computedPivot,\n      multiSelect: computedRowMultiSelectionEnabled,\n      selection: computedSelected,\n      selected: isSelected,\n      expanded: rowExpanded,\n      lastLockedStartIndex: lastLockedStartIndex,\n      lastLockedEndIndex: lastLockedEndIndex,\n      lastUnlockedIndex: lastUnlockedIndex,\n      data: rowData,\n      dataSourceArray: data,\n      onMouseEnter: !empty ? onRowMouseEnter : null,\n      onMouseLeave: !empty ? onRowMouseLeave : null,\n      onClick: !empty ? computedOnRowClick : null,\n      onMouseDown: !empty ? computedOnRowMouseDown : null,\n      onRowDoubleClick: !empty ? computedRowDoubleClick : null,\n      scrollToColumn: scrollToColumn,\n      scrollToIndexIfNeeded: scrollToIndexIfNeeded,\n      onCellClick: onCellClick,\n      onCellDoubleClick: computedCellDoubleClick,\n      onCellSelectionDraggerMouseDown: onCellSelectionDraggerMouseDown,\n      onCellMouseDown: computedOnCellMouseDown,\n      onColumnMouseEnter: onColumnMouseEnter,\n      onColumnMouseLeave: onColumnMouseLeave,\n      columnIndexHovered: columnIndexHovered,\n      onCellEnter: onCellEnter,\n      onEditStop: onEditStop,\n      onEditStart: onEditStart,\n      onEditCancel: onEditCancel,\n      onEditValueChange: onEditValueChange,\n      onEditComplete: onEditComplete,\n      scrollbars: scrollbars,\n      even: false,\n      odd: false,\n      nativeScroll: nativeScroll,\n      onRowReorder: onRowReorder,\n      onDragRowMouseDown: onDragRowMouseDown,\n      theme: theme,\n      onContextMenu: onContextMenu,\n      setActiveIndex: setActiveIndex,\n      renderTreeCollapseTool: renderTreeCollapseTool,\n      renderTreeExpandTool: renderTreeExpandTool,\n      renderGroupCollapseTool: renderGroupCollapseTool,\n      renderGroupExpandTool: renderGroupExpandTool,\n      renderTreeLoadingTool: renderTreeLoadingTool,\n      currentEditCompletePromise: currentEditCompletePromise,\n      enableColumnAutosize: enableColumnAutosize,\n      columnHoverClassName: columnHoverClassName,\n      computedEnableColumnHover: computedEnableColumnHover,\n      renderRowDetailsExpandIcon: renderRowDetailsExpandIcon,\n      renderRowDetailsCollapsedIcon: renderRowDetailsCollapsedIcon,\n      memorizedScrollLeft: memorizedScrollLeft,\n      disabledRow: disabledRows ? disabledRows[realIndex] : null,\n      focusedRow: focusedRow,\n      rowFocusClassName: rowFocusClassName,\n      onCellBulkUpdateMouseDown: computedCellBulkUpdateMouseDown,\n      onMouseUp: computedCellBulkUpdateMouseUp,\n      bulkUpdateMouseDown: bulkUpdateMouseDown\n    };\n    if (rowProps.rowIndex === editRowIndex) {\n      rowProps.editing = true;\n      rowProps.editValue = editValue;\n      rowProps.editColumnIndex = editColumnIndex;\n      rowProps.editColumnId = editColumnId;\n    }\n    if (rowData && rowData.__group) {\n      rowProps.indexInGroup = null;\n      var rowGroupKey = \"\".concat(rowData.keyPath.join(groupPathSeparator));\n      var collapsed;\n      if (computedCollapsedGroups === true) {\n        collapsed = true;\n        if (computedExpandedGroups[rowGroupKey]) {\n          collapsed = false;\n        }\n      } else if (computedExpandedGroups === true) {\n        collapsed = false;\n        if (computedCollapsedGroups[rowGroupKey]) {\n          collapsed = true;\n        }\n      } else {\n        collapsed = computedCollapsedGroups[rowGroupKey];\n      }\n      rowProps.groupProps = {\n        renderGroupTitle: renderGroupTitle,\n        renderGroupTool: renderGroupTool,\n        renderLockedEndGroupTitle: renderLockedEndGroupTitle,\n        renderUnlockedGroupTitle: renderUnlockedGroupTitle,\n        onGroupToggle: onGroupToggle,\n        collapsed: collapsed,\n        groupNestingSize: groupNestingSize,\n        depth: rowData.depth - 1\n      };\n      rowProps.onGroupToggle = onGroupToggle;\n      rowProps.groupSummary = rowData.groupSummary;\n      rowProps.groupColumnSummaries = rowData.groupColumnSummaries;\n    }\n    if (isGrouped) {\n      rowProps.parentGroupDataArray = [];\n    }\n    var even = !!((isGrouped && !computedPivot ? indexInGroup : realIndex) % 2);\n    if (empty && isGrouped) {\n      var tmpIndex = (computedIndexesInGroups[currentDataSourceCount - 1] || 0) + (realIndex - currentDataSourceCount - 1);\n      even = !!(tmpIndex % 2);\n    }\n    if (rowData && rowData.__summary) {\n      rowProps.summaryProps = {\n        position: rowData.__summary,\n        groupProps: rowData.__parentGroup,\n        value: rowData.__parentGroup.groupColumnSummaries,\n        depth: rowData.__parentGroup.depth - 1\n      };\n      even = true;\n    }\n    if (maxWidth != null) {\n      rowProps.maxWidth = maxWidth;\n    }\n    rowProps.even = even;\n    rowProps.odd = !even;\n    var row;\n    if (rowFactory) {\n      row = rowFactory(rowProps);\n    }\n    if (computedEnableRowspan) {\n      rowProps.computedRowspans = (0, _getRowSpans.default)(rowProps);\n      setRowSpan(Math.max.apply(Math, (0, _toConsumableArray2.default)(Object.keys(rowProps.computedRowspans).map(function (key) {\n        return rowProps.computedRowspans[key];\n      }))));\n    }\n    if (row === undefined) {\n      row = _react.default.createElement(_Row.default, _objectSpread({}, rowProps));\n    }\n    return row;\n  });\n};\nvar _default = renderRows;\nexports.default = _default;","map":{"version":3,"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","default","_defineProperty2","_toConsumableArray2","_react","_Row","_getRowSpans","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","getOwnPropertyDescriptors","defineProperties","emptyObject","freeze","renderRows","_ref","_ref2","from","to","empty","renderIndex","editRowIndex","editValue","editColumnIndex","editColumnId","setRowSpan","sticky","rowHeight","tryNextRowEdit","onEditStop","onEditStart","onEditValueChange","scrollLeft","columnRenderCount","columnRenderStartIndex","memorizedScrollLeft","availableWidth","data","onTransitionEnd","columns","computedPivot","groupColumn","activeRowRef","columnsMap","renderLockedStartCells","renderLockedEndCells","computedOnCellMouseDown","computedEnableRowspan","lockedStartColumns","lockedEndColumns","renderDetailsGrid","editable","rowDetailsWidth","scrollbars","scrollToColumn","scrollToIndexIfNeeded","hasLockedStart","hasLockedEnd","computedShowEmptyRows","setRowSelected","setRowExpanded","toggleRowExpand","toggleNodeExpand","expandOnMouseDown","loadNodeAsync","computedTreeEnabled","computedActiveCell","rtl","naturalRowHeight","lastCellInRange","getCellSelectionKey","onRowContextMenu","columnUserSelect","selectAll","deselectAll","expandGroupTitle","expandColumn","computedCellSelection","lastLockedStartIndex","lastLockedEndIndex","lastUnlockedIndex","computedGroupBy","computedIndexesInGroups","edition","computedLicenseValid","computedGroupCounts","rowHeightManager","maxRowHeight","minRowHeight","editStartEvent","getItemId","firstUnlockedIndex","firstLockedStartIndex","firstLockedEndIndex","maxVisibleRows","onRowMouseEnter","onRowMouseLeave","computedOnRowClick","computedRowDoubleClick","onCellClick","computedCellDoubleClick","onCellSelectionDraggerMouseDown","onCellEnter","onColumnMouseEnter","onColumnMouseLeave","columnIndexHovered","onEditCancel","onEditComplete","computedCellMultiSelectionEnabled","nativeScroll","renderRow","onRenderRow","rowClassName","rowStyle","rowFactory","_ref2$rowProps","rowProps","passedProps","rowKey","cellFactory","computedSelected","computedUnselected","treeColumn","renderNodeTool","renderTreeCollapseTool","renderTreeExpandTool","renderGroupCollapseTool","renderGroupExpandTool","renderTreeLoadingTool","rowExpandHeight","isRowExpandedById","computedRenderRowDetails","isRowExpandableAt","computedRowExpandEnabled","computedRowMultiSelectionEnabled","computedRowSelectionEnabled","computedActiveIndex","computedSkip","computedShowZebraRows","computedHasColSpan","initialRowHeight","totalColumnCount","totalComputedWidth","totalLockedStartWidth","totalLockedEndWidth","totalUnlockedWidth","currentDataSourceCount","computedShowCellBorders","emptyScrollOffset","showHorizontalCellBorders","showVerticalCellBorders","getScrollLeftMax","shouldRenderCollapsedRowDetails","rowDetailsStyle","minRowWidth","maxWidth","_ref2$startIndex","startIndex","groupNestingSize","treeNestingSize","onGroupToggle","computedCollapsedGroups","computedExpandedGroups","groupPathSeparator","renderGroupTitle","renderGroupTool","renderLockedEndGroupTitle","renderUnlockedGroupTitle","virtualizeColumns","computedLivePagination","onRowReorder","onDragRowMouseDown","theme","onContextMenu","setActiveIndex","currentEditCompletePromise","enableColumnAutosize","columnHoverClassName","computedEnableColumnHover","renderRowDetailsExpandIcon","renderRowDetailsCollapsedIcon","computedOnRowMouseDown","disabledRows","rowFocusClassName","computedCellBulkUpdateMouseDown","computedCellBulkUpdateMouseUp","bulkUpdateMouseDown","remoteOffset","totalCount","dataArray","slice","isGrouped","defaultRowHeight","getDefaultRowHeight","depth","map","rowData","index","id","realIndex","active","focusedRow","indexInGroup","keyIndex","concat","isSelected","undefined","hasOwnProperty","rowExpanded","rowspanZIndex","minWidth","width","groupCount","rowIndex","remoteRowIndex","last","lastNonEmpty","totalDataCount","multiSelect","selection","selected","expanded","dataSourceArray","onMouseEnter","onMouseLeave","onClick","onMouseDown","onRowDoubleClick","onCellDoubleClick","onCellMouseDown","even","odd","disabledRow","onCellBulkUpdateMouseDown","onMouseUp","editing","__group","rowGroupKey","keyPath","join","collapsed","groupProps","groupSummary","groupColumnSummaries","parentGroupDataArray","tmpIndex","__summary","summaryProps","position","__parentGroup","row","computedRowspans","Math","max","createElement","_default"],"sources":["/Users/alexandre.nepomuceno/Documents/agendaagroamais/node_modules/@inovua/reactdatagrid-community/Layout/ColumnLayout/Content/renderRows.js"],"sourcesContent":["/** \n * Copyright Â© INOVUA TRADING.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\nvar _react = _interopRequireDefault(require(\"react\"));\nvar _Row = _interopRequireDefault(require(\"./Row\"));\nvar _getRowSpans = _interopRequireDefault(require(\"./getRowSpans\"));\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nvar emptyObject = Object.freeze ? Object.freeze({}) : {};\nvar renderRows = function renderRows(_ref, _ref2) {\n  var from = _ref.from,\n    to = _ref.to,\n    empty = _ref.empty,\n    renderIndex = _ref.renderIndex,\n    editRowIndex = _ref.editRowIndex,\n    editValue = _ref.editValue,\n    editColumnIndex = _ref.editColumnIndex,\n    editColumnId = _ref.editColumnId,\n    setRowSpan = _ref.setRowSpan,\n    sticky = _ref.sticky,\n    rowHeight = _ref.rowHeight,\n    tryNextRowEdit = _ref.tryNextRowEdit,\n    onEditStop = _ref.onEditStop,\n    onEditStart = _ref.onEditStart,\n    onEditValueChange = _ref.onEditValueChange,\n    scrollLeft = _ref.scrollLeft,\n    columnRenderCount = _ref.columnRenderCount,\n    columnRenderStartIndex = _ref.columnRenderStartIndex,\n    memorizedScrollLeft = _ref.memorizedScrollLeft;\n  var availableWidth = _ref2.availableWidth,\n    data = _ref2.data,\n    onTransitionEnd = _ref2.onTransitionEnd,\n    columns = _ref2.columns,\n    computedPivot = _ref2.computedPivot,\n    groupColumn = _ref2.groupColumn,\n    activeRowRef = _ref2.activeRowRef,\n    columnsMap = _ref2.columnsMap,\n    renderLockedStartCells = _ref2.renderLockedStartCells,\n    renderLockedEndCells = _ref2.renderLockedEndCells,\n    computedOnCellMouseDown = _ref2.computedOnCellMouseDown,\n    computedEnableRowspan = _ref2.computedEnableRowspan,\n    lockedStartColumns = _ref2.lockedStartColumns,\n    lockedEndColumns = _ref2.lockedEndColumns,\n    renderDetailsGrid = _ref2.renderDetailsGrid,\n    editable = _ref2.editable,\n    rowDetailsWidth = _ref2.rowDetailsWidth,\n    scrollbars = _ref2.scrollbars,\n    scrollToColumn = _ref2.scrollToColumn,\n    scrollToIndexIfNeeded = _ref2.scrollToIndexIfNeeded,\n    hasLockedStart = _ref2.hasLockedStart,\n    hasLockedEnd = _ref2.hasLockedEnd,\n    computedShowEmptyRows = _ref2.computedShowEmptyRows,\n    setRowSelected = _ref2.setRowSelected,\n    setRowExpanded = _ref2.setRowExpanded,\n    toggleRowExpand = _ref2.toggleRowExpand,\n    toggleNodeExpand = _ref2.toggleNodeExpand,\n    expandOnMouseDown = _ref2.expandOnMouseDown,\n    loadNodeAsync = _ref2.loadNodeAsync,\n    computedTreeEnabled = _ref2.computedTreeEnabled,\n    computedActiveCell = _ref2.computedActiveCell,\n    rtl = _ref2.rtl,\n    naturalRowHeight = _ref2.naturalRowHeight,\n    lastCellInRange = _ref2.lastCellInRange,\n    getCellSelectionKey = _ref2.getCellSelectionKey,\n    onRowContextMenu = _ref2.onRowContextMenu,\n    columnUserSelect = _ref2.columnUserSelect,\n    selectAll = _ref2.selectAll,\n    deselectAll = _ref2.deselectAll,\n    expandGroupTitle = _ref2.expandGroupTitle,\n    expandColumn = _ref2.expandColumn,\n    computedCellSelection = _ref2.computedCellSelection,\n    lastLockedStartIndex = _ref2.lastLockedStartIndex,\n    lastLockedEndIndex = _ref2.lastLockedEndIndex,\n    lastUnlockedIndex = _ref2.lastUnlockedIndex,\n    computedGroupBy = _ref2.computedGroupBy,\n    computedIndexesInGroups = _ref2.computedIndexesInGroups,\n    edition = _ref2.edition,\n    computedLicenseValid = _ref2.computedLicenseValid,\n    computedGroupCounts = _ref2.computedGroupCounts,\n    rowHeightManager = _ref2.rowHeightManager,\n    maxRowHeight = _ref2.maxRowHeight,\n    minRowHeight = _ref2.minRowHeight,\n    editStartEvent = _ref2.editStartEvent,\n    getItemId = _ref2.getItemId,\n    firstUnlockedIndex = _ref2.firstUnlockedIndex,\n    firstLockedStartIndex = _ref2.firstLockedStartIndex,\n    firstLockedEndIndex = _ref2.firstLockedEndIndex,\n    maxVisibleRows = _ref2.maxVisibleRows,\n    onRowMouseEnter = _ref2.onRowMouseEnter,\n    onRowMouseLeave = _ref2.onRowMouseLeave,\n    computedOnRowClick = _ref2.computedOnRowClick,\n    computedRowDoubleClick = _ref2.computedRowDoubleClick,\n    onCellClick = _ref2.onCellClick,\n    computedCellDoubleClick = _ref2.computedCellDoubleClick,\n    onCellSelectionDraggerMouseDown = _ref2.onCellSelectionDraggerMouseDown,\n    onCellEnter = _ref2.onCellEnter,\n    onColumnMouseEnter = _ref2.onColumnMouseEnter,\n    onColumnMouseLeave = _ref2.onColumnMouseLeave,\n    columnIndexHovered = _ref2.columnIndexHovered,\n    onEditCancel = _ref2.onEditCancel,\n    onEditComplete = _ref2.onEditComplete,\n    computedCellMultiSelectionEnabled = _ref2.computedCellMultiSelectionEnabled,\n    nativeScroll = _ref2.nativeScroll,\n    renderRow = _ref2.renderRow,\n    onRenderRow = _ref2.onRenderRow,\n    rowClassName = _ref2.rowClassName,\n    rowStyle = _ref2.rowStyle,\n    rowFactory = _ref2.rowFactory,\n    _ref2$rowProps = _ref2.rowProps,\n    passedProps = _ref2$rowProps === void 0 ? emptyObject : _ref2$rowProps,\n    rowKey = _ref2.rowKey,\n    cellFactory = _ref2.cellFactory,\n    computedSelected = _ref2.computedSelected,\n    computedUnselected = _ref2.computedUnselected,\n    treeColumn = _ref2.treeColumn,\n    renderNodeTool = _ref2.renderNodeTool,\n    renderTreeCollapseTool = _ref2.renderTreeCollapseTool,\n    renderTreeExpandTool = _ref2.renderTreeExpandTool,\n    renderGroupCollapseTool = _ref2.renderGroupCollapseTool,\n    renderGroupExpandTool = _ref2.renderGroupExpandTool,\n    renderTreeLoadingTool = _ref2.renderTreeLoadingTool,\n    rowExpandHeight = _ref2.rowExpandHeight,\n    isRowExpandedById = _ref2.isRowExpandedById,\n    computedRenderRowDetails = _ref2.computedRenderRowDetails,\n    isRowExpandableAt = _ref2.isRowExpandableAt,\n    computedRowExpandEnabled = _ref2.computedRowExpandEnabled,\n    computedRowMultiSelectionEnabled = _ref2.computedRowMultiSelectionEnabled,\n    computedRowSelectionEnabled = _ref2.computedRowSelectionEnabled,\n    computedActiveIndex = _ref2.computedActiveIndex,\n    computedSkip = _ref2.computedSkip,\n    computedShowZebraRows = _ref2.computedShowZebraRows,\n    computedHasColSpan = _ref2.computedHasColSpan,\n    initialRowHeight = _ref2.rowHeight,\n    totalColumnCount = _ref2.totalColumnCount,\n    totalComputedWidth = _ref2.totalComputedWidth,\n    totalLockedStartWidth = _ref2.totalLockedStartWidth,\n    totalLockedEndWidth = _ref2.totalLockedEndWidth,\n    totalUnlockedWidth = _ref2.totalUnlockedWidth,\n    currentDataSourceCount = _ref2.currentDataSourceCount,\n    computedShowCellBorders = _ref2.computedShowCellBorders,\n    emptyScrollOffset = _ref2.emptyScrollOffset,\n    showHorizontalCellBorders = _ref2.showHorizontalCellBorders,\n    showVerticalCellBorders = _ref2.showVerticalCellBorders,\n    getScrollLeftMax = _ref2.getScrollLeftMax,\n    shouldRenderCollapsedRowDetails = _ref2.shouldRenderCollapsedRowDetails,\n    rowDetailsStyle = _ref2.rowDetailsStyle,\n    minRowWidth = _ref2.minRowWidth,\n    maxWidth = _ref2.maxWidth,\n    _ref2$startIndex = _ref2.startIndex,\n    startIndex = _ref2$startIndex === void 0 ? 0 : _ref2$startIndex,\n    groupNestingSize = _ref2.groupNestingSize,\n    treeNestingSize = _ref2.treeNestingSize,\n    onGroupToggle = _ref2.onGroupToggle,\n    computedCollapsedGroups = _ref2.computedCollapsedGroups,\n    computedExpandedGroups = _ref2.computedExpandedGroups,\n    groupPathSeparator = _ref2.groupPathSeparator,\n    renderGroupTitle = _ref2.renderGroupTitle,\n    renderGroupTool = _ref2.renderGroupTool,\n    renderLockedEndGroupTitle = _ref2.renderLockedEndGroupTitle,\n    renderUnlockedGroupTitle = _ref2.renderUnlockedGroupTitle,\n    virtualizeColumns = _ref2.virtualizeColumns,\n    computedLivePagination = _ref2.computedLivePagination,\n    onRowReorder = _ref2.onRowReorder,\n    onDragRowMouseDown = _ref2.onDragRowMouseDown,\n    theme = _ref2.theme,\n    onContextMenu = _ref2.onContextMenu,\n    setActiveIndex = _ref2.setActiveIndex,\n    currentEditCompletePromise = _ref2.currentEditCompletePromise,\n    enableColumnAutosize = _ref2.enableColumnAutosize,\n    columnHoverClassName = _ref2.columnHoverClassName,\n    computedEnableColumnHover = _ref2.computedEnableColumnHover,\n    renderRowDetailsExpandIcon = _ref2.renderRowDetailsExpandIcon,\n    renderRowDetailsCollapsedIcon = _ref2.renderRowDetailsCollapsedIcon,\n    computedOnRowMouseDown = _ref2.computedOnRowMouseDown,\n    disabledRows = _ref2.disabledRows,\n    rowFocusClassName = _ref2.rowFocusClassName,\n    computedCellBulkUpdateMouseDown = _ref2.computedCellBulkUpdateMouseDown,\n    computedCellBulkUpdateMouseUp = _ref2.computedCellBulkUpdateMouseUp,\n    bulkUpdateMouseDown = _ref2.bulkUpdateMouseDown;\n  var remoteOffset = computedLivePagination ? 0 : computedSkip || 0;\n  var totalCount = data.length;\n  var dataArray = data.slice(from, to);\n  var isGrouped = computedGroupBy && computedGroupBy.length;\n  var defaultRowHeight = rowHeightManager.getDefaultRowHeight();\n  if (computedShowEmptyRows && !dataArray.length) {\n    dataArray = [null];\n  }\n  var depth = null;\n  if (isGrouped) {\n    depth = computedGroupBy.length;\n  }\n  return dataArray.map(function (rowData, i) {\n    var index = i + startIndex;\n    var id = rowData ? getItemId(rowData) : i;\n    var realIndex = index + from;\n    var active = computedActiveIndex === realIndex;\n    var focusedRow = computedActiveIndex === realIndex;\n    var indexInGroup = isGrouped ? computedIndexesInGroups[realIndex] : null;\n    if (empty) {\n      indexInGroup = realIndex + (totalCount % 2 - 1);\n    }\n    var keyIndex = rowKey === 'realIndex' ? realIndex : index;\n    var key = \"row-\".concat(keyIndex);\n    var isSelected = !empty && computedRowSelectionEnabled && (computedRowMultiSelectionEnabled ? computedSelected === true ? computedUnselected ? computedUnselected[id] === undefined : true : computedSelected.hasOwnProperty(id) : computedSelected == id);\n    var rowExpanded = isRowExpandedById(id);\n    var rowProps = {\n      rowspanZIndex: totalCount - realIndex,\n      availableWidth: availableWidth,\n      computedGroupBy: computedGroupBy,\n      expandGroupTitle: expandGroupTitle,\n      expandColumn: expandColumn,\n      getCellSelectionKey: getCellSelectionKey,\n      id: id,\n      depth: depth,\n      columns: columns,\n      columnsMap: columnsMap,\n      computedHasColSpan: computedHasColSpan,\n      lockedStartColumns: lockedStartColumns,\n      lockedEndColumns: lockedEndColumns,\n      hasLockedStart: hasLockedStart,\n      rowDetailsWidth: rowDetailsWidth,\n      hasLockedEnd: hasLockedEnd,\n      columnUserSelect: columnUserSelect,\n      minWidth: minRowWidth,\n      width: totalComputedWidth,\n      active: active,\n      activeRowRef: activeRowRef,\n      emptyScrollOffset: emptyScrollOffset,\n      empty: empty,\n      editable: editable,\n      key: key,\n      scrollLeft: scrollLeft,\n      getScrollLeftMax: getScrollLeftMax,\n      groupColumn: groupColumn,\n      renderRow: renderRow,\n      onRenderRow: onRenderRow,\n      cellFactory: cellFactory,\n      computedActiveCell: computedActiveCell,\n      computedShowZebraRows: computedShowZebraRows,\n      lastCellInRange: lastCellInRange,\n      groupNestingSize: groupNestingSize,\n      treeNestingSize: treeNestingSize,\n      columnRenderCount: columnRenderCount,\n      rowStyle: rowStyle,\n      rowClassName: rowClassName,\n      onTransitionEnd: onTransitionEnd,\n      onRowContextMenu: onRowContextMenu,\n      renderNodeTool: renderNodeTool,\n      indexInGroup: isGrouped ? indexInGroup : null,\n      groupCount: isGrouped && computedGroupCounts ? computedGroupCounts[realIndex] : 0,\n      editStartEvent: editStartEvent,\n      virtualizeColumns: virtualizeColumns,\n      firstUnlockedIndex: firstUnlockedIndex,\n      firstLockedStartIndex: firstLockedStartIndex,\n      columnRenderStartIndex: columnRenderStartIndex,\n      firstLockedEndIndex: firstLockedEndIndex,\n      tryNextRowEdit: tryNextRowEdit,\n      totalComputedWidth: totalComputedWidth,\n      totalLockedStartWidth: totalLockedStartWidth,\n      totalLockedEndWidth: totalLockedEndWidth,\n      totalUnlockedWidth: totalUnlockedWidth,\n      sticky: sticky,\n      computedCellSelection: computedCellSelection,\n      computedCellMultiSelectionEnabled: computedCellMultiSelectionEnabled,\n      shouldRenderCollapsedRowDetails: shouldRenderCollapsedRowDetails,\n      rowDetailsStyle: rowDetailsStyle,\n      renderDetailsGrid: renderDetailsGrid,\n      renderIndex: renderIndex,\n      realIndex: realIndex,\n      rowIndex: realIndex,\n      remoteRowIndex: remoteOffset + realIndex,\n      maxVisibleRows: maxVisibleRows,\n      last: !computedShowEmptyRows ? realIndex == totalCount - 1 : !!(maxVisibleRows && realIndex >= maxVisibleRows - 1 && realIndex == totalCount - 1),\n      lastNonEmpty: realIndex === totalCount - 1,\n      totalDataCount: totalCount,\n      rowHeight: rowHeight,\n      defaultRowHeight: defaultRowHeight,\n      rowExpandHeight: rowExpandHeight,\n      initialRowHeight: initialRowHeight,\n      setRowSpan: setRowSpan,\n      maxRowHeight: maxRowHeight,\n      minRowHeight: minRowHeight,\n      getItemId: getItemId,\n      computedShowCellBorders: computedShowCellBorders,\n      showHorizontalCellBorders: showHorizontalCellBorders,\n      showVerticalCellBorders: showVerticalCellBorders,\n      passedProps: passedProps,\n      setRowSelected: setRowSelected,\n      setRowExpanded: setRowExpanded,\n      renderLockedStartCells: renderLockedStartCells,\n      renderLockedEndCells: renderLockedEndCells,\n      computedRowExpandEnabled: computedRowExpandEnabled,\n      computedRenderRowDetails: computedRenderRowDetails,\n      isRowExpandableAt: isRowExpandableAt,\n      treeColumn: treeColumn,\n      rtl: rtl,\n      toggleRowExpand: toggleRowExpand,\n      toggleNodeExpand: toggleNodeExpand,\n      expandOnMouseDown: expandOnMouseDown,\n      loadNodeAsync: loadNodeAsync,\n      edition: edition,\n      computedLicenseValid: computedLicenseValid,\n      computedEnableRowspan: computedEnableRowspan,\n      computedTreeEnabled: computedTreeEnabled,\n      naturalRowHeight: naturalRowHeight,\n      selectAll: selectAll,\n      deselectAll: deselectAll,\n      totalColumnCount: totalColumnCount,\n      computedPivot: computedPivot,\n      multiSelect: computedRowMultiSelectionEnabled,\n      selection: computedSelected,\n      selected: isSelected,\n      expanded: rowExpanded,\n      lastLockedStartIndex: lastLockedStartIndex,\n      lastLockedEndIndex: lastLockedEndIndex,\n      lastUnlockedIndex: lastUnlockedIndex,\n      data: rowData,\n      dataSourceArray: data,\n      onMouseEnter: !empty ? onRowMouseEnter : null,\n      onMouseLeave: !empty ? onRowMouseLeave : null,\n      onClick: !empty ? computedOnRowClick : null,\n      onMouseDown: !empty ? computedOnRowMouseDown : null,\n      onRowDoubleClick: !empty ? computedRowDoubleClick : null,\n      scrollToColumn: scrollToColumn,\n      scrollToIndexIfNeeded: scrollToIndexIfNeeded,\n      onCellClick: onCellClick,\n      onCellDoubleClick: computedCellDoubleClick,\n      onCellSelectionDraggerMouseDown: onCellSelectionDraggerMouseDown,\n      onCellMouseDown: computedOnCellMouseDown,\n      onColumnMouseEnter: onColumnMouseEnter,\n      onColumnMouseLeave: onColumnMouseLeave,\n      columnIndexHovered: columnIndexHovered,\n      onCellEnter: onCellEnter,\n      onEditStop: onEditStop,\n      onEditStart: onEditStart,\n      onEditCancel: onEditCancel,\n      onEditValueChange: onEditValueChange,\n      onEditComplete: onEditComplete,\n      scrollbars: scrollbars,\n      even: false,\n      odd: false,\n      nativeScroll: nativeScroll,\n      onRowReorder: onRowReorder,\n      onDragRowMouseDown: onDragRowMouseDown,\n      theme: theme,\n      onContextMenu: onContextMenu,\n      setActiveIndex: setActiveIndex,\n      renderTreeCollapseTool: renderTreeCollapseTool,\n      renderTreeExpandTool: renderTreeExpandTool,\n      renderGroupCollapseTool: renderGroupCollapseTool,\n      renderGroupExpandTool: renderGroupExpandTool,\n      renderTreeLoadingTool: renderTreeLoadingTool,\n      currentEditCompletePromise: currentEditCompletePromise,\n      enableColumnAutosize: enableColumnAutosize,\n      columnHoverClassName: columnHoverClassName,\n      computedEnableColumnHover: computedEnableColumnHover,\n      renderRowDetailsExpandIcon: renderRowDetailsExpandIcon,\n      renderRowDetailsCollapsedIcon: renderRowDetailsCollapsedIcon,\n      memorizedScrollLeft: memorizedScrollLeft,\n      disabledRow: disabledRows ? disabledRows[realIndex] : null,\n      focusedRow: focusedRow,\n      rowFocusClassName: rowFocusClassName,\n      onCellBulkUpdateMouseDown: computedCellBulkUpdateMouseDown,\n      onMouseUp: computedCellBulkUpdateMouseUp,\n      bulkUpdateMouseDown: bulkUpdateMouseDown\n    };\n    if (rowProps.rowIndex === editRowIndex) {\n      rowProps.editing = true;\n      rowProps.editValue = editValue;\n      rowProps.editColumnIndex = editColumnIndex;\n      rowProps.editColumnId = editColumnId;\n    }\n    if (rowData && rowData.__group) {\n      rowProps.indexInGroup = null;\n      var rowGroupKey = \"\".concat(rowData.keyPath.join(groupPathSeparator));\n      var collapsed;\n      if (computedCollapsedGroups === true) {\n        collapsed = true;\n        if (computedExpandedGroups[rowGroupKey]) {\n          collapsed = false;\n        }\n      } else if (computedExpandedGroups === true) {\n        collapsed = false;\n        if (computedCollapsedGroups[rowGroupKey]) {\n          collapsed = true;\n        }\n      } else {\n        collapsed = computedCollapsedGroups[rowGroupKey];\n      }\n      rowProps.groupProps = {\n        renderGroupTitle: renderGroupTitle,\n        renderGroupTool: renderGroupTool,\n        renderLockedEndGroupTitle: renderLockedEndGroupTitle,\n        renderUnlockedGroupTitle: renderUnlockedGroupTitle,\n        onGroupToggle: onGroupToggle,\n        collapsed: collapsed,\n        groupNestingSize: groupNestingSize,\n        depth: rowData.depth - 1\n      };\n      rowProps.onGroupToggle = onGroupToggle;\n      rowProps.groupSummary = rowData.groupSummary;\n      rowProps.groupColumnSummaries = rowData.groupColumnSummaries;\n    }\n    if (isGrouped) {\n      rowProps.parentGroupDataArray = [];\n    }\n    var even = !!((isGrouped && !computedPivot ? indexInGroup : realIndex) % 2);\n    if (empty && isGrouped) {\n      var tmpIndex = (computedIndexesInGroups[currentDataSourceCount - 1] || 0) + (realIndex - currentDataSourceCount - 1);\n      even = !!(tmpIndex % 2);\n    }\n    if (rowData && rowData.__summary) {\n      rowProps.summaryProps = {\n        position: rowData.__summary,\n        groupProps: rowData.__parentGroup,\n        value: rowData.__parentGroup.groupColumnSummaries,\n        depth: rowData.__parentGroup.depth - 1\n      };\n      even = true;\n    }\n    if (maxWidth != null) {\n      rowProps.maxWidth = maxWidth;\n    }\n    rowProps.even = even;\n    rowProps.odd = !even;\n    var row;\n    if (rowFactory) {\n      row = rowFactory(rowProps);\n    }\n    if (computedEnableRowspan) {\n      rowProps.computedRowspans = (0, _getRowSpans.default)(rowProps);\n      setRowSpan(Math.max.apply(Math, (0, _toConsumableArray2.default)(Object.keys(rowProps.computedRowspans).map(function (key) {\n        return rowProps.computedRowspans[key];\n      }))));\n    }\n    if (row === undefined) {\n      row = _react.default.createElement(_Row.default, _objectSpread({}, rowProps));\n    }\n    return row;\n  });\n};\nvar _default = renderRows;\nexports.default = _default;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script"}