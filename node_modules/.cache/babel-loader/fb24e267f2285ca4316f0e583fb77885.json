{"ast":null,"code":"/**\n * Copyright Â© INOVUA TRADING.\n *\n * This source code is licensed under the Commercial License found in the\n * LICENSE file in the root directory of this source tree.\n */\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.sortTreeDataWithInfo = exports.sortTreeData = exports.expandByIdsWithInfo = exports.expandByIds = exports.expandAtIndexes = exports.expandAtIndex = exports.collapseByIds = exports.collapseAtIndexes = exports.collapseAtIndexWithInfo = exports.collapseAtIndex = void 0;\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\nvar _sorty = _interopRequireDefault(require(\"@inovua/reactdatagrid-community/packages/sorty\"));\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      (0, _defineProperty2.default)(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n  return target;\n}\nvar EMPTY_OBJECT = {};\nvar sortAsc = function sortAsc(a, b) {\n  return a - b;\n};\nvar identity = function identity(a) {\n  return a;\n};\nvar augmentNode = function augmentNode(n, parentNode, index) {\n  var config = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : EMPTY_OBJECT;\n  var idProperty = config.idProperty || 'id';\n  var pathSeparator = config.pathSeparator || '/';\n  var nodesName = config.nodesName || 'nodes';\n  var expandedNodes = config.expandedNodes || EMPTY_OBJECT;\n  var dataSourceCache = config.dataSourceCache || EMPTY_OBJECT;\n  var nodeCache = config.nodeCache || EMPTY_OBJECT;\n  var loadingNodes = config.loadingNodes || EMPTY_OBJECT;\n  if (!n) {\n    return;\n  }\n  if (!n[idProperty]) {\n    console.error(\"Set the correct \\\"idProperty\\\".\");\n    return;\n  }\n  var parentNodeId = parentNode ? parentNode[idProperty] : undefined;\n  var path = parentNode ? \"\".concat(parentNodeId).concat(pathSeparator).concat(n[idProperty]) : \"\".concat(n[idProperty]);\n  var cacheKey = config.generateIdFromPath ? path : n[idProperty];\n  var initialNodes = n[nodesName];\n  if (dataSourceCache[cacheKey]) {\n    n = _objectSpread(_objectSpread({}, n), dataSourceCache[cacheKey]);\n  }\n  if (nodeCache[cacheKey]) {\n    n = _objectSpread(_objectSpread({}, n), nodeCache[cacheKey]);\n  }\n  var itemNodes = n[nodesName];\n  var extraNodeProps = n ? n.__extraNodeProps : undefined;\n  var existingDepth = extraNodeProps ? extraNodeProps.depth : undefined;\n  var depth = existingDepth !== undefined ? existingDepth : parentNode ? parentNode.__nodeProps ? parentNode.__nodeProps.depth + 1 : 1 : 0;\n  var nodeProps = (config.nodeProps || identity)({\n    leafNode: itemNodes === undefined,\n    asyncNode: itemNodes === null,\n    expanded: !!expandedNodes[cacheKey],\n    loading: !!loadingNodes[cacheKey],\n    initialNodes: initialNodes,\n    parentNodeId: parentNodeId,\n    path: path,\n    key: cacheKey,\n    childIndex: index,\n    itemNodesCount: Array.isArray(itemNodes) ? itemNodes.length : 0,\n    depth: depth\n  }, n);\n  if (config.isNodeLeaf) {\n    nodeProps.leafNode = config.isNodeLeaf({\n      node: n,\n      nodeProps: nodeProps\n    });\n  }\n  if (config.isNodeAsync) {\n    nodeProps.asyncNode = config.isNodeAsync({\n      node: n,\n      nodeProps: nodeProps\n    });\n  }\n  var result = _objectSpread(_objectSpread({}, n), {}, {\n    __nodeProps: nodeProps\n  });\n  if (config.generateIdFromPath) {\n    result[idProperty] = path;\n  }\n  return result;\n};\nvar expandAtIndexWithInfo = function expandAtIndexWithInfo(dataArray, index) {\n  var config = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : EMPTY_OBJECT;\n  var nodesName = config.nodesName || 'nodes';\n  var idProperty = config.idProperty || 'id';\n  var node = dataArray[index];\n  if (!node) {\n    return {\n      data: dataArray,\n      insertCount: 0\n    };\n  }\n  var nextNode = dataArray[index + 1];\n  var parentNodeId = node[idProperty];\n  var nodes = node[nodesName];\n  if (!Array.isArray(nodes) || !nodes.length || nextNode && nextNode.__nodeProps && nextNode.__nodeProps.parentNodeId === parentNodeId) {\n    return {\n      data: dataArray,\n      insertCount: 0\n    };\n  }\n  var insertIds = {};\n  nodes = nodes.map(function (n, index) {\n    return augmentNode(n, node, index, config);\n  });\n  return {\n    data: dataArray.slice(0, index).concat(node).concat(nodes).concat(dataArray.slice(index + 1)),\n    insertNodes: nodes,\n    insertIds: insertIds,\n    insertCount: nodes.length\n  };\n};\nvar expandAtIndexes = function expandAtIndexes(dataArray, indexes) {\n  var config = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : EMPTY_OBJECT;\n  indexes = indexes.sort(sortAsc);\n  var alreadyInserted = 0;\n  if (!Array.isArray(indexes) || !indexes.length) {\n    return dataArray;\n  }\n  return indexes.reduce(function (dataSource, index) {\n    var _expandAtIndexWithInf = expandAtIndexWithInfo(dataSource, index + alreadyInserted, config),\n      data = _expandAtIndexWithInf.data,\n      insertCount = _expandAtIndexWithInf.insertCount;\n    alreadyInserted += insertCount;\n    return data;\n  }, dataArray);\n};\nexports.expandAtIndexes = expandAtIndexes;\nvar collapseAtIndexes = function collapseAtIndexes(dataArray, indexes) {\n  var config = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : EMPTY_OBJECT;\n  indexes = indexes.sort(sortAsc);\n  var alreadyRemoved = 0;\n  if (!Array.isArray(indexes) || !indexes.length) {\n    return dataArray;\n  }\n  return indexes.reduce(function (dataSource, index) {\n    var _collapseAtIndexWithI = collapseAtIndexWithInfo(dataSource, index - alreadyRemoved, config),\n      data = _collapseAtIndexWithI.data,\n      removeCount = _collapseAtIndexWithI.removeCount;\n    alreadyRemoved += removeCount;\n    return data;\n  }, dataArray);\n};\nexports.collapseAtIndexes = collapseAtIndexes;\nvar expandAtIndex = function expandAtIndex(dataArray, index) {\n  var config = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : EMPTY_OBJECT;\n  var _expandAtIndexWithInf2 = expandAtIndexWithInfo(dataArray, index, config),\n    data = _expandAtIndexWithInf2.data;\n  return data;\n};\nexports.expandAtIndex = expandAtIndex;\nvar expandByIds = function expandByIds(dataArray, idMap) {\n  var config = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : EMPTY_OBJECT;\n  var _expandByIdsWithInfo = expandByIdsWithInfo(dataArray, idMap, config),\n    data = _expandByIdsWithInfo.data;\n  return data;\n};\nexports.expandByIds = expandByIds;\nvar expandByIdsWithInfo = function expandByIdsWithInfo(dataArray) {\n  var config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : EMPTY_OBJECT;\n  var parentNode = arguments.length > 2 ? arguments[2] : undefined;\n  var result = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : [];\n  var idToIndexMap = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {};\n  var dataMap = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : {};\n  var startIndex = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : 0;\n  var nodesToExpand = arguments.length > 7 && arguments[7] !== undefined ? arguments[7] : [];\n  var idProperty = config.idProperty || 'id';\n  var nodesName = config.nodesName || 'nodes';\n  var expandedNodes = config.expandedNodes || EMPTY_OBJECT;\n  var nextItem;\n  var itemAlreadyExpanded;\n  var itemId;\n  var itemNodes;\n  dataArray.forEach(function (item, i) {\n    item = augmentNode(item, parentNode, i, config);\n    if (item) {\n      itemId = item[idProperty];\n      itemNodes = item[nodesName];\n      idToIndexMap[itemId] = i + startIndex;\n      dataMap[itemId] = item;\n      result.push(item);\n      if (expandedNodes[itemId]) {\n        if (Array.isArray(itemNodes)) {\n          nextItem = dataArray[i + 1];\n          itemAlreadyExpanded = nextItem && nextItem.__nodeProps && nextItem.__nodeProps.parentNodeId === itemId;\n          if (!itemAlreadyExpanded) {\n            var startFrom = result.length;\n            expandByIdsWithInfo(itemNodes, config, item, result, idToIndexMap, dataMap, startFrom, nodesToExpand);\n            startIndex += result.length - startFrom;\n          }\n        } else if (item.__nodeProps.expanded && !item.__nodeProps.loading && item.__nodeProps.asyncNode && !item.__nodeProps.itemNodesCount && (!config.collapsingNodes || !config.collapsingNodes[itemId])) {\n          nodesToExpand.push(item);\n        }\n      }\n    }\n  });\n  return {\n    data: result,\n    dataMap: dataMap,\n    idToIndexMap: idToIndexMap,\n    nodesToExpand: nodesToExpand\n  };\n};\nexports.expandByIdsWithInfo = expandByIdsWithInfo;\nvar collapseByIds = function collapseByIds(dataArray, idMap) {\n  var config = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : EMPTY_OBJECT;\n  var idToIndexMap = config.idToIndexMap;\n  if (!idToIndexMap) {\n    throw new Error(\"The last argument to \\\"collapseByIds\\\" should contain a \\\"idToIndexMap\\\" property. No such property found!\");\n  }\n  var indexes = [];\n  var index;\n  for (var id in idMap) {\n    index = idToIndexMap[id];\n    if (index !== undefined) {\n      indexes.push(index);\n    }\n  }\n  return collapseAtIndexes(dataArray, indexes, config);\n};\nexports.collapseByIds = collapseByIds;\nvar collapseAtIndexWithInfo = function collapseAtIndexWithInfo(dataArray, index) {\n  var config = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : EMPTY_OBJECT;\n  var node = dataArray[index];\n  var idProperty = config.idProperty || 'id';\n  if (!node) {\n    return {\n      data: dataArray,\n      removeCount: 0\n    };\n  }\n  var parentNodeId = node[idProperty];\n  var nodesName = config.nodesName || 'nodes';\n  var nodes = node[nodesName];\n  var nextNode = dataArray[index + 1];\n  if (!Array.isArray(nodes) || !nodes.length || nextNode && (!nextNode.__nodeProps || nextNode.__nodeProps.parentNodeId !== parentNodeId)) {\n    return {\n      data: dataArray,\n      removeCount: 0\n    };\n  }\n  return {\n    data: dataArray.slice(0, index).concat(node).concat(dataArray.slice(index + nodes.length + 1)),\n    removeCount: nodes.length\n  };\n};\nexports.collapseAtIndexWithInfo = collapseAtIndexWithInfo;\nvar collapseAtIndex = function collapseAtIndex(dataArray, index) {\n  var config = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : EMPTY_OBJECT;\n  var _collapseAtIndexWithI2 = collapseAtIndexWithInfo(dataArray, index, config),\n    data = _collapseAtIndexWithI2.data;\n  return data;\n};\nexports.collapseAtIndex = collapseAtIndex;\nvar sortTreeData = function sortTreeData(sortInfo, dataArray) {\n  var _ref = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : EMPTY_OBJECT,\n    _ref$depth = _ref.depth,\n    depth = _ref$depth === void 0 ? 0 : _ref$depth,\n    deep = _ref.deep;\n  var _sortTreeDataWithInfo = sortTreeDataWithInfo(sortInfo, dataArray, depth),\n    data = _sortTreeDataWithInfo.data,\n    maxDepth = _sortTreeDataWithInfo.maxDepth;\n  if (deep) {\n    var currentDepth = depth;\n    while (currentDepth < maxDepth) {\n      currentDepth++;\n      data = sortTreeDataWithInfo(sortInfo, data, currentDepth).data;\n    }\n  }\n  return data;\n};\nexports.sortTreeData = sortTreeData;\nvar sortTreeDataWithInfo = function sortTreeDataWithInfo(sortInfo, dataArray) {\n  var depth = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n  var item;\n  var index = 0;\n  var currentDepth;\n  var currentPath;\n  var prevItemDepth = -1;\n  var _prevPath;\n  var prevMatchingDepthPath;\n  var arrayToSort;\n  var currentNodeChildren = [];\n  var map = {};\n  var sortIndexStart;\n  var maxDepth = 0;\n  while (item = dataArray[index]) {\n    currentDepth = item.__nodeProps.depth;\n    currentPath = item.__nodeProps.path;\n    maxDepth = Math.max(maxDepth, currentDepth);\n    if (currentDepth === depth) {\n      if (currentDepth > prevItemDepth) {\n        arrayToSort = [];\n        sortIndexStart = index;\n      }\n      arrayToSort.push(item);\n    }\n    if (prevItemDepth >= depth && currentDepth <= depth) {\n      if (currentNodeChildren.length) {\n        map[prevMatchingDepthPath] = currentNodeChildren;\n        currentNodeChildren = [];\n      }\n    }\n    if (currentDepth > depth) {\n      currentNodeChildren.push(item);\n    }\n    if (currentDepth < depth && arrayToSort && arrayToSort.length) {\n      (0, _sorty.default)(sortInfo, arrayToSort);\n      for (var i = 0, sortItemChildren, sortItemPath, sortItem;; i < arrayToSort.length) {\n        sortItem = arrayToSort[i];\n        if (!sortItem) {\n          break;\n        }\n        sortItemPath = sortItem.__nodeProps.path;\n        sortItemChildren = map[sortItemPath];\n        if (Array.isArray(sortItemChildren)) {\n          var _arrayToSort;\n          (_arrayToSort = arrayToSort).splice.apply(_arrayToSort, [i + 1, 0].concat((0, _toConsumableArray2.default)(sortItemChildren)));\n          i += sortItemChildren.length;\n        }\n        i++;\n      }\n      dataArray.splice.apply(dataArray, [sortIndexStart, arrayToSort.length].concat((0, _toConsumableArray2.default)(arrayToSort)));\n      arrayToSort = [];\n    }\n    index++;\n    if (currentDepth === depth) {\n      prevMatchingDepthPath = currentPath;\n    }\n    prevItemDepth = currentDepth;\n    _prevPath = currentPath;\n  }\n  if (currentNodeChildren.length) {\n    map[prevMatchingDepthPath] = currentNodeChildren;\n  }\n  if (arrayToSort && arrayToSort.length) {\n    (0, _sorty.default)(sortInfo, arrayToSort);\n    var idx = 0;\n    var _sortItemChildren;\n    var _sortItemPath;\n    var _sortItem;\n    for (;; idx < arrayToSort.length) {\n      _sortItem = arrayToSort[idx];\n      if (!_sortItem) {\n        break;\n      }\n      _sortItemPath = _sortItem.__nodeProps.path;\n      _sortItemChildren = map[_sortItemPath];\n      if (Array.isArray(_sortItemChildren)) {\n        var _arrayToSort2;\n        (_arrayToSort2 = arrayToSort).splice.apply(_arrayToSort2, [idx + 1, 0].concat((0, _toConsumableArray2.default)(_sortItemChildren)));\n        idx += _sortItemChildren.length;\n      }\n      idx++;\n    }\n    dataArray.splice.apply(dataArray, [sortIndexStart, arrayToSort.length].concat((0, _toConsumableArray2.default)(arrayToSort)));\n  }\n  return {\n    data: dataArray,\n    maxDepth: maxDepth\n  };\n};\nexports.sortTreeDataWithInfo = sortTreeDataWithInfo;","map":{"version":3,"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","sortTreeDataWithInfo","sortTreeData","expandByIdsWithInfo","expandByIds","expandAtIndexes","expandAtIndex","collapseByIds","collapseAtIndexes","collapseAtIndexWithInfo","collapseAtIndex","_toConsumableArray2","_defineProperty2","_sorty","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","default","getOwnPropertyDescriptors","defineProperties","EMPTY_OBJECT","sortAsc","a","b","identity","augmentNode","n","parentNode","index","config","undefined","idProperty","pathSeparator","nodesName","expandedNodes","dataSourceCache","nodeCache","loadingNodes","console","error","parentNodeId","path","concat","cacheKey","generateIdFromPath","initialNodes","itemNodes","extraNodeProps","__extraNodeProps","existingDepth","depth","__nodeProps","nodeProps","leafNode","asyncNode","expanded","loading","childIndex","itemNodesCount","Array","isArray","isNodeLeaf","node","isNodeAsync","result","expandAtIndexWithInfo","dataArray","data","insertCount","nextNode","nodes","insertIds","map","slice","insertNodes","indexes","sort","alreadyInserted","reduce","dataSource","_expandAtIndexWithInf","alreadyRemoved","_collapseAtIndexWithI","removeCount","_expandAtIndexWithInf2","idMap","_expandByIdsWithInfo","idToIndexMap","dataMap","startIndex","nodesToExpand","nextItem","itemAlreadyExpanded","itemId","item","startFrom","collapsingNodes","Error","id","_collapseAtIndexWithI2","sortInfo","_ref","_ref$depth","deep","_sortTreeDataWithInfo","maxDepth","currentDepth","currentPath","prevItemDepth","_prevPath","prevMatchingDepthPath","arrayToSort","currentNodeChildren","sortIndexStart","Math","max","sortItemChildren","sortItemPath","sortItem","_arrayToSort","splice","idx","_sortItemChildren","_sortItemPath","_sortItem","_arrayToSort2"],"sources":["/Users/alexandre.nepomuceno/Documents/agendaagroamais/node_modules/@inovua/reactdatagrid-enterprise/plugins/tree/tree/index.js"],"sourcesContent":["/**\n * Copyright Â© INOVUA TRADING.\n *\n * This source code is licensed under the Commercial License found in the\n * LICENSE file in the root directory of this source tree.\n */\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.sortTreeDataWithInfo = exports.sortTreeData = exports.expandByIdsWithInfo = exports.expandByIds = exports.expandAtIndexes = exports.expandAtIndex = exports.collapseByIds = exports.collapseAtIndexes = exports.collapseAtIndexWithInfo = exports.collapseAtIndex = void 0;\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\nvar _sorty = _interopRequireDefault(require(\"@inovua/reactdatagrid-community/packages/sorty\"));\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nvar EMPTY_OBJECT = {};\nvar sortAsc = function sortAsc(a, b) {\n  return a - b;\n};\nvar identity = function identity(a) {\n  return a;\n};\nvar augmentNode = function augmentNode(n, parentNode, index) {\n  var config = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : EMPTY_OBJECT;\n  var idProperty = config.idProperty || 'id';\n  var pathSeparator = config.pathSeparator || '/';\n  var nodesName = config.nodesName || 'nodes';\n  var expandedNodes = config.expandedNodes || EMPTY_OBJECT;\n  var dataSourceCache = config.dataSourceCache || EMPTY_OBJECT;\n  var nodeCache = config.nodeCache || EMPTY_OBJECT;\n  var loadingNodes = config.loadingNodes || EMPTY_OBJECT;\n  if (!n) {\n    return;\n  }\n  if (!n[idProperty]) {\n    console.error(\"Set the correct \\\"idProperty\\\".\");\n    return;\n  }\n  var parentNodeId = parentNode ? parentNode[idProperty] : undefined;\n  var path = parentNode ? \"\".concat(parentNodeId).concat(pathSeparator).concat(n[idProperty]) : \"\".concat(n[idProperty]);\n  var cacheKey = config.generateIdFromPath ? path : n[idProperty];\n  var initialNodes = n[nodesName];\n  if (dataSourceCache[cacheKey]) {\n    n = _objectSpread(_objectSpread({}, n), dataSourceCache[cacheKey]);\n  }\n  if (nodeCache[cacheKey]) {\n    n = _objectSpread(_objectSpread({}, n), nodeCache[cacheKey]);\n  }\n  var itemNodes = n[nodesName];\n  var extraNodeProps = n ? n.__extraNodeProps : undefined;\n  var existingDepth = extraNodeProps ? extraNodeProps.depth : undefined;\n  var depth = existingDepth !== undefined ? existingDepth : parentNode ? parentNode.__nodeProps ? parentNode.__nodeProps.depth + 1 : 1 : 0;\n  var nodeProps = (config.nodeProps || identity)({\n    leafNode: itemNodes === undefined,\n    asyncNode: itemNodes === null,\n    expanded: !!expandedNodes[cacheKey],\n    loading: !!loadingNodes[cacheKey],\n    initialNodes: initialNodes,\n    parentNodeId: parentNodeId,\n    path: path,\n    key: cacheKey,\n    childIndex: index,\n    itemNodesCount: Array.isArray(itemNodes) ? itemNodes.length : 0,\n    depth: depth\n  }, n);\n  if (config.isNodeLeaf) {\n    nodeProps.leafNode = config.isNodeLeaf({\n      node: n,\n      nodeProps: nodeProps\n    });\n  }\n  if (config.isNodeAsync) {\n    nodeProps.asyncNode = config.isNodeAsync({\n      node: n,\n      nodeProps: nodeProps\n    });\n  }\n  var result = _objectSpread(_objectSpread({}, n), {}, {\n    __nodeProps: nodeProps\n  });\n  if (config.generateIdFromPath) {\n    result[idProperty] = path;\n  }\n  return result;\n};\nvar expandAtIndexWithInfo = function expandAtIndexWithInfo(dataArray, index) {\n  var config = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : EMPTY_OBJECT;\n  var nodesName = config.nodesName || 'nodes';\n  var idProperty = config.idProperty || 'id';\n  var node = dataArray[index];\n  if (!node) {\n    return {\n      data: dataArray,\n      insertCount: 0\n    };\n  }\n  var nextNode = dataArray[index + 1];\n  var parentNodeId = node[idProperty];\n  var nodes = node[nodesName];\n  if (!Array.isArray(nodes) || !nodes.length || nextNode && nextNode.__nodeProps && nextNode.__nodeProps.parentNodeId === parentNodeId) {\n    return {\n      data: dataArray,\n      insertCount: 0\n    };\n  }\n  var insertIds = {};\n  nodes = nodes.map(function (n, index) {\n    return augmentNode(n, node, index, config);\n  });\n  return {\n    data: dataArray.slice(0, index).concat(node).concat(nodes).concat(dataArray.slice(index + 1)),\n    insertNodes: nodes,\n    insertIds: insertIds,\n    insertCount: nodes.length\n  };\n};\nvar expandAtIndexes = function expandAtIndexes(dataArray, indexes) {\n  var config = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : EMPTY_OBJECT;\n  indexes = indexes.sort(sortAsc);\n  var alreadyInserted = 0;\n  if (!Array.isArray(indexes) || !indexes.length) {\n    return dataArray;\n  }\n  return indexes.reduce(function (dataSource, index) {\n    var _expandAtIndexWithInf = expandAtIndexWithInfo(dataSource, index + alreadyInserted, config),\n      data = _expandAtIndexWithInf.data,\n      insertCount = _expandAtIndexWithInf.insertCount;\n    alreadyInserted += insertCount;\n    return data;\n  }, dataArray);\n};\nexports.expandAtIndexes = expandAtIndexes;\nvar collapseAtIndexes = function collapseAtIndexes(dataArray, indexes) {\n  var config = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : EMPTY_OBJECT;\n  indexes = indexes.sort(sortAsc);\n  var alreadyRemoved = 0;\n  if (!Array.isArray(indexes) || !indexes.length) {\n    return dataArray;\n  }\n  return indexes.reduce(function (dataSource, index) {\n    var _collapseAtIndexWithI = collapseAtIndexWithInfo(dataSource, index - alreadyRemoved, config),\n      data = _collapseAtIndexWithI.data,\n      removeCount = _collapseAtIndexWithI.removeCount;\n    alreadyRemoved += removeCount;\n    return data;\n  }, dataArray);\n};\nexports.collapseAtIndexes = collapseAtIndexes;\nvar expandAtIndex = function expandAtIndex(dataArray, index) {\n  var config = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : EMPTY_OBJECT;\n  var _expandAtIndexWithInf2 = expandAtIndexWithInfo(dataArray, index, config),\n    data = _expandAtIndexWithInf2.data;\n  return data;\n};\nexports.expandAtIndex = expandAtIndex;\nvar expandByIds = function expandByIds(dataArray, idMap) {\n  var config = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : EMPTY_OBJECT;\n  var _expandByIdsWithInfo = expandByIdsWithInfo(dataArray, idMap, config),\n    data = _expandByIdsWithInfo.data;\n  return data;\n};\nexports.expandByIds = expandByIds;\nvar expandByIdsWithInfo = function expandByIdsWithInfo(dataArray) {\n  var config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : EMPTY_OBJECT;\n  var parentNode = arguments.length > 2 ? arguments[2] : undefined;\n  var result = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : [];\n  var idToIndexMap = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {};\n  var dataMap = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : {};\n  var startIndex = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : 0;\n  var nodesToExpand = arguments.length > 7 && arguments[7] !== undefined ? arguments[7] : [];\n  var idProperty = config.idProperty || 'id';\n  var nodesName = config.nodesName || 'nodes';\n  var expandedNodes = config.expandedNodes || EMPTY_OBJECT;\n  var nextItem;\n  var itemAlreadyExpanded;\n  var itemId;\n  var itemNodes;\n  dataArray.forEach(function (item, i) {\n    item = augmentNode(item, parentNode, i, config);\n    if (item) {\n      itemId = item[idProperty];\n      itemNodes = item[nodesName];\n      idToIndexMap[itemId] = i + startIndex;\n      dataMap[itemId] = item;\n      result.push(item);\n      if (expandedNodes[itemId]) {\n        if (Array.isArray(itemNodes)) {\n          nextItem = dataArray[i + 1];\n          itemAlreadyExpanded = nextItem && nextItem.__nodeProps && nextItem.__nodeProps.parentNodeId === itemId;\n          if (!itemAlreadyExpanded) {\n            var startFrom = result.length;\n            expandByIdsWithInfo(itemNodes, config, item, result, idToIndexMap, dataMap, startFrom, nodesToExpand);\n            startIndex += result.length - startFrom;\n          }\n        } else if (item.__nodeProps.expanded && !item.__nodeProps.loading && item.__nodeProps.asyncNode && !item.__nodeProps.itemNodesCount && (!config.collapsingNodes || !config.collapsingNodes[itemId])) {\n          nodesToExpand.push(item);\n        }\n      }\n    }\n  });\n  return {\n    data: result,\n    dataMap: dataMap,\n    idToIndexMap: idToIndexMap,\n    nodesToExpand: nodesToExpand\n  };\n};\nexports.expandByIdsWithInfo = expandByIdsWithInfo;\nvar collapseByIds = function collapseByIds(dataArray, idMap) {\n  var config = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : EMPTY_OBJECT;\n  var idToIndexMap = config.idToIndexMap;\n  if (!idToIndexMap) {\n    throw new Error(\"The last argument to \\\"collapseByIds\\\" should contain a \\\"idToIndexMap\\\" property. No such property found!\");\n  }\n  var indexes = [];\n  var index;\n  for (var id in idMap) {\n    index = idToIndexMap[id];\n    if (index !== undefined) {\n      indexes.push(index);\n    }\n  }\n  return collapseAtIndexes(dataArray, indexes, config);\n};\nexports.collapseByIds = collapseByIds;\nvar collapseAtIndexWithInfo = function collapseAtIndexWithInfo(dataArray, index) {\n  var config = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : EMPTY_OBJECT;\n  var node = dataArray[index];\n  var idProperty = config.idProperty || 'id';\n  if (!node) {\n    return {\n      data: dataArray,\n      removeCount: 0\n    };\n  }\n  var parentNodeId = node[idProperty];\n  var nodesName = config.nodesName || 'nodes';\n  var nodes = node[nodesName];\n  var nextNode = dataArray[index + 1];\n  if (!Array.isArray(nodes) || !nodes.length || nextNode && (!nextNode.__nodeProps || nextNode.__nodeProps.parentNodeId !== parentNodeId)) {\n    return {\n      data: dataArray,\n      removeCount: 0\n    };\n  }\n  return {\n    data: dataArray.slice(0, index).concat(node).concat(dataArray.slice(index + nodes.length + 1)),\n    removeCount: nodes.length\n  };\n};\nexports.collapseAtIndexWithInfo = collapseAtIndexWithInfo;\nvar collapseAtIndex = function collapseAtIndex(dataArray, index) {\n  var config = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : EMPTY_OBJECT;\n  var _collapseAtIndexWithI2 = collapseAtIndexWithInfo(dataArray, index, config),\n    data = _collapseAtIndexWithI2.data;\n  return data;\n};\nexports.collapseAtIndex = collapseAtIndex;\nvar sortTreeData = function sortTreeData(sortInfo, dataArray) {\n  var _ref = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : EMPTY_OBJECT,\n    _ref$depth = _ref.depth,\n    depth = _ref$depth === void 0 ? 0 : _ref$depth,\n    deep = _ref.deep;\n  var _sortTreeDataWithInfo = sortTreeDataWithInfo(sortInfo, dataArray, depth),\n    data = _sortTreeDataWithInfo.data,\n    maxDepth = _sortTreeDataWithInfo.maxDepth;\n  if (deep) {\n    var currentDepth = depth;\n    while (currentDepth < maxDepth) {\n      currentDepth++;\n      data = sortTreeDataWithInfo(sortInfo, data, currentDepth).data;\n    }\n  }\n  return data;\n};\nexports.sortTreeData = sortTreeData;\nvar sortTreeDataWithInfo = function sortTreeDataWithInfo(sortInfo, dataArray) {\n  var depth = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n  var item;\n  var index = 0;\n  var currentDepth;\n  var currentPath;\n  var prevItemDepth = -1;\n  var _prevPath;\n  var prevMatchingDepthPath;\n  var arrayToSort;\n  var currentNodeChildren = [];\n  var map = {};\n  var sortIndexStart;\n  var maxDepth = 0;\n  while (item = dataArray[index]) {\n    currentDepth = item.__nodeProps.depth;\n    currentPath = item.__nodeProps.path;\n    maxDepth = Math.max(maxDepth, currentDepth);\n    if (currentDepth === depth) {\n      if (currentDepth > prevItemDepth) {\n        arrayToSort = [];\n        sortIndexStart = index;\n      }\n      arrayToSort.push(item);\n    }\n    if (prevItemDepth >= depth && currentDepth <= depth) {\n      if (currentNodeChildren.length) {\n        map[prevMatchingDepthPath] = currentNodeChildren;\n        currentNodeChildren = [];\n      }\n    }\n    if (currentDepth > depth) {\n      currentNodeChildren.push(item);\n    }\n    if (currentDepth < depth && arrayToSort && arrayToSort.length) {\n      (0, _sorty.default)(sortInfo, arrayToSort);\n      for (var i = 0, sortItemChildren, sortItemPath, sortItem;; i < arrayToSort.length) {\n        sortItem = arrayToSort[i];\n        if (!sortItem) {\n          break;\n        }\n        sortItemPath = sortItem.__nodeProps.path;\n        sortItemChildren = map[sortItemPath];\n        if (Array.isArray(sortItemChildren)) {\n          var _arrayToSort;\n          (_arrayToSort = arrayToSort).splice.apply(_arrayToSort, [i + 1, 0].concat((0, _toConsumableArray2.default)(sortItemChildren)));\n          i += sortItemChildren.length;\n        }\n        i++;\n      }\n      dataArray.splice.apply(dataArray, [sortIndexStart, arrayToSort.length].concat((0, _toConsumableArray2.default)(arrayToSort)));\n      arrayToSort = [];\n    }\n    index++;\n    if (currentDepth === depth) {\n      prevMatchingDepthPath = currentPath;\n    }\n    prevItemDepth = currentDepth;\n    _prevPath = currentPath;\n  }\n  if (currentNodeChildren.length) {\n    map[prevMatchingDepthPath] = currentNodeChildren;\n  }\n  if (arrayToSort && arrayToSort.length) {\n    (0, _sorty.default)(sortInfo, arrayToSort);\n    var idx = 0;\n    var _sortItemChildren;\n    var _sortItemPath;\n    var _sortItem;\n    for (;; idx < arrayToSort.length) {\n      _sortItem = arrayToSort[idx];\n      if (!_sortItem) {\n        break;\n      }\n      _sortItemPath = _sortItem.__nodeProps.path;\n      _sortItemChildren = map[_sortItemPath];\n      if (Array.isArray(_sortItemChildren)) {\n        var _arrayToSort2;\n        (_arrayToSort2 = arrayToSort).splice.apply(_arrayToSort2, [idx + 1, 0].concat((0, _toConsumableArray2.default)(_sortItemChildren)));\n        idx += _sortItemChildren.length;\n      }\n      idx++;\n    }\n    dataArray.splice.apply(dataArray, [sortIndexStart, arrayToSort.length].concat((0, _toConsumableArray2.default)(arrayToSort)));\n  }\n  return {\n    data: dataArray,\n    maxDepth: maxDepth\n  };\n};\nexports.sortTreeDataWithInfo = sortTreeDataWithInfo;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script"}