/**
 * Copyright Â© INOVUA TRADING.
 *
 * This source code is licensed under the Commercial License found in the
 * LICENSE file in the root directory of this source tree.
 */
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var editedTreeData = function editedTreeData(editProps, computedPropsRef) {
  var computedProps = computedPropsRef.current;
  if (!computedProps) {
    return null;
  }
  var originalData = computedProps.originalData;
  var nodesName = computedProps.nodesProperty;
  var rowIndex = editProps.rowIndex;
  var columnId = editProps.columnId;
  var value = editProps.value;
  var clonedData = [].concat(originalData);
  var computeData = function computeData(dataArray) {
    var result = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];
    var rowIdx = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;
    var startIndex = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;
    for (var i = 0; i < dataArray.length; i++) {
      var item = dataArray[i];
      if (item) {
        var itemNodes = item[nodesName];
        result.push(item);
        rowIdx = startIndex + i;
        if (rowIdx === rowIndex) {
          item[columnId] = value;
        }
        if (Array.isArray(itemNodes)) {
          var startFrom = result.length;
          computeData(itemNodes, result, rowIdx, startFrom);
          startIndex += result.length - startFrom;
        }
      }
    }
  };
  computeData(clonedData);
  return clonedData;
};
var _default = editedTreeData;
exports.default = _default;